{
	"id": "b0dc84552e550834377fd67796e2a4a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"stacking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nerror Staking__TransferFailed();\nerror Withdraw__TransferFailed();\nerror Staking__NeedsMoreThanZero();\n\ncontract Staking is ReentrancyGuard {\n    IERC20 public s_stakingToken;\n\n\n    mapping(address => uint256) public s_balances;\n\n    mapping(address => uint256) public s_unstackTime;\n\n    mapping(address => uint256) public s_minStackTime;\n\n    modifier moreThanZero(uint256 amount) {\n        if (amount == 0) {\n            revert Staking__NeedsMoreThanZero();\n        }\n        _;\n    }\n\n    constructor(address stakingToken) {\n        s_stakingToken = IERC20(stakingToken);\n    }\n\n    function stake(uint256 amount, uint16 stakeTime) external moreThanZero(amount) returns (string memory) {\n\n        require(amount >= 300, \"You must provide atleast 300 tokens\");\n        require(stakeTime == 3 || stakeTime == 6 || stakeTime == 12, \"The provided time is not valid. it must be 3, 6 or 12\");\n\n        uint256 currentTime = block.timestamp;\n        uint256 extraTime;\n        \n        if(stakeTime == 3){\n            extraTime =  3 * 30 days;\n            currentTime = currentTime + extraTime;\n        }\n        else if(stakeTime == 6){\n            extraTime =  6 * 30 days;\n            currentTime = currentTime + extraTime;\n        }\n        else if(stakeTime == 12){\n            extraTime =  12 * 30 days;\n            currentTime = currentTime + extraTime;\n        }\n        else{\n            return \"The provided time is not valid.\";\n        }\n\n        s_balances[msg.sender] += amount;\n        bool success = s_stakingToken.transferFrom(msg.sender, address(this), amount);\n        if (!success) {\n            revert Staking__TransferFailed();\n        }\n        \n        s_unstackTime [msg.sender] = currentTime; \n        s_minStackTime [msg.sender] = stakeTime;\n        return \"successfull\";\n        \n    }\n\n    function withdraw() external payable returns (string memory) {\n\n        uint256 balance = s_balances[msg.sender];\n\n        require(balance >= 300, \"You have not enough balance\");\n        require(s_unstackTime[msg.sender] <= block.timestamp, \"Your staking time is not completed\");\n\n        uint256 bonusTime = block.timestamp - s_unstackTime[msg.sender];\n\n        // Staking Time bonus...\n        \n        if(s_minStackTime[msg.sender] == 3){\n            balance = balance + ( (balance * 30) / 100 );\n        }\n        else if(s_minStackTime[msg.sender] == 6){\n            balance = balance + ( (balance * 60) / 100 );\n        }\n        else if(s_minStackTime[msg.sender] == 12){\n            balance = balance * 2;\n        }\n\n        // Extra holding bonus..\n\n        if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){\n            balance = balance + ( (balance * 30) / 100 );\n        }\n        else if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){\n            balance = balance + ( (balance * 60) / 100 );\n        }\n        else if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){\n            balance = balance * 2;\n        }\n        \n\n        // emit event\n        bool success = s_stakingToken.transfer(msg.sender, balance);\n        if (!success) {\n            revert Withdraw__TransferFailed();\n        }\n        \n        s_balances[msg.sender] = 0;\n        s_unstackTime[msg.sender] = 0;\n        s_minStackTime[msg.sender] = 0;\n\n\n        return \"Success\";\n    }\n\n    function getStaked(address account) public view returns (uint256) {\n        return s_balances[account];\n    }\n\n    function checkBalance (address account) public view returns (uint256) {\n        return s_stakingToken.balanceOf(account);\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"stacking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "Staking__NeedsMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Staking__TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Withdraw__TransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "checkBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_minStackTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_unstackTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "stakeTime",
									"type": "uint16"
								}
							],
							"name": "stake",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"stacking.sol\":283:3764  contract Staking is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"stacking.sol\":672:760  constructor(address stakingToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"stacking.sol\":740:752  stakingToken */\n  dup1\n    /* \"stacking.sol\":716:730  s_stakingToken */\n  0x01\n  0x00\n    /* \"stacking.sol\":716:753  s_stakingToken = IERC20(stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"stacking.sol\":672:760  constructor(address stakingToken) {... */\n  pop\n    /* \"stacking.sol\":283:3764  contract Staking is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":932:1051   */\ntag_29:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_31\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"stacking.sol\":283:3764  contract Staking is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"stacking.sol\":283:3764  contract Staking is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x58fe020c\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x58fe020c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5f515226\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xab32eb69\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xadca9b72\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x399080ec\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42ea02c1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x483174b6\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"stacking.sol\":3520:3629  function getStaked(address account) public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":1994:3514  function withdraw() external payable returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":766:1988  function stake(uint256 amount, uint16 stakeTime) external moreThanZero(amount) returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":413:461  mapping(address => uint256) public s_unstackTime */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":468:517  mapping(address => uint256) public s_minStackTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":3635:3762  function checkBalance (address account) public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":361:406  mapping(address => uint256) public s_balances */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":325:353  IERC20 public s_stakingToken */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stacking.sol\":3520:3629  function getStaked(address account) public view returns (uint256) {... */\n    tag_15:\n        /* \"stacking.sol\":3577:3584  uint256 */\n      0x00\n        /* \"stacking.sol\":3603:3613  s_balances */\n      0x02\n        /* \"stacking.sol\":3603:3622  s_balances[account] */\n      0x00\n        /* \"stacking.sol\":3614:3621  account */\n      dup4\n        /* \"stacking.sol\":3603:3622  s_balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stacking.sol\":3596:3622  return s_balances[account] */\n      swap1\n      pop\n        /* \"stacking.sol\":3520:3629  function getStaked(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"stacking.sol\":1994:3514  function withdraw() external payable returns (string memory) {... */\n    tag_19:\n        /* \"stacking.sol\":2040:2053  string memory */\n      0x60\n        /* \"stacking.sol\":2066:2081  uint256 balance */\n      0x00\n        /* \"stacking.sol\":2084:2094  s_balances */\n      0x02\n        /* \"stacking.sol\":2084:2106  s_balances[msg.sender] */\n      0x00\n        /* \"stacking.sol\":2095:2105  msg.sender */\n      caller\n        /* \"stacking.sol\":2084:2106  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stacking.sol\":2066:2106  uint256 balance = s_balances[msg.sender] */\n      swap1\n      pop\n        /* \"stacking.sol\":2136:2139  300 */\n      0x012c\n        /* \"stacking.sol\":2125:2132  balance */\n      dup2\n        /* \"stacking.sol\":2125:2139  balance >= 300 */\n      lt\n      iszero\n        /* \"stacking.sol\":2117:2171  require(balance >= 300, \"You have not enough balance\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"stacking.sol\":2218:2233  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":2189:2202  s_unstackTime */\n      0x03\n        /* \"stacking.sol\":2189:2214  s_unstackTime[msg.sender] */\n      0x00\n        /* \"stacking.sol\":2203:2213  msg.sender */\n      caller\n        /* \"stacking.sol\":2189:2214  s_unstackTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stacking.sol\":2189:2233  s_unstackTime[msg.sender] <= block.timestamp */\n      gt\n      iszero\n        /* \"stacking.sol\":2181:2272  require(s_unstackTime[msg.sender] <= block.timestamp, \"Your staking time is not completed\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"stacking.sol\":2283:2300  uint256 bonusTime */\n      0x00\n        /* \"stacking.sol\":2321:2334  s_unstackTime */\n      0x03\n        /* \"stacking.sol\":2321:2346  s_unstackTime[msg.sender] */\n      0x00\n        /* \"stacking.sol\":2335:2345  msg.sender */\n      caller\n        /* \"stacking.sol\":2321:2346  s_unstackTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stacking.sol\":2303:2318  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":2303:2346  block.timestamp - s_unstackTime[msg.sender] */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"stacking.sol\":2283:2346  uint256 bonusTime = block.timestamp - s_unstackTime[msg.sender] */\n      swap1\n      pop\n        /* \"stacking.sol\":2432:2433  3 */\n      0x03\n        /* \"stacking.sol\":2402:2416  s_minStackTime */\n      0x04\n        /* \"stacking.sol\":2402:2428  s_minStackTime[msg.sender] */\n      0x00\n        /* \"stacking.sol\":2417:2427  msg.sender */\n      caller\n        /* \"stacking.sol\":2402:2428  s_minStackTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stacking.sol\":2402:2433  s_minStackTime[msg.sender] == 3 */\n      sub\n        /* \"stacking.sol\":2399:2717  if(s_minStackTime[msg.sender] == 3){... */\n      tag_63\n      jumpi\n        /* \"stacking.sol\":2487:2490  100 */\n      0x64\n        /* \"stacking.sol\":2481:2483  30 */\n      0x1e\n        /* \"stacking.sol\":2471:2478  balance */\n      dup4\n        /* \"stacking.sol\":2471:2483  balance * 30 */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"stacking.sol\":2470:2490  (balance * 30) / 100 */\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"stacking.sol\":2458:2465  balance */\n      dup3\n        /* \"stacking.sol\":2458:2492  balance + ( (balance * 30) / 100 ) */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"stacking.sol\":2448:2492  balance = balance + ( (balance * 30) / 100 ) */\n      swap2\n      pop\n        /* \"stacking.sol\":2399:2717  if(s_minStackTime[msg.sender] == 3){... */\n      jump(tag_70)\n    tag_63:\n        /* \"stacking.sol\":2550:2551  6 */\n      0x06\n        /* \"stacking.sol\":2520:2534  s_minStackTime */\n      0x04\n        /* \"stacking.sol\":2520:2546  s_minStackTime[msg.sender] */\n      0x00\n        /* \"stacking.sol\":2535:2545  msg.sender */\n      caller\n        /* \"stacking.sol\":2520:2546  s_minStackTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stacking.sol\":2520:2551  s_minStackTime[msg.sender] == 6 */\n      sub\n        /* \"stacking.sol\":2517:2717  if(s_minStackTime[msg.sender] == 6){... */\n      tag_71\n      jumpi\n        /* \"stacking.sol\":2605:2608  100 */\n      0x64\n        /* \"stacking.sol\":2599:2601  60 */\n      0x3c\n        /* \"stacking.sol\":2589:2596  balance */\n      dup4\n        /* \"stacking.sol\":2589:2601  balance * 60 */\n      tag_72\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_72:\n        /* \"stacking.sol\":2588:2608  (balance * 60) / 100 */\n      tag_73\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_73:\n        /* \"stacking.sol\":2576:2583  balance */\n      dup3\n        /* \"stacking.sol\":2576:2610  balance + ( (balance * 60) / 100 ) */\n      tag_74\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_74:\n        /* \"stacking.sol\":2566:2610  balance = balance + ( (balance * 60) / 100 ) */\n      swap2\n      pop\n        /* \"stacking.sol\":2517:2717  if(s_minStackTime[msg.sender] == 6){... */\n      jump(tag_75)\n    tag_71:\n        /* \"stacking.sol\":2668:2670  12 */\n      0x0c\n        /* \"stacking.sol\":2638:2652  s_minStackTime */\n      0x04\n        /* \"stacking.sol\":2638:2664  s_minStackTime[msg.sender] */\n      0x00\n        /* \"stacking.sol\":2653:2663  msg.sender */\n      caller\n        /* \"stacking.sol\":2638:2664  s_minStackTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"stacking.sol\":2638:2670  s_minStackTime[msg.sender] == 12 */\n      sub\n        /* \"stacking.sol\":2635:2717  if(s_minStackTime[msg.sender] == 12){... */\n      tag_76\n      jumpi\n        /* \"stacking.sol\":2705:2706  2 */\n      0x02\n        /* \"stacking.sol\":2695:2702  balance */\n      dup3\n        /* \"stacking.sol\":2695:2706  balance * 2 */\n      tag_77\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_77:\n        /* \"stacking.sol\":2685:2706  balance = balance * 2 */\n      swap2\n      pop\n        /* \"stacking.sol\":2635:2717  if(s_minStackTime[msg.sender] == 12){... */\n    tag_76:\n        /* \"stacking.sol\":2517:2717  if(s_minStackTime[msg.sender] == 6){... */\n    tag_75:\n        /* \"stacking.sol\":2399:2717  if(s_minStackTime[msg.sender] == 3){... */\n    tag_70:\n        /* \"stacking.sol\":2812:2827  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":2797:2807  3* 30 days */\n      0x76a700\n        /* \"stacking.sol\":2778:2793  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":2778:2808  block.timestamp + (3* 30 days) */\n      tag_78\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_78:\n        /* \"stacking.sol\":2777:2827  (block.timestamp + (3* 30 days)) - block.timestamp */\n      tag_79\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_79:\n        /* \"stacking.sol\":2764:2773  bonusTime */\n      dup2\n        /* \"stacking.sol\":2764:2827  bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp */\n      lt\n        /* \"stacking.sol\":2761:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n      tag_80\n      jumpi\n        /* \"stacking.sol\":2881:2884  100 */\n      0x64\n        /* \"stacking.sol\":2875:2877  30 */\n      0x1e\n        /* \"stacking.sol\":2865:2872  balance */\n      dup4\n        /* \"stacking.sol\":2865:2877  balance * 30 */\n      tag_81\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_81:\n        /* \"stacking.sol\":2864:2884  (balance * 30) / 100 */\n      tag_82\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_82:\n        /* \"stacking.sol\":2852:2859  balance */\n      dup3\n        /* \"stacking.sol\":2852:2886  balance + ( (balance * 30) / 100 ) */\n      tag_83\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_83:\n        /* \"stacking.sol\":2842:2886  balance = balance + ( (balance * 30) / 100 ) */\n      swap2\n      pop\n        /* \"stacking.sol\":2761:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n      jump(tag_84)\n    tag_80:\n        /* \"stacking.sol\":2962:2977  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":2947:2957  3* 30 days */\n      0x76a700\n        /* \"stacking.sol\":2928:2943  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":2928:2958  block.timestamp + (3* 30 days) */\n      tag_85\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_85:\n        /* \"stacking.sol\":2927:2977  (block.timestamp + (3* 30 days)) - block.timestamp */\n      tag_86\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_86:\n        /* \"stacking.sol\":2914:2923  bonusTime */\n      dup2\n        /* \"stacking.sol\":2914:2977  bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp */\n      lt\n        /* \"stacking.sol\":2911:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n      tag_87\n      jumpi\n        /* \"stacking.sol\":3031:3034  100 */\n      0x64\n        /* \"stacking.sol\":3025:3027  60 */\n      0x3c\n        /* \"stacking.sol\":3015:3022  balance */\n      dup4\n        /* \"stacking.sol\":3015:3027  balance * 60 */\n      tag_88\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_88:\n        /* \"stacking.sol\":3014:3034  (balance * 60) / 100 */\n      tag_89\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_89:\n        /* \"stacking.sol\":3002:3009  balance */\n      dup3\n        /* \"stacking.sol\":3002:3036  balance + ( (balance * 60) / 100 ) */\n      tag_90\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_90:\n        /* \"stacking.sol\":2992:3036  balance = balance + ( (balance * 60) / 100 ) */\n      swap2\n      pop\n        /* \"stacking.sol\":2911:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n      jump(tag_91)\n    tag_87:\n        /* \"stacking.sol\":3112:3127  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":3097:3107  3* 30 days */\n      0x76a700\n        /* \"stacking.sol\":3078:3093  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":3078:3108  block.timestamp + (3* 30 days) */\n      tag_92\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_92:\n        /* \"stacking.sol\":3077:3127  (block.timestamp + (3* 30 days)) - block.timestamp */\n      tag_93\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_93:\n        /* \"stacking.sol\":3064:3073  bonusTime */\n      dup2\n        /* \"stacking.sol\":3064:3127  bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp */\n      lt\n        /* \"stacking.sol\":3061:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n      tag_94\n      jumpi\n        /* \"stacking.sol\":3162:3163  2 */\n      0x02\n        /* \"stacking.sol\":3152:3159  balance */\n      dup3\n        /* \"stacking.sol\":3152:3163  balance * 2 */\n      tag_95\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_95:\n        /* \"stacking.sol\":3142:3163  balance = balance * 2 */\n      swap2\n      pop\n        /* \"stacking.sol\":3061:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n    tag_94:\n        /* \"stacking.sol\":2911:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n    tag_91:\n        /* \"stacking.sol\":2761:3174  if(bonusTime >= (block.timestamp + (3* 30 days)) - block.timestamp){... */\n    tag_84:\n        /* \"stacking.sol\":3215:3227  bool success */\n      0x00\n        /* \"stacking.sol\":3230:3244  s_stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stacking.sol\":3230:3253  s_stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"stacking.sol\":3254:3264  msg.sender */\n      caller\n        /* \"stacking.sol\":3266:3273  balance */\n      dup6\n        /* \"stacking.sol\":3230:3274  s_stakingToken.transfer(msg.sender, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"stacking.sol\":3215:3274  bool success = s_stakingToken.transfer(msg.sender, balance) */\n      swap1\n      pop\n        /* \"stacking.sol\":3289:3296  success */\n      dup1\n        /* \"stacking.sol\":3284:3356  if (!success) {... */\n      tag_102\n      jumpi\n        /* \"stacking.sol\":3319:3345  Withdraw__TransferFailed() */\n      mload(0x40)\n      0x8ecca7d100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"stacking.sol\":3284:3356  if (!success) {... */\n    tag_102:\n        /* \"stacking.sol\":3399:3400  0 */\n      0x00\n        /* \"stacking.sol\":3374:3384  s_balances */\n      0x02\n        /* \"stacking.sol\":3374:3396  s_balances[msg.sender] */\n      0x00\n        /* \"stacking.sol\":3385:3395  msg.sender */\n      caller\n        /* \"stacking.sol\":3374:3396  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stacking.sol\":3374:3400  s_balances[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stacking.sol\":3438:3439  0 */\n      0x00\n        /* \"stacking.sol\":3410:3423  s_unstackTime */\n      0x03\n        /* \"stacking.sol\":3410:3435  s_unstackTime[msg.sender] */\n      0x00\n        /* \"stacking.sol\":3424:3434  msg.sender */\n      caller\n        /* \"stacking.sol\":3410:3435  s_unstackTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stacking.sol\":3410:3439  s_unstackTime[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stacking.sol\":3478:3479  0 */\n      0x00\n        /* \"stacking.sol\":3449:3463  s_minStackTime */\n      0x04\n        /* \"stacking.sol\":3449:3475  s_minStackTime[msg.sender] */\n      0x00\n        /* \"stacking.sol\":3464:3474  msg.sender */\n      caller\n        /* \"stacking.sol\":3449:3475  s_minStackTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stacking.sol\":3449:3479  s_minStackTime[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stacking.sol\":3491:3507  return \"Success\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      0x5375636365737300000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"stacking.sol\":1994:3514  function withdraw() external payable returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"stacking.sol\":766:1988  function stake(uint256 amount, uint16 stakeTime) external moreThanZero(amount) returns (string memory) {... */\n    tag_26:\n        /* \"stacking.sol\":854:867  string memory */\n      0x60\n        /* \"stacking.sol\":837:843  amount */\n      dup3\n        /* \"stacking.sol\":586:587  0 */\n      0x00\n        /* \"stacking.sol\":576:582  amount */\n      dup2\n        /* \"stacking.sol\":576:587  amount == 0 */\n      sub\n        /* \"stacking.sol\":572:649  if (amount == 0) {... */\n      tag_104\n      jumpi\n        /* \"stacking.sol\":610:638  Staking__NeedsMoreThanZero() */\n      mload(0x40)\n      0x9b677fa000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"stacking.sol\":572:649  if (amount == 0) {... */\n    tag_104:\n        /* \"stacking.sol\":898:901  300 */\n      0x012c\n        /* \"stacking.sol\":888:894  amount */\n      dup5\n        /* \"stacking.sol\":888:901  amount >= 300 */\n      lt\n      iszero\n        /* \"stacking.sol\":880:941  require(amount >= 300, \"You must provide atleast 300 tokens\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"stacking.sol\":972:973  3 */\n      0x03\n        /* \"stacking.sol\":959:968  stakeTime */\n      dup4\n        /* \"stacking.sol\":959:973  stakeTime == 3 */\n      0xffff\n      and\n      eq\n        /* \"stacking.sol\":959:991  stakeTime == 3 || stakeTime == 6 */\n      dup1\n      tag_109\n      jumpi\n      pop\n        /* \"stacking.sol\":990:991  6 */\n      0x06\n        /* \"stacking.sol\":977:986  stakeTime */\n      dup4\n        /* \"stacking.sol\":977:991  stakeTime == 6 */\n      0xffff\n      and\n      eq\n        /* \"stacking.sol\":959:991  stakeTime == 3 || stakeTime == 6 */\n    tag_109:\n        /* \"stacking.sol\":959:1010  stakeTime == 3 || stakeTime == 6 || stakeTime == 12 */\n      dup1\n      tag_110\n      jumpi\n      pop\n        /* \"stacking.sol\":1008:1010  12 */\n      0x0c\n        /* \"stacking.sol\":995:1004  stakeTime */\n      dup4\n        /* \"stacking.sol\":995:1010  stakeTime == 12 */\n      0xffff\n      and\n      eq\n        /* \"stacking.sol\":959:1010  stakeTime == 3 || stakeTime == 6 || stakeTime == 12 */\n    tag_110:\n        /* \"stacking.sol\":951:1068  require(stakeTime == 3 || stakeTime == 6 || stakeTime == 12, \"The provided time is not valid. it must be 3, 6 or 12\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"stacking.sol\":1079:1098  uint256 currentTime */\n      0x00\n        /* \"stacking.sol\":1101:1116  block.timestamp */\n      timestamp\n        /* \"stacking.sol\":1079:1116  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"stacking.sol\":1126:1143  uint256 extraTime */\n      0x00\n        /* \"stacking.sol\":1178:1179  3 */\n      0x03\n        /* \"stacking.sol\":1165:1174  stakeTime */\n      dup6\n        /* \"stacking.sol\":1165:1179  stakeTime == 3 */\n      0xffff\n      and\n      sub\n        /* \"stacking.sol\":1162:1624  if(stakeTime == 3){... */\n      tag_114\n      jumpi\n        /* \"stacking.sol\":1207:1218  3 * 30 days */\n      0x76a700\n        /* \"stacking.sol\":1194:1218  extraTime =  3 * 30 days */\n      swap1\n      pop\n        /* \"stacking.sol\":1260:1269  extraTime */\n      dup1\n        /* \"stacking.sol\":1246:1257  currentTime */\n      dup3\n        /* \"stacking.sol\":1246:1269  currentTime + extraTime */\n      tag_115\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_115:\n        /* \"stacking.sol\":1232:1269  currentTime = currentTime + extraTime */\n      swap2\n      pop\n        /* \"stacking.sol\":1162:1624  if(stakeTime == 3){... */\n      jump(tag_116)\n    tag_114:\n        /* \"stacking.sol\":1310:1311  6 */\n      0x06\n        /* \"stacking.sol\":1297:1306  stakeTime */\n      dup6\n        /* \"stacking.sol\":1297:1311  stakeTime == 6 */\n      0xffff\n      and\n      sub\n        /* \"stacking.sol\":1294:1624  if(stakeTime == 6){... */\n      tag_117\n      jumpi\n        /* \"stacking.sol\":1339:1350  6 * 30 days */\n      0xed4e00\n        /* \"stacking.sol\":1326:1350  extraTime =  6 * 30 days */\n      swap1\n      pop\n        /* \"stacking.sol\":1392:1401  extraTime */\n      dup1\n        /* \"stacking.sol\":1378:1389  currentTime */\n      dup3\n        /* \"stacking.sol\":1378:1401  currentTime + extraTime */\n      tag_118\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_118:\n        /* \"stacking.sol\":1364:1401  currentTime = currentTime + extraTime */\n      swap2\n      pop\n        /* \"stacking.sol\":1294:1624  if(stakeTime == 6){... */\n      jump(tag_119)\n    tag_117:\n        /* \"stacking.sol\":1442:1444  12 */\n      0x0c\n        /* \"stacking.sol\":1429:1438  stakeTime */\n      dup6\n        /* \"stacking.sol\":1429:1444  stakeTime == 12 */\n      0xffff\n      and\n      sub\n        /* \"stacking.sol\":1426:1624  if(stakeTime == 12){... */\n      tag_120\n      jumpi\n        /* \"stacking.sol\":1472:1484  12 * 30 days */\n      0x01da9c00\n        /* \"stacking.sol\":1459:1484  extraTime =  12 * 30 days */\n      swap1\n      pop\n        /* \"stacking.sol\":1526:1535  extraTime */\n      dup1\n        /* \"stacking.sol\":1512:1523  currentTime */\n      dup3\n        /* \"stacking.sol\":1512:1535  currentTime + extraTime */\n      tag_121\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"stacking.sol\":1498:1535  currentTime = currentTime + extraTime */\n      swap2\n      pop\n        /* \"stacking.sol\":1426:1624  if(stakeTime == 12){... */\n      jump(tag_122)\n    tag_120:\n        /* \"stacking.sol\":1573:1613  return \"The provided time is not valid.\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      0x5468652070726f76696465642074696d65206973206e6f742076616c69642e00\n      dup2\n      mstore\n      pop\n      swap4\n      pop\n      pop\n      pop\n      jump(tag_105)\n        /* \"stacking.sol\":1426:1624  if(stakeTime == 12){... */\n    tag_122:\n        /* \"stacking.sol\":1294:1624  if(stakeTime == 6){... */\n    tag_119:\n        /* \"stacking.sol\":1162:1624  if(stakeTime == 3){... */\n    tag_116:\n        /* \"stacking.sol\":1660:1666  amount */\n      dup6\n        /* \"stacking.sol\":1634:1644  s_balances */\n      0x02\n        /* \"stacking.sol\":1634:1656  s_balances[msg.sender] */\n      0x00\n        /* \"stacking.sol\":1645:1655  msg.sender */\n      caller\n        /* \"stacking.sol\":1634:1656  s_balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"stacking.sol\":1634:1666  s_balances[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stacking.sol\":1676:1688  bool success */\n      0x00\n        /* \"stacking.sol\":1691:1705  s_stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stacking.sol\":1691:1718  s_stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"stacking.sol\":1719:1729  msg.sender */\n      caller\n        /* \"stacking.sol\":1739:1743  this */\n      address\n        /* \"stacking.sol\":1746:1752  amount */\n      dup11\n        /* \"stacking.sol\":1691:1753  s_stakingToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_128:\n        /* \"stacking.sol\":1676:1753  bool success = s_stakingToken.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"stacking.sol\":1768:1775  success */\n      dup1\n        /* \"stacking.sol\":1763:1834  if (!success) {... */\n      tag_129\n      jumpi\n        /* \"stacking.sol\":1798:1823  Staking__TransferFailed() */\n      mload(0x40)\n      0xeb4c684700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"stacking.sol\":1763:1834  if (!success) {... */\n    tag_129:\n        /* \"stacking.sol\":1881:1892  currentTime */\n      dup3\n        /* \"stacking.sol\":1852:1865  s_unstackTime */\n      0x03\n        /* \"stacking.sol\":1852:1878  s_unstackTime [msg.sender] */\n      0x00\n        /* \"stacking.sol\":1867:1877  msg.sender */\n      caller\n        /* \"stacking.sol\":1852:1878  s_unstackTime [msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stacking.sol\":1852:1892  s_unstackTime [msg.sender] = currentTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stacking.sol\":1933:1942  stakeTime */\n      dup6\n        /* \"stacking.sol\":1903:1942  s_minStackTime [msg.sender] = stakeTime */\n      0xffff\n      and\n        /* \"stacking.sol\":1903:1917  s_minStackTime */\n      0x04\n        /* \"stacking.sol\":1903:1930  s_minStackTime [msg.sender] */\n      0x00\n        /* \"stacking.sol\":1919:1929  msg.sender */\n      caller\n        /* \"stacking.sol\":1903:1930  s_minStackTime [msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"stacking.sol\":1903:1942  s_minStackTime [msg.sender] = stakeTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"stacking.sol\":1952:1972  return \"successfull\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x7375636365737366756c6c000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"stacking.sol\":658:659  _ */\n    tag_105:\n        /* \"stacking.sol\":766:1988  function stake(uint256 amount, uint16 stakeTime) external moreThanZero(amount) returns (string memory) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"stacking.sol\":413:461  mapping(address => uint256) public s_unstackTime */\n    tag_31:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"stacking.sol\":468:517  mapping(address => uint256) public s_minStackTime */\n    tag_36:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"stacking.sol\":3635:3762  function checkBalance (address account) public view returns (uint256) {... */\n    tag_41:\n        /* \"stacking.sol\":3696:3703  uint256 */\n      0x00\n        /* \"stacking.sol\":3722:3736  s_stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"stacking.sol\":3722:3746  s_stakingToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"stacking.sol\":3747:3754  account */\n      dup4\n        /* \"stacking.sol\":3722:3755  s_stakingToken.balanceOf(account) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"stacking.sol\":3715:3755  return s_stakingToken.balanceOf(account) */\n      swap1\n      pop\n        /* \"stacking.sol\":3635:3762  function checkBalance (address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"stacking.sol\":361:406  mapping(address => uint256) public s_balances */\n    tag_46:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"stacking.sol\":325:353  IERC20 public s_stakingToken */\n    tag_50:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_138:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_140:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_141:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_182\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_140\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_142:\n        /* \"#utility.yul\":641:665   */\n      tag_184\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_141\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_185:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_143:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_187\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_190\n      tag_138\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":917:1036   */\n    tag_189:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_191\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_143\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_144:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_145:\n        /* \"#utility.yul\":1346:1370   */\n      tag_194\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_144\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_17:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_196\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_145\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1710   */\n    tag_146:\n        /* \"#utility.yul\":1663:1669   */\n      0x00\n        /* \"#utility.yul\":1697:1702   */\n      dup2\n        /* \"#utility.yul\":1691:1703   */\n      mload\n        /* \"#utility.yul\":1681:1703   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1885   */\n    tag_147:\n        /* \"#utility.yul\":1800:1811   */\n      0x00\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1829:1832   */\n      dup3\n        /* \"#utility.yul\":1822:1841   */\n      mstore\n        /* \"#utility.yul\":1874:1878   */\n      0x20\n        /* \"#utility.yul\":1869:1872   */\n      dup3\n        /* \"#utility.yul\":1865:1879   */\n      add\n        /* \"#utility.yul\":1850:1879   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:1885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2030   */\n    tag_148:\n        /* \"#utility.yul\":1980:1986   */\n      dup3\n        /* \"#utility.yul\":1975:1978   */\n      dup2\n        /* \"#utility.yul\":1970:1973   */\n      dup4\n        /* \"#utility.yul\":1964:1987   */\n      mcopy\n        /* \"#utility.yul\":2021:2022   */\n      0x00\n        /* \"#utility.yul\":2012:2018   */\n      dup4\n        /* \"#utility.yul\":2007:2010   */\n      dup4\n        /* \"#utility.yul\":2003:2019   */\n      add\n        /* \"#utility.yul\":1996:2023   */\n      mstore\n        /* \"#utility.yul\":1891:2030   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2036:2138   */\n    tag_149:\n        /* \"#utility.yul\":2077:2083   */\n      0x00\n        /* \"#utility.yul\":2128:2130   */\n      0x1f\n        /* \"#utility.yul\":2124:2131   */\n      not\n        /* \"#utility.yul\":2119:2121   */\n      0x1f\n        /* \"#utility.yul\":2112:2117   */\n      dup4\n        /* \"#utility.yul\":2108:2122   */\n      add\n        /* \"#utility.yul\":2104:2132   */\n      and\n        /* \"#utility.yul\":2094:2132   */\n      swap1\n      pop\n        /* \"#utility.yul\":2036:2138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2144:2521   */\n    tag_150:\n        /* \"#utility.yul\":2232:2235   */\n      0x00\n        /* \"#utility.yul\":2260:2299   */\n      tag_202\n        /* \"#utility.yul\":2293:2298   */\n      dup3\n        /* \"#utility.yul\":2260:2299   */\n      tag_146\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2315:2386   */\n      tag_203\n        /* \"#utility.yul\":2379:2385   */\n      dup2\n        /* \"#utility.yul\":2374:2377   */\n      dup6\n        /* \"#utility.yul\":2315:2386   */\n      tag_147\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2308:2386   */\n      swap4\n      pop\n        /* \"#utility.yul\":2395:2460   */\n      tag_204\n        /* \"#utility.yul\":2453:2459   */\n      dup2\n        /* \"#utility.yul\":2448:2451   */\n      dup6\n        /* \"#utility.yul\":2441:2445   */\n      0x20\n        /* \"#utility.yul\":2434:2439   */\n      dup7\n        /* \"#utility.yul\":2430:2446   */\n      add\n        /* \"#utility.yul\":2395:2460   */\n      tag_148\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2485:2514   */\n      tag_205\n        /* \"#utility.yul\":2507:2513   */\n      dup2\n        /* \"#utility.yul\":2485:2514   */\n      tag_149\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2480:2483   */\n      dup5\n        /* \"#utility.yul\":2476:2515   */\n      add\n        /* \"#utility.yul\":2469:2515   */\n      swap2\n      pop\n        /* \"#utility.yul\":2236:2521   */\n      pop\n        /* \"#utility.yul\":2144:2521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2527:2840   */\n    tag_21:\n        /* \"#utility.yul\":2640:2644   */\n      0x00\n        /* \"#utility.yul\":2678:2680   */\n      0x20\n        /* \"#utility.yul\":2667:2676   */\n      dup3\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2655:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2727:2736   */\n      dup2\n        /* \"#utility.yul\":2721:2725   */\n      dup2\n        /* \"#utility.yul\":2717:2737   */\n      sub\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2702:2711   */\n      dup4\n        /* \"#utility.yul\":2698:2715   */\n      add\n        /* \"#utility.yul\":2691:2738   */\n      mstore\n        /* \"#utility.yul\":2755:2833   */\n      tag_207\n        /* \"#utility.yul\":2828:2832   */\n      dup2\n        /* \"#utility.yul\":2819:2825   */\n      dup5\n        /* \"#utility.yul\":2755:2833   */\n      tag_150\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2747:2833   */\n      swap1\n      pop\n        /* \"#utility.yul\":2527:2840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2968   */\n    tag_151:\n        /* \"#utility.yul\":2919:2943   */\n      tag_209\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2919:2943   */\n      tag_144\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2909:2944   */\n      eq\n        /* \"#utility.yul\":2899:2962   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      dup1\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2899:2962   */\n    tag_210:\n        /* \"#utility.yul\":2846:2968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3113   */\n    tag_152:\n        /* \"#utility.yul\":3020:3025   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3045:3065   */\n      calldataload\n        /* \"#utility.yul\":3036:3065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3107   */\n      tag_212\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3074:3107   */\n      tag_151\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2974:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3208   */\n    tag_153:\n        /* \"#utility.yul\":3155:3162   */\n      0x00\n        /* \"#utility.yul\":3195:3201   */\n      0xffff\n        /* \"#utility.yul\":3188:3193   */\n      dup3\n        /* \"#utility.yul\":3184:3202   */\n      and\n        /* \"#utility.yul\":3173:3202   */\n      swap1\n      pop\n        /* \"#utility.yul\":3119:3208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3214:3334   */\n    tag_154:\n        /* \"#utility.yul\":3286:3309   */\n      tag_215\n        /* \"#utility.yul\":3303:3308   */\n      dup2\n        /* \"#utility.yul\":3286:3309   */\n      tag_153\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3279:3284   */\n      dup2\n        /* \"#utility.yul\":3276:3310   */\n      eq\n        /* \"#utility.yul\":3266:3328   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":3324:3325   */\n      0x00\n        /* \"#utility.yul\":3321:3322   */\n      dup1\n        /* \"#utility.yul\":3314:3326   */\n      revert\n        /* \"#utility.yul\":3266:3328   */\n    tag_216:\n        /* \"#utility.yul\":3214:3334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3340:3477   */\n    tag_155:\n        /* \"#utility.yul\":3385:3390   */\n      0x00\n        /* \"#utility.yul\":3423:3429   */\n      dup2\n        /* \"#utility.yul\":3410:3430   */\n      calldataload\n        /* \"#utility.yul\":3401:3430   */\n      swap1\n      pop\n        /* \"#utility.yul\":3439:3471   */\n      tag_218\n        /* \"#utility.yul\":3465:3470   */\n      dup2\n        /* \"#utility.yul\":3439:3471   */\n      tag_154\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3340:3477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3483:3955   */\n    tag_25:\n        /* \"#utility.yul\":3550:3556   */\n      0x00\n        /* \"#utility.yul\":3558:3564   */\n      dup1\n        /* \"#utility.yul\":3607:3609   */\n      0x40\n        /* \"#utility.yul\":3595:3604   */\n      dup4\n        /* \"#utility.yul\":3586:3593   */\n      dup6\n        /* \"#utility.yul\":3582:3605   */\n      sub\n        /* \"#utility.yul\":3578:3610   */\n      slt\n        /* \"#utility.yul\":3575:3694   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":3613:3692   */\n      tag_221\n      tag_138\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3575:3694   */\n    tag_220:\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3758:3811   */\n      tag_222\n        /* \"#utility.yul\":3803:3810   */\n      dup6\n        /* \"#utility.yul\":3794:3800   */\n      dup3\n        /* \"#utility.yul\":3783:3792   */\n      dup7\n        /* \"#utility.yul\":3779:3801   */\n      add\n        /* \"#utility.yul\":3758:3811   */\n      tag_152\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3748:3811   */\n      swap3\n      pop\n        /* \"#utility.yul\":3704:3821   */\n      pop\n        /* \"#utility.yul\":3860:3862   */\n      0x20\n        /* \"#utility.yul\":3886:3938   */\n      tag_223\n        /* \"#utility.yul\":3930:3937   */\n      dup6\n        /* \"#utility.yul\":3921:3927   */\n      dup3\n        /* \"#utility.yul\":3910:3919   */\n      dup7\n        /* \"#utility.yul\":3906:3928   */\n      add\n        /* \"#utility.yul\":3886:3938   */\n      tag_155\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3876:3938   */\n      swap2\n      pop\n        /* \"#utility.yul\":3831:3948   */\n      pop\n        /* \"#utility.yul\":3483:3955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4021   */\n    tag_156:\n        /* \"#utility.yul\":3989:3992   */\n      0x00\n        /* \"#utility.yul\":4010:4015   */\n      dup2\n        /* \"#utility.yul\":4003:4015   */\n      swap1\n      pop\n        /* \"#utility.yul\":3961:4021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4027:4169   */\n    tag_157:\n        /* \"#utility.yul\":4077:4086   */\n      0x00\n        /* \"#utility.yul\":4110:4163   */\n      tag_226\n        /* \"#utility.yul\":4128:4162   */\n      tag_227\n        /* \"#utility.yul\":4137:4161   */\n      tag_228\n        /* \"#utility.yul\":4155:4160   */\n      dup5\n        /* \"#utility.yul\":4137:4161   */\n      tag_140\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4128:4162   */\n      tag_156\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4110:4163   */\n      tag_140\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4097:4163   */\n      swap1\n      pop\n        /* \"#utility.yul\":4027:4169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4301   */\n    tag_158:\n        /* \"#utility.yul\":4225:4234   */\n      0x00\n        /* \"#utility.yul\":4258:4295   */\n      tag_230\n        /* \"#utility.yul\":4289:4294   */\n      dup3\n        /* \"#utility.yul\":4258:4295   */\n      tag_157\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4245:4295   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4447   */\n    tag_159:\n        /* \"#utility.yul\":4371:4380   */\n      0x00\n        /* \"#utility.yul\":4404:4441   */\n      tag_232\n        /* \"#utility.yul\":4435:4440   */\n      dup3\n        /* \"#utility.yul\":4404:4441   */\n      tag_158\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4391:4441   */\n      swap1\n      pop\n        /* \"#utility.yul\":4307:4447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4453:4612   */\n    tag_160:\n        /* \"#utility.yul\":4554:4605   */\n      tag_234\n        /* \"#utility.yul\":4599:4604   */\n      dup2\n        /* \"#utility.yul\":4554:4605   */\n      tag_159\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4549:4552   */\n      dup3\n        /* \"#utility.yul\":4542:4606   */\n      mstore\n        /* \"#utility.yul\":4453:4612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4618:4868   */\n    tag_52:\n        /* \"#utility.yul\":4725:4729   */\n      0x00\n        /* \"#utility.yul\":4763:4765   */\n      0x20\n        /* \"#utility.yul\":4752:4761   */\n      dup3\n        /* \"#utility.yul\":4748:4766   */\n      add\n        /* \"#utility.yul\":4740:4766   */\n      swap1\n      pop\n        /* \"#utility.yul\":4776:4861   */\n      tag_236\n        /* \"#utility.yul\":4858:4859   */\n      0x00\n        /* \"#utility.yul\":4847:4856   */\n      dup4\n        /* \"#utility.yul\":4843:4860   */\n      add\n        /* \"#utility.yul\":4834:4840   */\n      dup5\n        /* \"#utility.yul\":4776:4861   */\n      tag_160\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4618:4868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4874:5051   */\n    tag_161:\n        /* \"#utility.yul\":5014:5043   */\n      0x596f752068617665206e6f7420656e6f7567682062616c616e63650000000000\n        /* \"#utility.yul\":5010:5011   */\n      0x00\n        /* \"#utility.yul\":5002:5008   */\n      dup3\n        /* \"#utility.yul\":4998:5012   */\n      add\n        /* \"#utility.yul\":4991:5044   */\n      mstore\n        /* \"#utility.yul\":4874:5051   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5057:5423   */\n    tag_162:\n        /* \"#utility.yul\":5199:5202   */\n      0x00\n        /* \"#utility.yul\":5220:5287   */\n      tag_239\n        /* \"#utility.yul\":5284:5286   */\n      0x1b\n        /* \"#utility.yul\":5279:5282   */\n      dup4\n        /* \"#utility.yul\":5220:5287   */\n      tag_147\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5213:5287   */\n      swap2\n      pop\n        /* \"#utility.yul\":5296:5389   */\n      tag_240\n        /* \"#utility.yul\":5385:5388   */\n      dup3\n        /* \"#utility.yul\":5296:5389   */\n      tag_161\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5414:5416   */\n      0x20\n        /* \"#utility.yul\":5409:5412   */\n      dup3\n        /* \"#utility.yul\":5405:5417   */\n      add\n        /* \"#utility.yul\":5398:5417   */\n      swap1\n      pop\n        /* \"#utility.yul\":5057:5423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5848   */\n    tag_57:\n        /* \"#utility.yul\":5595:5599   */\n      0x00\n        /* \"#utility.yul\":5633:5635   */\n      0x20\n        /* \"#utility.yul\":5622:5631   */\n      dup3\n        /* \"#utility.yul\":5618:5636   */\n      add\n        /* \"#utility.yul\":5610:5636   */\n      swap1\n      pop\n        /* \"#utility.yul\":5682:5691   */\n      dup2\n        /* \"#utility.yul\":5676:5680   */\n      dup2\n        /* \"#utility.yul\":5672:5692   */\n      sub\n        /* \"#utility.yul\":5668:5669   */\n      0x00\n        /* \"#utility.yul\":5657:5666   */\n      dup4\n        /* \"#utility.yul\":5653:5670   */\n      add\n        /* \"#utility.yul\":5646:5693   */\n      mstore\n        /* \"#utility.yul\":5710:5841   */\n      tag_242\n        /* \"#utility.yul\":5836:5840   */\n      dup2\n        /* \"#utility.yul\":5710:5841   */\n      tag_162\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5702:5841   */\n      swap1\n      pop\n        /* \"#utility.yul\":5429:5848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5854:6075   */\n    tag_163:\n        /* \"#utility.yul\":5994:6028   */\n      0x596f7572207374616b696e672074696d65206973206e6f7420636f6d706c6574\n        /* \"#utility.yul\":5990:5991   */\n      0x00\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5978:5992   */\n      add\n        /* \"#utility.yul\":5971:6029   */\n      mstore\n        /* \"#utility.yul\":6063:6067   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6058:6060   */\n      0x20\n        /* \"#utility.yul\":6050:6056   */\n      dup3\n        /* \"#utility.yul\":6046:6061   */\n      add\n        /* \"#utility.yul\":6039:6068   */\n      mstore\n        /* \"#utility.yul\":5854:6075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6081:6447   */\n    tag_164:\n        /* \"#utility.yul\":6223:6226   */\n      0x00\n        /* \"#utility.yul\":6244:6311   */\n      tag_245\n        /* \"#utility.yul\":6308:6310   */\n      0x22\n        /* \"#utility.yul\":6303:6306   */\n      dup4\n        /* \"#utility.yul\":6244:6311   */\n      tag_147\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6237:6311   */\n      swap2\n      pop\n        /* \"#utility.yul\":6320:6413   */\n      tag_246\n        /* \"#utility.yul\":6409:6412   */\n      dup3\n        /* \"#utility.yul\":6320:6413   */\n      tag_163\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6438:6440   */\n      0x40\n        /* \"#utility.yul\":6433:6436   */\n      dup3\n        /* \"#utility.yul\":6429:6441   */\n      add\n        /* \"#utility.yul\":6422:6441   */\n      swap1\n      pop\n        /* \"#utility.yul\":6081:6447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6453:6872   */\n    tag_60:\n        /* \"#utility.yul\":6619:6623   */\n      0x00\n        /* \"#utility.yul\":6657:6659   */\n      0x20\n        /* \"#utility.yul\":6646:6655   */\n      dup3\n        /* \"#utility.yul\":6642:6660   */\n      add\n        /* \"#utility.yul\":6634:6660   */\n      swap1\n      pop\n        /* \"#utility.yul\":6706:6715   */\n      dup2\n        /* \"#utility.yul\":6700:6704   */\n      dup2\n        /* \"#utility.yul\":6696:6716   */\n      sub\n        /* \"#utility.yul\":6692:6693   */\n      0x00\n        /* \"#utility.yul\":6681:6690   */\n      dup4\n        /* \"#utility.yul\":6677:6694   */\n      add\n        /* \"#utility.yul\":6670:6717   */\n      mstore\n        /* \"#utility.yul\":6734:6865   */\n      tag_248\n        /* \"#utility.yul\":6860:6864   */\n      dup2\n        /* \"#utility.yul\":6734:6865   */\n      tag_164\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6726:6865   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6878:7058   */\n    tag_165:\n        /* \"#utility.yul\":6926:7003   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6923:6924   */\n      0x00\n        /* \"#utility.yul\":6916:7004   */\n      mstore\n        /* \"#utility.yul\":7023:7027   */\n      0x11\n        /* \"#utility.yul\":7020:7021   */\n      0x04\n        /* \"#utility.yul\":7013:7028   */\n      mstore\n        /* \"#utility.yul\":7047:7051   */\n      0x24\n        /* \"#utility.yul\":7044:7045   */\n      0x00\n        /* \"#utility.yul\":7037:7052   */\n      revert\n        /* \"#utility.yul\":7064:7258   */\n    tag_62:\n        /* \"#utility.yul\":7104:7108   */\n      0x00\n        /* \"#utility.yul\":7124:7144   */\n      tag_251\n        /* \"#utility.yul\":7142:7143   */\n      dup3\n        /* \"#utility.yul\":7124:7144   */\n      tag_144\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7119:7144   */\n      swap2\n      pop\n        /* \"#utility.yul\":7158:7178   */\n      tag_252\n        /* \"#utility.yul\":7176:7177   */\n      dup4\n        /* \"#utility.yul\":7158:7178   */\n      tag_144\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7153:7178   */\n      swap3\n      pop\n        /* \"#utility.yul\":7202:7203   */\n      dup3\n        /* \"#utility.yul\":7199:7200   */\n      dup3\n        /* \"#utility.yul\":7195:7204   */\n      sub\n        /* \"#utility.yul\":7187:7204   */\n      swap1\n      pop\n        /* \"#utility.yul\":7226:7227   */\n      dup2\n        /* \"#utility.yul\":7220:7224   */\n      dup2\n        /* \"#utility.yul\":7217:7228   */\n      gt\n        /* \"#utility.yul\":7214:7251   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":7231:7249   */\n      tag_254\n      tag_165\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7214:7251   */\n    tag_253:\n        /* \"#utility.yul\":7064:7258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7264:7674   */\n    tag_65:\n        /* \"#utility.yul\":7304:7311   */\n      0x00\n        /* \"#utility.yul\":7327:7347   */\n      tag_256\n        /* \"#utility.yul\":7345:7346   */\n      dup3\n        /* \"#utility.yul\":7327:7347   */\n      tag_144\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7322:7347   */\n      swap2\n      pop\n        /* \"#utility.yul\":7361:7381   */\n      tag_257\n        /* \"#utility.yul\":7379:7380   */\n      dup4\n        /* \"#utility.yul\":7361:7381   */\n      tag_144\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7356:7381   */\n      swap3\n      pop\n        /* \"#utility.yul\":7416:7417   */\n      dup3\n        /* \"#utility.yul\":7413:7414   */\n      dup3\n        /* \"#utility.yul\":7409:7418   */\n      mul\n        /* \"#utility.yul\":7438:7468   */\n      tag_258\n        /* \"#utility.yul\":7456:7467   */\n      dup2\n        /* \"#utility.yul\":7438:7468   */\n      tag_144\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7427:7468   */\n      swap2\n      pop\n        /* \"#utility.yul\":7617:7618   */\n      dup3\n        /* \"#utility.yul\":7608:7615   */\n      dup3\n        /* \"#utility.yul\":7604:7619   */\n      div\n        /* \"#utility.yul\":7601:7602   */\n      dup5\n        /* \"#utility.yul\":7598:7620   */\n      eq\n        /* \"#utility.yul\":7578:7579   */\n      dup4\n        /* \"#utility.yul\":7571:7580   */\n      iszero\n        /* \"#utility.yul\":7551:7634   */\n      or\n        /* \"#utility.yul\":7528:7667   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":7647:7665   */\n      tag_260\n      tag_165\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7528:7667   */\n    tag_259:\n        /* \"#utility.yul\":7312:7674   */\n      pop\n        /* \"#utility.yul\":7264:7674   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7680:7860   */\n    tag_166:\n        /* \"#utility.yul\":7728:7805   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7725:7726   */\n      0x00\n        /* \"#utility.yul\":7718:7806   */\n      mstore\n        /* \"#utility.yul\":7825:7829   */\n      0x12\n        /* \"#utility.yul\":7822:7823   */\n      0x04\n        /* \"#utility.yul\":7815:7830   */\n      mstore\n        /* \"#utility.yul\":7849:7853   */\n      0x24\n        /* \"#utility.yul\":7846:7847   */\n      0x00\n        /* \"#utility.yul\":7839:7854   */\n      revert\n        /* \"#utility.yul\":7866:8051   */\n    tag_67:\n        /* \"#utility.yul\":7906:7907   */\n      0x00\n        /* \"#utility.yul\":7923:7943   */\n      tag_263\n        /* \"#utility.yul\":7941:7942   */\n      dup3\n        /* \"#utility.yul\":7923:7943   */\n      tag_144\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":7918:7943   */\n      swap2\n      pop\n        /* \"#utility.yul\":7957:7977   */\n      tag_264\n        /* \"#utility.yul\":7975:7976   */\n      dup4\n        /* \"#utility.yul\":7957:7977   */\n      tag_144\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7952:7977   */\n      swap3\n      pop\n        /* \"#utility.yul\":7996:7997   */\n      dup3\n        /* \"#utility.yul\":7986:8021   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":8001:8019   */\n      tag_266\n      tag_166\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7986:8021   */\n    tag_265:\n        /* \"#utility.yul\":8043:8044   */\n      dup3\n        /* \"#utility.yul\":8040:8041   */\n      dup3\n        /* \"#utility.yul\":8036:8045   */\n      div\n        /* \"#utility.yul\":8031:8045   */\n      swap1\n      pop\n        /* \"#utility.yul\":7866:8051   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8057:8248   */\n    tag_69:\n        /* \"#utility.yul\":8097:8100   */\n      0x00\n        /* \"#utility.yul\":8116:8136   */\n      tag_268\n        /* \"#utility.yul\":8134:8135   */\n      dup3\n        /* \"#utility.yul\":8116:8136   */\n      tag_144\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8111:8136   */\n      swap2\n      pop\n        /* \"#utility.yul\":8150:8170   */\n      tag_269\n        /* \"#utility.yul\":8168:8169   */\n      dup4\n        /* \"#utility.yul\":8150:8170   */\n      tag_144\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8145:8170   */\n      swap3\n      pop\n        /* \"#utility.yul\":8193:8194   */\n      dup3\n        /* \"#utility.yul\":8190:8191   */\n      dup3\n        /* \"#utility.yul\":8186:8195   */\n      add\n        /* \"#utility.yul\":8179:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":8214:8217   */\n      dup1\n        /* \"#utility.yul\":8211:8212   */\n      dup3\n        /* \"#utility.yul\":8208:8218   */\n      gt\n        /* \"#utility.yul\":8205:8241   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":8221:8239   */\n      tag_271\n      tag_165\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8205:8241   */\n    tag_270:\n        /* \"#utility.yul\":8057:8248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8254:8372   */\n    tag_167:\n        /* \"#utility.yul\":8341:8365   */\n      tag_273\n        /* \"#utility.yul\":8359:8364   */\n      dup2\n        /* \"#utility.yul\":8341:8365   */\n      tag_141\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8336:8339   */\n      dup3\n        /* \"#utility.yul\":8329:8366   */\n      mstore\n        /* \"#utility.yul\":8254:8372   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8378:8710   */\n    tag_97:\n        /* \"#utility.yul\":8499:8503   */\n      0x00\n        /* \"#utility.yul\":8537:8539   */\n      0x40\n        /* \"#utility.yul\":8526:8535   */\n      dup3\n        /* \"#utility.yul\":8522:8540   */\n      add\n        /* \"#utility.yul\":8514:8540   */\n      swap1\n      pop\n        /* \"#utility.yul\":8550:8621   */\n      tag_275\n        /* \"#utility.yul\":8618:8619   */\n      0x00\n        /* \"#utility.yul\":8607:8616   */\n      dup4\n        /* \"#utility.yul\":8603:8620   */\n      add\n        /* \"#utility.yul\":8594:8600   */\n      dup6\n        /* \"#utility.yul\":8550:8621   */\n      tag_167\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8631:8703   */\n      tag_276\n        /* \"#utility.yul\":8699:8701   */\n      0x20\n        /* \"#utility.yul\":8688:8697   */\n      dup4\n        /* \"#utility.yul\":8684:8702   */\n      add\n        /* \"#utility.yul\":8675:8681   */\n      dup5\n        /* \"#utility.yul\":8631:8703   */\n      tag_145\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8378:8710   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8716:8806   */\n    tag_168:\n        /* \"#utility.yul\":8750:8757   */\n      0x00\n        /* \"#utility.yul\":8793:8798   */\n      dup2\n        /* \"#utility.yul\":8786:8799   */\n      iszero\n        /* \"#utility.yul\":8779:8800   */\n      iszero\n        /* \"#utility.yul\":8768:8800   */\n      swap1\n      pop\n        /* \"#utility.yul\":8716:8806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8812:8928   */\n    tag_169:\n        /* \"#utility.yul\":8882:8903   */\n      tag_279\n        /* \"#utility.yul\":8897:8902   */\n      dup2\n        /* \"#utility.yul\":8882:8903   */\n      tag_168\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8875:8880   */\n      dup2\n        /* \"#utility.yul\":8872:8904   */\n      eq\n        /* \"#utility.yul\":8862:8922   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":8918:8919   */\n      0x00\n        /* \"#utility.yul\":8915:8916   */\n      dup1\n        /* \"#utility.yul\":8908:8920   */\n      revert\n        /* \"#utility.yul\":8862:8922   */\n    tag_280:\n        /* \"#utility.yul\":8812:8928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8934:9071   */\n    tag_170:\n        /* \"#utility.yul\":8988:8993   */\n      0x00\n        /* \"#utility.yul\":9019:9025   */\n      dup2\n        /* \"#utility.yul\":9013:9026   */\n      mload\n        /* \"#utility.yul\":9004:9026   */\n      swap1\n      pop\n        /* \"#utility.yul\":9035:9065   */\n      tag_282\n        /* \"#utility.yul\":9059:9064   */\n      dup2\n        /* \"#utility.yul\":9035:9065   */\n      tag_169\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":8934:9071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9077:9422   */\n    tag_101:\n        /* \"#utility.yul\":9144:9150   */\n      0x00\n        /* \"#utility.yul\":9193:9195   */\n      0x20\n        /* \"#utility.yul\":9181:9190   */\n      dup3\n        /* \"#utility.yul\":9172:9179   */\n      dup5\n        /* \"#utility.yul\":9168:9191   */\n      sub\n        /* \"#utility.yul\":9164:9196   */\n      slt\n        /* \"#utility.yul\":9161:9280   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":9199:9278   */\n      tag_285\n      tag_138\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9161:9280   */\n    tag_284:\n        /* \"#utility.yul\":9319:9320   */\n      0x00\n        /* \"#utility.yul\":9344:9405   */\n      tag_286\n        /* \"#utility.yul\":9397:9404   */\n      dup5\n        /* \"#utility.yul\":9388:9394   */\n      dup3\n        /* \"#utility.yul\":9377:9386   */\n      dup6\n        /* \"#utility.yul\":9373:9395   */\n      add\n        /* \"#utility.yul\":9344:9405   */\n      tag_170\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9334:9405   */\n      swap2\n      pop\n        /* \"#utility.yul\":9290:9415   */\n      pop\n        /* \"#utility.yul\":9077:9422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9428:9650   */\n    tag_171:\n        /* \"#utility.yul\":9568:9602   */\n      0x596f75206d7573742070726f766964652061746c656173742033303020746f6b\n        /* \"#utility.yul\":9564:9565   */\n      0x00\n        /* \"#utility.yul\":9556:9562   */\n      dup3\n        /* \"#utility.yul\":9552:9566   */\n      add\n        /* \"#utility.yul\":9545:9603   */\n      mstore\n        /* \"#utility.yul\":9637:9642   */\n      0x656e730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9632:9634   */\n      0x20\n        /* \"#utility.yul\":9624:9630   */\n      dup3\n        /* \"#utility.yul\":9620:9635   */\n      add\n        /* \"#utility.yul\":9613:9643   */\n      mstore\n        /* \"#utility.yul\":9428:9650   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9656:10022   */\n    tag_172:\n        /* \"#utility.yul\":9798:9801   */\n      0x00\n        /* \"#utility.yul\":9819:9886   */\n      tag_289\n        /* \"#utility.yul\":9883:9885   */\n      0x23\n        /* \"#utility.yul\":9878:9881   */\n      dup4\n        /* \"#utility.yul\":9819:9886   */\n      tag_147\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9812:9886   */\n      swap2\n      pop\n        /* \"#utility.yul\":9895:9988   */\n      tag_290\n        /* \"#utility.yul\":9984:9987   */\n      dup3\n        /* \"#utility.yul\":9895:9988   */\n      tag_171\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":10013:10015   */\n      0x40\n        /* \"#utility.yul\":10008:10011   */\n      dup3\n        /* \"#utility.yul\":10004:10016   */\n      add\n        /* \"#utility.yul\":9997:10016   */\n      swap1\n      pop\n        /* \"#utility.yul\":9656:10022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10028:10447   */\n    tag_108:\n        /* \"#utility.yul\":10194:10198   */\n      0x00\n        /* \"#utility.yul\":10232:10234   */\n      0x20\n        /* \"#utility.yul\":10221:10230   */\n      dup3\n        /* \"#utility.yul\":10217:10235   */\n      add\n        /* \"#utility.yul\":10209:10235   */\n      swap1\n      pop\n        /* \"#utility.yul\":10281:10290   */\n      dup2\n        /* \"#utility.yul\":10275:10279   */\n      dup2\n        /* \"#utility.yul\":10271:10291   */\n      sub\n        /* \"#utility.yul\":10267:10268   */\n      0x00\n        /* \"#utility.yul\":10256:10265   */\n      dup4\n        /* \"#utility.yul\":10252:10269   */\n      add\n        /* \"#utility.yul\":10245:10292   */\n      mstore\n        /* \"#utility.yul\":10309:10440   */\n      tag_292\n        /* \"#utility.yul\":10435:10439   */\n      dup2\n        /* \"#utility.yul\":10309:10440   */\n      tag_172\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10301:10440   */\n      swap1\n      pop\n        /* \"#utility.yul\":10028:10447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10453:10693   */\n    tag_173:\n        /* \"#utility.yul\":10593:10627   */\n      0x5468652070726f76696465642074696d65206973206e6f742076616c69642e20\n        /* \"#utility.yul\":10589:10590   */\n      0x00\n        /* \"#utility.yul\":10581:10587   */\n      dup3\n        /* \"#utility.yul\":10577:10591   */\n      add\n        /* \"#utility.yul\":10570:10628   */\n      mstore\n        /* \"#utility.yul\":10662:10685   */\n      0x6974206d75737420626520332c2036206f722031320000000000000000000000\n        /* \"#utility.yul\":10657:10659   */\n      0x20\n        /* \"#utility.yul\":10649:10655   */\n      dup3\n        /* \"#utility.yul\":10645:10660   */\n      add\n        /* \"#utility.yul\":10638:10686   */\n      mstore\n        /* \"#utility.yul\":10453:10693   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10699:11065   */\n    tag_174:\n        /* \"#utility.yul\":10841:10844   */\n      0x00\n        /* \"#utility.yul\":10862:10929   */\n      tag_295\n        /* \"#utility.yul\":10926:10928   */\n      0x35\n        /* \"#utility.yul\":10921:10924   */\n      dup4\n        /* \"#utility.yul\":10862:10929   */\n      tag_147\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10855:10929   */\n      swap2\n      pop\n        /* \"#utility.yul\":10938:11031   */\n      tag_296\n        /* \"#utility.yul\":11027:11030   */\n      dup3\n        /* \"#utility.yul\":10938:11031   */\n      tag_173\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11056:11058   */\n      0x40\n        /* \"#utility.yul\":11051:11054   */\n      dup3\n        /* \"#utility.yul\":11047:11059   */\n      add\n        /* \"#utility.yul\":11040:11059   */\n      swap1\n      pop\n        /* \"#utility.yul\":10699:11065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11071:11490   */\n    tag_113:\n        /* \"#utility.yul\":11237:11241   */\n      0x00\n        /* \"#utility.yul\":11275:11277   */\n      0x20\n        /* \"#utility.yul\":11264:11273   */\n      dup3\n        /* \"#utility.yul\":11260:11278   */\n      add\n        /* \"#utility.yul\":11252:11278   */\n      swap1\n      pop\n        /* \"#utility.yul\":11324:11333   */\n      dup2\n        /* \"#utility.yul\":11318:11322   */\n      dup2\n        /* \"#utility.yul\":11314:11334   */\n      sub\n        /* \"#utility.yul\":11310:11311   */\n      0x00\n        /* \"#utility.yul\":11299:11308   */\n      dup4\n        /* \"#utility.yul\":11295:11312   */\n      add\n        /* \"#utility.yul\":11288:11335   */\n      mstore\n        /* \"#utility.yul\":11352:11483   */\n      tag_298\n        /* \"#utility.yul\":11478:11482   */\n      dup2\n        /* \"#utility.yul\":11352:11483   */\n      tag_174\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":11344:11483   */\n      swap1\n      pop\n        /* \"#utility.yul\":11071:11490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11496:11938   */\n    tag_125:\n        /* \"#utility.yul\":11645:11649   */\n      0x00\n        /* \"#utility.yul\":11683:11685   */\n      0x60\n        /* \"#utility.yul\":11672:11681   */\n      dup3\n        /* \"#utility.yul\":11668:11686   */\n      add\n        /* \"#utility.yul\":11660:11686   */\n      swap1\n      pop\n        /* \"#utility.yul\":11696:11767   */\n      tag_300\n        /* \"#utility.yul\":11764:11765   */\n      0x00\n        /* \"#utility.yul\":11753:11762   */\n      dup4\n        /* \"#utility.yul\":11749:11766   */\n      add\n        /* \"#utility.yul\":11740:11746   */\n      dup7\n        /* \"#utility.yul\":11696:11767   */\n      tag_167\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":11777:11849   */\n      tag_301\n        /* \"#utility.yul\":11845:11847   */\n      0x20\n        /* \"#utility.yul\":11834:11843   */\n      dup4\n        /* \"#utility.yul\":11830:11848   */\n      add\n        /* \"#utility.yul\":11821:11827   */\n      dup6\n        /* \"#utility.yul\":11777:11849   */\n      tag_167\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11859:11931   */\n      tag_302\n        /* \"#utility.yul\":11927:11929   */\n      0x40\n        /* \"#utility.yul\":11916:11925   */\n      dup4\n        /* \"#utility.yul\":11912:11930   */\n      add\n        /* \"#utility.yul\":11903:11909   */\n      dup5\n        /* \"#utility.yul\":11859:11931   */\n      tag_145\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11496:11938   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11944:12166   */\n    tag_132:\n        /* \"#utility.yul\":12037:12041   */\n      0x00\n        /* \"#utility.yul\":12075:12077   */\n      0x20\n        /* \"#utility.yul\":12064:12073   */\n      dup3\n        /* \"#utility.yul\":12060:12078   */\n      add\n        /* \"#utility.yul\":12052:12078   */\n      swap1\n      pop\n        /* \"#utility.yul\":12088:12159   */\n      tag_304\n        /* \"#utility.yul\":12156:12157   */\n      0x00\n        /* \"#utility.yul\":12145:12154   */\n      dup4\n        /* \"#utility.yul\":12141:12158   */\n      add\n        /* \"#utility.yul\":12132:12138   */\n      dup5\n        /* \"#utility.yul\":12088:12159   */\n      tag_167\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11944:12166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12172:12315   */\n    tag_175:\n        /* \"#utility.yul\":12229:12234   */\n      0x00\n        /* \"#utility.yul\":12260:12266   */\n      dup2\n        /* \"#utility.yul\":12254:12267   */\n      mload\n        /* \"#utility.yul\":12245:12267   */\n      swap1\n      pop\n        /* \"#utility.yul\":12276:12309   */\n      tag_306\n        /* \"#utility.yul\":12303:12308   */\n      dup2\n        /* \"#utility.yul\":12276:12309   */\n      tag_151\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":12172:12315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12321:12672   */\n    tag_136:\n        /* \"#utility.yul\":12391:12397   */\n      0x00\n        /* \"#utility.yul\":12440:12442   */\n      0x20\n        /* \"#utility.yul\":12428:12437   */\n      dup3\n        /* \"#utility.yul\":12419:12426   */\n      dup5\n        /* \"#utility.yul\":12415:12438   */\n      sub\n        /* \"#utility.yul\":12411:12443   */\n      slt\n        /* \"#utility.yul\":12408:12527   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":12446:12525   */\n      tag_309\n      tag_138\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":12408:12527   */\n    tag_308:\n        /* \"#utility.yul\":12566:12567   */\n      0x00\n        /* \"#utility.yul\":12591:12655   */\n      tag_310\n        /* \"#utility.yul\":12647:12654   */\n      dup5\n        /* \"#utility.yul\":12638:12644   */\n      dup3\n        /* \"#utility.yul\":12627:12636   */\n      dup6\n        /* \"#utility.yul\":12623:12645   */\n      add\n        /* \"#utility.yul\":12591:12655   */\n      tag_175\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":12581:12655   */\n      swap2\n      pop\n        /* \"#utility.yul\":12537:12665   */\n      pop\n        /* \"#utility.yul\":12321:12672   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200b8a3d54874c33c51bb30fb86221e1d1d8df02ac9a03a0b94ac6a1548921b05364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_195": {
									"entryPoint": null,
									"id": 195,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:3",
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "759:80:3",
													"nodeType": "YulBlock",
													"src": "759:80:3",
													"statements": [
														{
															"nativeSrc": "769:22:3",
															"nodeType": "YulAssignment",
															"src": "769:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:3"
																},
																"nativeSrc": "778:13:3",
																"nodeType": "YulFunctionCall",
																"src": "778:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:3"
																},
																"nativeSrc": "800:33:3",
																"nodeType": "YulFunctionCall",
																"src": "800:33:3"
															},
															"nativeSrc": "800:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:3",
														"nodeType": "YulTypedName",
														"src": "737:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:3",
														"nodeType": "YulTypedName",
														"src": "745:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:3",
														"nodeType": "YulTypedName",
														"src": "753:5:3",
														"type": ""
													}
												],
												"src": "696:143:3"
											},
											{
												"body": {
													"nativeSrc": "922:274:3",
													"nodeType": "YulBlock",
													"src": "922:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:3",
																"nodeType": "YulBlock",
																"src": "968:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:3"
																			},
																			"nativeSrc": "970:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:3"
																		},
																		"nativeSrc": "970:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:3"
																		},
																		"nativeSrc": "939:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:3",
																		"nodeType": "YulLiteral",
																		"src": "964:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:3"
																},
																"nativeSrc": "935:32:3",
																"nodeType": "YulFunctionCall",
																"src": "935:32:3"
															},
															"nativeSrc": "932:119:3",
															"nodeType": "YulIf",
															"src": "932:119:3"
														},
														{
															"nativeSrc": "1061:128:3",
															"nodeType": "YulBlock",
															"src": "1061:128:3",
															"statements": [
																{
																	"nativeSrc": "1076:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:3",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:3"
																				},
																				"nativeSrc": "1147:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:3"
																		},
																		"nativeSrc": "1115:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:3",
														"nodeType": "YulTypedName",
														"src": "892:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:3",
														"nodeType": "YulTypedName",
														"src": "903:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:3",
														"nodeType": "YulTypedName",
														"src": "915:6:3",
														"type": ""
													}
												],
												"src": "845:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611445380380611445833981810160405281019061003191906100dc565b60015f819055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610107565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100ab82610082565b9050919050565b6100bb816100a1565b81146100c5575f80fd5b50565b5f815190506100d6816100b2565b92915050565b5f602082840312156100f1576100f061007e565b5b5f6100fe848285016100c8565b91505092915050565b611331806101145f395ff3fe60806040526004361061007a575f3560e01c806358fe020c1161004d57806358fe020c146101505780635f5152261461018c578063ab32eb69146101c8578063adca9b72146102045761007a565b8063399080ec1461007e5780633ccfd60b146100ba57806342ea02c1146100d8578063483174b614610114575b5f80fd5b348015610089575f80fd5b506100a4600480360381019061009f9190610c96565b61022e565b6040516100b19190610cd9565b60405180910390f35b6100c2610274565b6040516100cf9190610d62565b60405180910390f35b3480156100e3575f80fd5b506100fe60048036038101906100f99190610de3565b6107a1565b60405161010b9190610d62565b60405180910390f35b34801561011f575f80fd5b5061013a60048036038101906101359190610c96565b610b33565b6040516101479190610cd9565b60405180910390f35b34801561015b575f80fd5b5061017660048036038101906101719190610c96565b610b48565b6040516101839190610cd9565b60405180910390f35b348015610197575f80fd5b506101b260048036038101906101ad9190610c96565b610b5d565b6040516101bf9190610cd9565b60405180910390f35b3480156101d3575f80fd5b506101ee60048036038101906101e99190610c96565b610bfe565b6040516101fb9190610cd9565b60405180910390f35b34801561020f575f80fd5b50610218610c13565b6040516102259190610e7c565b60405180910390f35b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60605f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905061012c8110156102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610edf565b60405180910390fd5b4260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390610f6d565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426103c69190610fb8565b9050600360045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610438576064601e8361041c9190610feb565b6104269190611059565b826104319190611089565b91506104ff565b600660045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036104a8576064603c8361048c9190610feb565b6104969190611059565b826104a19190611089565b91506104fe565b600c60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036104fd576002826104fa9190610feb565b91505b5b5b426276a7004261050f9190611089565b6105199190610fb8565b811061054a576064601e8361052e9190610feb565b6105389190611059565b826105439190611089565b91506105c7565b426276a7004261055a9190611089565b6105649190610fb8565b8110610595576064603c836105799190610feb565b6105839190611059565b8261058e9190611089565b91506105c6565b426276a700426105a59190611089565b6105af9190610fb8565b81106105c5576002826105c29190610feb565b91505b5b5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016106249291906110cb565b6020604051808303815f875af1158015610640573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106649190611127565b90508061069d576040517f8ecca7d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040518060400160405280600781526020017f5375636365737300000000000000000000000000000000000000000000000000815250935050505090565b6060825f81036107dd576040517f9b677fa000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c841015610822576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610819906111c2565b60405180910390fd5b60038361ffff161480610839575060068361ffff16145b806108485750600c8361ffff16145b610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e90611250565b60405180910390fd5b5f4290505f60038561ffff16036108b1576276a700905080826108aa9190611089565b915061093d565b60068561ffff16036108d65762ed4e00905080826108cf9190611089565b915061093c565b600c8561ffff16036108fc576301da9c00905080826108f59190611089565b915061093b565b6040518060400160405280601f81526020017f5468652070726f76696465642074696d65206973206e6f742076616c69642e0081525093505050610b2c565b5b5b8560025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109899190611089565b925050819055505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b81526004016109ef9392919061126e565b6020604051808303815f875af1158015610a0b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2f9190611127565b905080610a68576040517feb4c684700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508561ffff1660045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040518060400160405280600b81526020017f7375636365737366756c6c00000000000000000000000000000000000000000081525094505050505b5092915050565b6003602052805f5260405f205f915090505481565b6004602052805f5260405f205f915090505481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610bb891906112a3565b602060405180830381865afa158015610bd3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf791906112d0565b9050919050565b6002602052805f5260405f205f915090505481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c6582610c3c565b9050919050565b610c7581610c5b565b8114610c7f575f80fd5b50565b5f81359050610c9081610c6c565b92915050565b5f60208284031215610cab57610caa610c38565b5b5f610cb884828501610c82565b91505092915050565b5f819050919050565b610cd381610cc1565b82525050565b5f602082019050610cec5f830184610cca565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d3482610cf2565b610d3e8185610cfc565b9350610d4e818560208601610d0c565b610d5781610d1a565b840191505092915050565b5f6020820190508181035f830152610d7a8184610d2a565b905092915050565b610d8b81610cc1565b8114610d95575f80fd5b50565b5f81359050610da681610d82565b92915050565b5f61ffff82169050919050565b610dc281610dac565b8114610dcc575f80fd5b50565b5f81359050610ddd81610db9565b92915050565b5f8060408385031215610df957610df8610c38565b5b5f610e0685828601610d98565b9250506020610e1785828601610dcf565b9150509250929050565b5f819050919050565b5f610e44610e3f610e3a84610c3c565b610e21565b610c3c565b9050919050565b5f610e5582610e2a565b9050919050565b5f610e6682610e4b565b9050919050565b610e7681610e5c565b82525050565b5f602082019050610e8f5f830184610e6d565b92915050565b7f596f752068617665206e6f7420656e6f7567682062616c616e636500000000005f82015250565b5f610ec9601b83610cfc565b9150610ed482610e95565b602082019050919050565b5f6020820190508181035f830152610ef681610ebd565b9050919050565b7f596f7572207374616b696e672074696d65206973206e6f7420636f6d706c65745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f57602283610cfc565b9150610f6282610efd565b604082019050919050565b5f6020820190508181035f830152610f8481610f4b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fc282610cc1565b9150610fcd83610cc1565b9250828203905081811115610fe557610fe4610f8b565b5b92915050565b5f610ff582610cc1565b915061100083610cc1565b925082820261100e81610cc1565b9150828204841483151761102557611024610f8b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61106382610cc1565b915061106e83610cc1565b92508261107e5761107d61102c565b5b828204905092915050565b5f61109382610cc1565b915061109e83610cc1565b92508282019050808211156110b6576110b5610f8b565b5b92915050565b6110c581610c5b565b82525050565b5f6040820190506110de5f8301856110bc565b6110eb6020830184610cca565b9392505050565b5f8115159050919050565b611106816110f2565b8114611110575f80fd5b50565b5f81519050611121816110fd565b92915050565b5f6020828403121561113c5761113b610c38565b5b5f61114984828501611113565b91505092915050565b7f596f75206d7573742070726f766964652061746c656173742033303020746f6b5f8201527f656e730000000000000000000000000000000000000000000000000000000000602082015250565b5f6111ac602383610cfc565b91506111b782611152565b604082019050919050565b5f6020820190508181035f8301526111d9816111a0565b9050919050565b7f5468652070726f76696465642074696d65206973206e6f742076616c69642e205f8201527f6974206d75737420626520332c2036206f722031320000000000000000000000602082015250565b5f61123a603583610cfc565b9150611245826111e0565b604082019050919050565b5f6020820190508181035f8301526112678161122e565b9050919050565b5f6060820190506112815f8301866110bc565b61128e60208301856110bc565b61129b6040830184610cca565b949350505050565b5f6020820190506112b65f8301846110bc565b92915050565b5f815190506112ca81610d82565b92915050565b5f602082840312156112e5576112e4610c38565b5b5f6112f2848285016112bc565b9150509291505056fea26469706673582212200b8a3d54874c33c51bb30fb86221e1d1d8df02ac9a03a0b94ac6a1548921b05364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1445 CODESIZE SUB DUP1 PUSH2 0x1445 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xDC JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x107 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAB DUP3 PUSH2 0x82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB DUP2 PUSH2 0xA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD6 DUP2 PUSH2 0xB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE DUP5 DUP3 DUP6 ADD PUSH2 0xC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1331 DUP1 PUSH2 0x114 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58FE020C GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x58FE020C EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5F515226 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x204 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x399080EC EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x42EA02C1 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x483174B6 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x438 JUMPI PUSH1 0x64 PUSH1 0x1E DUP4 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x6 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x4A8 JUMPI PUSH1 0x64 PUSH1 0x3C DUP4 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FE JUMP JUMPDEST PUSH1 0xC PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x4FD JUMPI PUSH1 0x2 DUP3 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST JUMPDEST TIMESTAMP PUSH3 0x76A700 TIMESTAMP PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x519 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST DUP2 LT PUSH2 0x54A JUMPI PUSH1 0x64 PUSH1 0x1E DUP4 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C7 JUMP JUMPDEST TIMESTAMP PUSH3 0x76A700 TIMESTAMP PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x564 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST DUP2 LT PUSH2 0x595 JUMPI PUSH1 0x64 PUSH1 0x3C DUP4 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C6 JUMP JUMPDEST TIMESTAMP PUSH3 0x76A700 TIMESTAMP PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST DUP2 LT PUSH2 0x5C5 JUMPI PUSH1 0x2 DUP3 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8ECCA7D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5375636365737300000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH0 DUP2 SUB PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B677FA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP5 LT ISZERO PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP4 PUSH2 0xFFFF AND EQ DUP1 PUSH2 0x839 JUMPI POP PUSH1 0x6 DUP4 PUSH2 0xFFFF AND EQ JUMPDEST DUP1 PUSH2 0x848 JUMPI POP PUSH1 0xC DUP4 PUSH2 0xFFFF AND EQ JUMPDEST PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 DUP6 PUSH2 0xFFFF AND SUB PUSH2 0x8B1 JUMPI PUSH3 0x76A700 SWAP1 POP DUP1 DUP3 PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x93D JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH2 0xFFFF AND SUB PUSH2 0x8D6 JUMPI PUSH3 0xED4E00 SWAP1 POP DUP1 DUP3 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0xC DUP6 PUSH2 0xFFFF AND SUB PUSH2 0x8FC JUMPI PUSH4 0x1DA9C00 SWAP1 POP DUP1 DUP3 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5468652070726F76696465642074696D65206973206E6F742076616C69642E00 DUP2 MSTORE POP SWAP4 POP POP POP PUSH2 0xB2C JUMP JUMPDEST JUMPDEST JUMPDEST DUP6 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x126E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEB4C684700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH2 0xFFFF AND PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7375636365737366756C6C000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP5 POP POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC65 DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC75 DUP2 PUSH2 0xC5B JUMP JUMPDEST DUP2 EQ PUSH2 0xC7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC90 DUP2 PUSH2 0xC6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB8 DUP5 DUP3 DUP6 ADD PUSH2 0xC82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xCC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEC PUSH0 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD34 DUP3 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xD3E DUP2 DUP6 PUSH2 0xCFC JUMP JUMPDEST SWAP4 POP PUSH2 0xD4E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD1A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD7A DUP2 DUP5 PUSH2 0xD2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xCC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xD95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA6 DUP2 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC2 DUP2 PUSH2 0xDAC JUMP JUMPDEST DUP2 EQ PUSH2 0xDCC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDD DUP2 PUSH2 0xDB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF8 PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE06 DUP6 DUP3 DUP7 ADD PUSH2 0xD98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE17 DUP6 DUP3 DUP7 ADD PUSH2 0xDCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE44 PUSH2 0xE3F PUSH2 0xE3A DUP5 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xE21 JUMP JUMPDEST PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE55 DUP3 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE66 DUP3 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE8F PUSH0 DUP4 ADD DUP5 PUSH2 0xE6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F7420656E6F7567682062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEC9 PUSH1 0x1B DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xED4 DUP3 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF6 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7572207374616B696E672074696D65206973206E6F7420636F6D706C6574 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF57 PUSH1 0x22 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xF62 DUP3 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF84 DUP2 PUSH2 0xF4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFC2 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCD DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFE5 JUMPI PUSH2 0xFE4 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFF5 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1000 DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x100E DUP2 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1025 JUMPI PUSH2 0x1024 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1063 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x106E DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0x102C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1093 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x109E DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B5 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C5 DUP2 PUSH2 0xC5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10DE PUSH0 DUP4 ADD DUP6 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x10EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1106 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1121 DUP2 PUSH2 0x10FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113C JUMPI PUSH2 0x113B PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1149 DUP5 DUP3 DUP6 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742070726F766964652061746C656173742033303020746F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11AC PUSH1 0x23 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0x11B7 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D9 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652070726F76696465642074696D65206973206E6F742076616C69642E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6974206D75737420626520332C2036206F722031320000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x123A PUSH1 0x35 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0x1245 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1267 DUP2 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1281 PUSH0 DUP4 ADD DUP7 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x128E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x129B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x10BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12CA DUP2 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12F2 DUP5 DUP3 DUP6 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND DUP11 RETURNDATASIZE SLOAD DUP8 0x4C CALLER 0xC5 SHL 0xB3 0xF 0xB8 PUSH3 0x21E1D1 0xD8 0xDF MUL 0xAC SWAP11 SUB LOG0 0xB9 BLOBBASEFEE 0xC6 LOG1 SLOAD DUP10 0x21 0xB0 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "283:3481:2:-:0;;;672:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;740:12:2;716:14;;:37;;;;;;;;;;;;;;;;;;672:88;283:3481;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;283:3481:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@checkBalance_569": {
									"entryPoint": 2909,
									"id": 569,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStaked_556": {
									"entryPoint": 558,
									"id": 556,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@s_balances_161": {
									"entryPoint": 3070,
									"id": 161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_minStackTime_169": {
									"entryPoint": 2888,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_stakingToken_157": {
									"entryPoint": 3091,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_unstackTime_165": {
									"entryPoint": 2867,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_335": {
									"entryPoint": 1953,
									"id": 335,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_544": {
									"entryPoint": 628,
									"id": 544,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint16": {
									"entryPoint": 3555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 3693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 3708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 3500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54": {
									"entryPoint": 3733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12675:3",
										"nodeType": "YulBlock",
										"src": "0:12675:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "907:263:3",
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:3",
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nativeSrc": "955:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nativeSrc": "955:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nativeSrc": "924:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:3",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nativeSrc": "920:32:3",
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nativeSrc": "917:119:3",
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nativeSrc": "1046:117:3",
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nativeSrc": "1061:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nativeSrc": "1121:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nativeSrc": "1100:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:3",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:3",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:3",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nativeSrc": "1221:32:3",
													"nodeType": "YulBlock",
													"src": "1221:32:3",
													"statements": [
														{
															"nativeSrc": "1231:16:3",
															"nodeType": "YulAssignment",
															"src": "1231:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:3",
																"nodeType": "YulIdentifier",
																"src": "1242:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:3",
														"nodeType": "YulTypedName",
														"src": "1203:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:3",
														"nodeType": "YulTypedName",
														"src": "1213:7:3",
														"type": ""
													}
												],
												"src": "1176:77:3"
											},
											{
												"body": {
													"nativeSrc": "1324:53:3",
													"nodeType": "YulBlock",
													"src": "1324:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:3"
																		},
																		"nativeSrc": "1346:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:3"
																},
																"nativeSrc": "1334:37:3",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:3"
															},
															"nativeSrc": "1334:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:3",
														"nodeType": "YulTypedName",
														"src": "1312:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:3",
														"nodeType": "YulTypedName",
														"src": "1319:3:3",
														"type": ""
													}
												],
												"src": "1259:118:3"
											},
											{
												"body": {
													"nativeSrc": "1481:124:3",
													"nodeType": "YulBlock",
													"src": "1481:124:3",
													"statements": [
														{
															"nativeSrc": "1491:26:3",
															"nodeType": "YulAssignment",
															"src": "1491:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:3"
																},
																"nativeSrc": "1499:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:3",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:3"
																		},
																		"nativeSrc": "1580:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:3"
																},
																"nativeSrc": "1527:71:3",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:3"
															},
															"nativeSrc": "1527:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:3",
														"nodeType": "YulTypedName",
														"src": "1453:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:3",
														"nodeType": "YulTypedName",
														"src": "1465:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:3",
														"nodeType": "YulTypedName",
														"src": "1476:4:3",
														"type": ""
													}
												],
												"src": "1383:222:3"
											},
											{
												"body": {
													"nativeSrc": "1670:40:3",
													"nodeType": "YulBlock",
													"src": "1670:40:3",
													"statements": [
														{
															"nativeSrc": "1681:22:3",
															"nodeType": "YulAssignment",
															"src": "1681:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1697:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1697:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1691:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1691:5:3"
																},
																"nativeSrc": "1691:12:3",
																"nodeType": "YulFunctionCall",
																"src": "1691:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1681:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1611:99:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1653:5:3",
														"nodeType": "YulTypedName",
														"src": "1653:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1663:6:3",
														"nodeType": "YulTypedName",
														"src": "1663:6:3",
														"type": ""
													}
												],
												"src": "1611:99:3"
											},
											{
												"body": {
													"nativeSrc": "1812:73:3",
													"nodeType": "YulBlock",
													"src": "1812:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1829:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1829:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1834:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1822:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:3"
																},
																"nativeSrc": "1822:19:3",
																"nodeType": "YulFunctionCall",
																"src": "1822:19:3"
															},
															"nativeSrc": "1822:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "1822:19:3"
														},
														{
															"nativeSrc": "1850:29:3",
															"nodeType": "YulAssignment",
															"src": "1850:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1869:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1869:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1874:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1874:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1865:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:3"
																},
																"nativeSrc": "1865:14:3",
																"nodeType": "YulFunctionCall",
																"src": "1865:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1850:11:3",
																	"nodeType": "YulIdentifier",
																	"src": "1850:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1716:169:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1784:3:3",
														"nodeType": "YulTypedName",
														"src": "1784:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1789:6:3",
														"nodeType": "YulTypedName",
														"src": "1789:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1800:11:3",
														"nodeType": "YulTypedName",
														"src": "1800:11:3",
														"type": ""
													}
												],
												"src": "1716:169:3"
											},
											{
												"body": {
													"nativeSrc": "1953:77:3",
													"nodeType": "YulBlock",
													"src": "1953:77:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1970:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1970:3:3"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1975:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1975:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1980:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1980:6:3"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1964:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1964:5:3"
																},
																"nativeSrc": "1964:23:3",
																"nodeType": "YulFunctionCall",
																"src": "1964:23:3"
															},
															"nativeSrc": "1964:23:3",
															"nodeType": "YulExpressionStatement",
															"src": "1964:23:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2007:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2007:3:3"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2012:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2003:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:3"
																		},
																		"nativeSrc": "2003:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2003:16:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2021:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2021:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1996:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:3"
																},
																"nativeSrc": "1996:27:3",
																"nodeType": "YulFunctionCall",
																"src": "1996:27:3"
															},
															"nativeSrc": "1996:27:3",
															"nodeType": "YulExpressionStatement",
															"src": "1996:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1891:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1935:3:3",
														"nodeType": "YulTypedName",
														"src": "1935:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1940:3:3",
														"nodeType": "YulTypedName",
														"src": "1940:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1945:6:3",
														"nodeType": "YulTypedName",
														"src": "1945:6:3",
														"type": ""
													}
												],
												"src": "1891:139:3"
											},
											{
												"body": {
													"nativeSrc": "2084:54:3",
													"nodeType": "YulBlock",
													"src": "2084:54:3",
													"statements": [
														{
															"nativeSrc": "2094:38:3",
															"nodeType": "YulAssignment",
															"src": "2094:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2112:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2112:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2119:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2119:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2108:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:3"
																		},
																		"nativeSrc": "2108:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2128:2:3",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2124:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:3"
																		},
																		"nativeSrc": "2124:7:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2104:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:3"
																},
																"nativeSrc": "2104:28:3",
																"nodeType": "YulFunctionCall",
																"src": "2104:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2094:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2036:102:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2067:5:3",
														"nodeType": "YulTypedName",
														"src": "2067:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2077:6:3",
														"nodeType": "YulTypedName",
														"src": "2077:6:3",
														"type": ""
													}
												],
												"src": "2036:102:3"
											},
											{
												"body": {
													"nativeSrc": "2236:285:3",
													"nodeType": "YulBlock",
													"src": "2236:285:3",
													"statements": [
														{
															"nativeSrc": "2246:53:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2246:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2293:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "2293:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2260:32:3",
																	"nodeType": "YulIdentifier",
																	"src": "2260:32:3"
																},
																"nativeSrc": "2260:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2260:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2250:6:3",
																	"nodeType": "YulTypedName",
																	"src": "2250:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2308:78:3",
															"nodeType": "YulAssignment",
															"src": "2308:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2374:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2374:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2379:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2379:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2315:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "2315:58:3"
																},
																"nativeSrc": "2315:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2315:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2308:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2308:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2434:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2434:5:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2441:4:3",
																				"nodeType": "YulLiteral",
																				"src": "2441:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:3"
																		},
																		"nativeSrc": "2430:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:16:3"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2448:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2448:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2453:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2453:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2395:34:3",
																	"nodeType": "YulIdentifier",
																	"src": "2395:34:3"
																},
																"nativeSrc": "2395:65:3",
																"nodeType": "YulFunctionCall",
																"src": "2395:65:3"
															},
															"nativeSrc": "2395:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "2395:65:3"
														},
														{
															"nativeSrc": "2469:46:3",
															"nodeType": "YulAssignment",
															"src": "2469:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2480:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2480:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2507:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2485:21:3",
																			"nodeType": "YulIdentifier",
																			"src": "2485:21:3"
																		},
																		"nativeSrc": "2485:29:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2476:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:3"
																},
																"nativeSrc": "2476:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2476:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2469:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2144:377:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2217:5:3",
														"nodeType": "YulTypedName",
														"src": "2217:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2224:3:3",
														"nodeType": "YulTypedName",
														"src": "2224:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2232:3:3",
														"nodeType": "YulTypedName",
														"src": "2232:3:3",
														"type": ""
													}
												],
												"src": "2144:377:3"
											},
											{
												"body": {
													"nativeSrc": "2645:195:3",
													"nodeType": "YulBlock",
													"src": "2645:195:3",
													"statements": [
														{
															"nativeSrc": "2655:26:3",
															"nodeType": "YulAssignment",
															"src": "2655:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2667:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2667:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2678:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2678:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2663:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:3"
																},
																"nativeSrc": "2663:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2663:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2655:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2655:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2702:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2713:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2713:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2698:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:3"
																		},
																		"nativeSrc": "2698:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2721:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "2721:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2727:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2717:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:3"
																		},
																		"nativeSrc": "2717:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2717:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2691:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:3"
																},
																"nativeSrc": "2691:47:3",
																"nodeType": "YulFunctionCall",
																"src": "2691:47:3"
															},
															"nativeSrc": "2691:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "2691:47:3"
														},
														{
															"nativeSrc": "2747:86:3",
															"nodeType": "YulAssignment",
															"src": "2747:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2819:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2819:6:3"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2828:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "2828:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2755:63:3",
																	"nodeType": "YulIdentifier",
																	"src": "2755:63:3"
																},
																"nativeSrc": "2755:78:3",
																"nodeType": "YulFunctionCall",
																"src": "2755:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2747:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2747:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2527:313:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2617:9:3",
														"nodeType": "YulTypedName",
														"src": "2617:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2629:6:3",
														"nodeType": "YulTypedName",
														"src": "2629:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2640:4:3",
														"nodeType": "YulTypedName",
														"src": "2640:4:3",
														"type": ""
													}
												],
												"src": "2527:313:3"
											},
											{
												"body": {
													"nativeSrc": "2889:79:3",
													"nodeType": "YulBlock",
													"src": "2889:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2946:16:3",
																"nodeType": "YulBlock",
																"src": "2946:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:3"
																			},
																			"nativeSrc": "2948:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:3"
																		},
																		"nativeSrc": "2948:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2912:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2937:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "2937:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2919:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "2919:17:3"
																				},
																				"nativeSrc": "2919:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2909:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "2909:2:3"
																		},
																		"nativeSrc": "2909:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2902:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:3"
																},
																"nativeSrc": "2902:43:3",
																"nodeType": "YulFunctionCall",
																"src": "2902:43:3"
															},
															"nativeSrc": "2899:63:3",
															"nodeType": "YulIf",
															"src": "2899:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2846:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2882:5:3",
														"nodeType": "YulTypedName",
														"src": "2882:5:3",
														"type": ""
													}
												],
												"src": "2846:122:3"
											},
											{
												"body": {
													"nativeSrc": "3026:87:3",
													"nodeType": "YulBlock",
													"src": "3026:87:3",
													"statements": [
														{
															"nativeSrc": "3036:29:3",
															"nodeType": "YulAssignment",
															"src": "3036:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3058:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:3"
																},
																"nativeSrc": "3045:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3045:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3036:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3101:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3101:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3074:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "3074:26:3"
																},
																"nativeSrc": "3074:33:3",
																"nodeType": "YulFunctionCall",
																"src": "3074:33:3"
															},
															"nativeSrc": "3074:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "3074:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2974:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3004:6:3",
														"nodeType": "YulTypedName",
														"src": "3004:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3012:3:3",
														"nodeType": "YulTypedName",
														"src": "3012:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3020:5:3",
														"nodeType": "YulTypedName",
														"src": "3020:5:3",
														"type": ""
													}
												],
												"src": "2974:139:3"
											},
											{
												"body": {
													"nativeSrc": "3163:45:3",
													"nodeType": "YulBlock",
													"src": "3163:45:3",
													"statements": [
														{
															"nativeSrc": "3173:29:3",
															"nodeType": "YulAssignment",
															"src": "3173:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3188:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3188:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3195:6:3",
																		"nodeType": "YulLiteral",
																		"src": "3195:6:3",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3184:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3184:3:3"
																},
																"nativeSrc": "3184:18:3",
																"nodeType": "YulFunctionCall",
																"src": "3184:18:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3173:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3173:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "3119:89:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3145:5:3",
														"nodeType": "YulTypedName",
														"src": "3145:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3155:7:3",
														"nodeType": "YulTypedName",
														"src": "3155:7:3",
														"type": ""
													}
												],
												"src": "3119:89:3"
											},
											{
												"body": {
													"nativeSrc": "3256:78:3",
													"nodeType": "YulBlock",
													"src": "3256:78:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3312:16:3",
																"nodeType": "YulBlock",
																"src": "3312:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3321:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3321:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3324:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3324:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3314:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3314:6:3"
																			},
																			"nativeSrc": "3314:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3314:12:3"
																		},
																		"nativeSrc": "3314:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3314:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3279:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3279:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3303:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "3303:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "3286:16:3",
																					"nodeType": "YulIdentifier",
																					"src": "3286:16:3"
																				},
																				"nativeSrc": "3286:23:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3286:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3276:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3276:2:3"
																		},
																		"nativeSrc": "3276:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3276:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3269:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:3"
																},
																"nativeSrc": "3269:42:3",
																"nodeType": "YulFunctionCall",
																"src": "3269:42:3"
															},
															"nativeSrc": "3266:62:3",
															"nodeType": "YulIf",
															"src": "3266:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "3214:120:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:3",
														"nodeType": "YulTypedName",
														"src": "3249:5:3",
														"type": ""
													}
												],
												"src": "3214:120:3"
											},
											{
												"body": {
													"nativeSrc": "3391:86:3",
													"nodeType": "YulBlock",
													"src": "3391:86:3",
													"statements": [
														{
															"nativeSrc": "3401:29:3",
															"nodeType": "YulAssignment",
															"src": "3401:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3423:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3423:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3410:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3410:12:3"
																},
																"nativeSrc": "3410:20:3",
																"nodeType": "YulFunctionCall",
																"src": "3410:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3401:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3401:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3465:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "3465:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "3439:25:3",
																	"nodeType": "YulIdentifier",
																	"src": "3439:25:3"
																},
																"nativeSrc": "3439:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3439:32:3"
															},
															"nativeSrc": "3439:32:3",
															"nodeType": "YulExpressionStatement",
															"src": "3439:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nativeSrc": "3340:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3369:6:3",
														"nodeType": "YulTypedName",
														"src": "3369:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3377:3:3",
														"nodeType": "YulTypedName",
														"src": "3377:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3385:5:3",
														"nodeType": "YulTypedName",
														"src": "3385:5:3",
														"type": ""
													}
												],
												"src": "3340:137:3"
											},
											{
												"body": {
													"nativeSrc": "3565:390:3",
													"nodeType": "YulBlock",
													"src": "3565:390:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3611:83:3",
																"nodeType": "YulBlock",
																"src": "3611:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3613:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3613:77:3"
																			},
																			"nativeSrc": "3613:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3613:79:3"
																		},
																		"nativeSrc": "3613:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3613:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3586:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3586:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3595:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3595:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3582:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:3"
																		},
																		"nativeSrc": "3582:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3582:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3607:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3607:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3578:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3578:3:3"
																},
																"nativeSrc": "3578:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3578:32:3"
															},
															"nativeSrc": "3575:119:3",
															"nodeType": "YulIf",
															"src": "3575:119:3"
														},
														{
															"nativeSrc": "3704:117:3",
															"nodeType": "YulBlock",
															"src": "3704:117:3",
															"statements": [
																{
																	"nativeSrc": "3719:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3719:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3733:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3723:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3723:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3748:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3748:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3783:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3783:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3794:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3794:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3779:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3779:3:3"
																				},
																				"nativeSrc": "3779:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3779:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3803:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3803:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3758:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3758:20:3"
																		},
																		"nativeSrc": "3758:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3758:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3748:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3748:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3831:117:3",
															"nodeType": "YulBlock",
															"src": "3831:117:3",
															"statements": [
																{
																	"nativeSrc": "3846:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3846:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3860:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3860:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3850:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3850:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3876:62:3",
																	"nodeType": "YulAssignment",
																	"src": "3876:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3910:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3910:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3921:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3921:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3906:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3906:3:3"
																				},
																				"nativeSrc": "3906:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3906:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3930:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3930:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nativeSrc": "3886:19:3",
																			"nodeType": "YulIdentifier",
																			"src": "3886:19:3"
																		},
																		"nativeSrc": "3886:52:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3886:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3876:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3876:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint16",
												"nativeSrc": "3483:472:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3527:9:3",
														"nodeType": "YulTypedName",
														"src": "3527:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3538:7:3",
														"nodeType": "YulTypedName",
														"src": "3538:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3550:6:3",
														"nodeType": "YulTypedName",
														"src": "3550:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3558:6:3",
														"nodeType": "YulTypedName",
														"src": "3558:6:3",
														"type": ""
													}
												],
												"src": "3483:472:3"
											},
											{
												"body": {
													"nativeSrc": "3993:28:3",
													"nodeType": "YulBlock",
													"src": "3993:28:3",
													"statements": [
														{
															"nativeSrc": "4003:12:3",
															"nodeType": "YulAssignment",
															"src": "4003:12:3",
															"value": {
																"name": "value",
																"nativeSrc": "4010:5:3",
																"nodeType": "YulIdentifier",
																"src": "4010:5:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4003:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:3"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3961:60:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3979:5:3",
														"nodeType": "YulTypedName",
														"src": "3979:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3989:3:3",
														"nodeType": "YulTypedName",
														"src": "3989:3:3",
														"type": ""
													}
												],
												"src": "3961:60:3"
											},
											{
												"body": {
													"nativeSrc": "4087:82:3",
													"nodeType": "YulBlock",
													"src": "4087:82:3",
													"statements": [
														{
															"nativeSrc": "4097:66:3",
															"nodeType": "YulAssignment",
															"src": "4097:66:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4155:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4155:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4137:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "4137:17:3"
																				},
																				"nativeSrc": "4137:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4137:24:3"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4128:8:3",
																			"nodeType": "YulIdentifier",
																			"src": "4128:8:3"
																		},
																		"nativeSrc": "4128:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4128:34:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4110:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4110:17:3"
																},
																"nativeSrc": "4110:53:3",
																"nodeType": "YulFunctionCall",
																"src": "4110:53:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4097:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "4097:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4027:142:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4067:5:3",
														"nodeType": "YulTypedName",
														"src": "4067:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4077:9:3",
														"nodeType": "YulTypedName",
														"src": "4077:9:3",
														"type": ""
													}
												],
												"src": "4027:142:3"
											},
											{
												"body": {
													"nativeSrc": "4235:66:3",
													"nodeType": "YulBlock",
													"src": "4235:66:3",
													"statements": [
														{
															"nativeSrc": "4245:50:3",
															"nodeType": "YulAssignment",
															"src": "4245:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4289:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4289:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4258:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "4258:30:3"
																},
																"nativeSrc": "4258:37:3",
																"nodeType": "YulFunctionCall",
																"src": "4258:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4245:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "4245:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4175:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4215:5:3",
														"nodeType": "YulTypedName",
														"src": "4215:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4225:9:3",
														"nodeType": "YulTypedName",
														"src": "4225:9:3",
														"type": ""
													}
												],
												"src": "4175:126:3"
											},
											{
												"body": {
													"nativeSrc": "4381:66:3",
													"nodeType": "YulBlock",
													"src": "4381:66:3",
													"statements": [
														{
															"nativeSrc": "4391:50:3",
															"nodeType": "YulAssignment",
															"src": "4391:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4435:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "4435:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4404:30:3",
																	"nodeType": "YulIdentifier",
																	"src": "4404:30:3"
																},
																"nativeSrc": "4404:37:3",
																"nodeType": "YulFunctionCall",
																"src": "4404:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4391:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "4391:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "4307:140:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4361:5:3",
														"nodeType": "YulTypedName",
														"src": "4361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4371:9:3",
														"nodeType": "YulTypedName",
														"src": "4371:9:3",
														"type": ""
													}
												],
												"src": "4307:140:3"
											},
											{
												"body": {
													"nativeSrc": "4532:80:3",
													"nodeType": "YulBlock",
													"src": "4532:80:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4549:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4549:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4599:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "4599:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "4554:44:3",
																			"nodeType": "YulIdentifier",
																			"src": "4554:44:3"
																		},
																		"nativeSrc": "4554:51:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4554:51:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4542:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:3"
																},
																"nativeSrc": "4542:64:3",
																"nodeType": "YulFunctionCall",
																"src": "4542:64:3"
															},
															"nativeSrc": "4542:64:3",
															"nodeType": "YulExpressionStatement",
															"src": "4542:64:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "4453:159:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4520:5:3",
														"nodeType": "YulTypedName",
														"src": "4520:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4527:3:3",
														"nodeType": "YulTypedName",
														"src": "4527:3:3",
														"type": ""
													}
												],
												"src": "4453:159:3"
											},
											{
												"body": {
													"nativeSrc": "4730:138:3",
													"nodeType": "YulBlock",
													"src": "4730:138:3",
													"statements": [
														{
															"nativeSrc": "4740:26:3",
															"nodeType": "YulAssignment",
															"src": "4740:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4752:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4752:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4763:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4763:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4748:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4748:3:3"
																},
																"nativeSrc": "4748:18:3",
																"nodeType": "YulFunctionCall",
																"src": "4748:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4740:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4740:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4834:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4834:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4847:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4847:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4858:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4858:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4843:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4843:3:3"
																		},
																		"nativeSrc": "4843:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "4776:57:3",
																	"nodeType": "YulIdentifier",
																	"src": "4776:57:3"
																},
																"nativeSrc": "4776:85:3",
																"nodeType": "YulFunctionCall",
																"src": "4776:85:3"
															},
															"nativeSrc": "4776:85:3",
															"nodeType": "YulExpressionStatement",
															"src": "4776:85:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "4618:250:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4702:9:3",
														"nodeType": "YulTypedName",
														"src": "4702:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4714:6:3",
														"nodeType": "YulTypedName",
														"src": "4714:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4725:4:3",
														"nodeType": "YulTypedName",
														"src": "4725:4:3",
														"type": ""
													}
												],
												"src": "4618:250:3"
											},
											{
												"body": {
													"nativeSrc": "4980:71:3",
													"nodeType": "YulBlock",
													"src": "4980:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5002:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5002:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5010:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5010:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4998:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4998:3:3"
																		},
																		"nativeSrc": "4998:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4998:14:3"
																	},
																	{
																		"hexValue": "596f752068617665206e6f7420656e6f7567682062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5014:29:3",
																		"nodeType": "YulLiteral",
																		"src": "5014:29:3",
																		"type": "",
																		"value": "You have not enough balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:3"
																},
																"nativeSrc": "4991:53:3",
																"nodeType": "YulFunctionCall",
																"src": "4991:53:3"
															},
															"nativeSrc": "4991:53:3",
															"nodeType": "YulExpressionStatement",
															"src": "4991:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54",
												"nativeSrc": "4874:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4972:6:3",
														"nodeType": "YulTypedName",
														"src": "4972:6:3",
														"type": ""
													}
												],
												"src": "4874:177:3"
											},
											{
												"body": {
													"nativeSrc": "5203:220:3",
													"nodeType": "YulBlock",
													"src": "5203:220:3",
													"statements": [
														{
															"nativeSrc": "5213:74:3",
															"nodeType": "YulAssignment",
															"src": "5213:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5279:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5279:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5284:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5284:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5220:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "5220:58:3"
																},
																"nativeSrc": "5220:67:3",
																"nodeType": "YulFunctionCall",
																"src": "5220:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5213:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5385:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5385:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54",
																	"nativeSrc": "5296:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "5296:88:3"
																},
																"nativeSrc": "5296:93:3",
																"nodeType": "YulFunctionCall",
																"src": "5296:93:3"
															},
															"nativeSrc": "5296:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "5296:93:3"
														},
														{
															"nativeSrc": "5398:19:3",
															"nodeType": "YulAssignment",
															"src": "5398:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5409:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5409:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5414:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5414:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5405:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5405:3:3"
																},
																"nativeSrc": "5405:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5405:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5398:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5398:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5057:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5191:3:3",
														"nodeType": "YulTypedName",
														"src": "5191:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5199:3:3",
														"nodeType": "YulTypedName",
														"src": "5199:3:3",
														"type": ""
													}
												],
												"src": "5057:366:3"
											},
											{
												"body": {
													"nativeSrc": "5600:248:3",
													"nodeType": "YulBlock",
													"src": "5600:248:3",
													"statements": [
														{
															"nativeSrc": "5610:26:3",
															"nodeType": "YulAssignment",
															"src": "5610:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5622:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5622:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5633:2:3",
																		"nodeType": "YulLiteral",
																		"src": "5633:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5618:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5618:3:3"
																},
																"nativeSrc": "5618:18:3",
																"nodeType": "YulFunctionCall",
																"src": "5618:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5610:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5610:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5657:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5668:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5668:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5653:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5653:3:3"
																		},
																		"nativeSrc": "5653:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5653:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5676:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "5676:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5682:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5682:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5672:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5672:3:3"
																		},
																		"nativeSrc": "5672:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5672:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5646:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5646:6:3"
																},
																"nativeSrc": "5646:47:3",
																"nodeType": "YulFunctionCall",
																"src": "5646:47:3"
															},
															"nativeSrc": "5646:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "5646:47:3"
														},
														{
															"nativeSrc": "5702:139:3",
															"nodeType": "YulAssignment",
															"src": "5702:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5836:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "5836:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5710:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "5710:124:3"
																},
																"nativeSrc": "5710:131:3",
																"nodeType": "YulFunctionCall",
																"src": "5710:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5702:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5702:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5429:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5580:9:3",
														"nodeType": "YulTypedName",
														"src": "5580:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5595:4:3",
														"nodeType": "YulTypedName",
														"src": "5595:4:3",
														"type": ""
													}
												],
												"src": "5429:419:3"
											},
											{
												"body": {
													"nativeSrc": "5960:115:3",
													"nodeType": "YulBlock",
													"src": "5960:115:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5982:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5982:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5990:1:3",
																				"nodeType": "YulLiteral",
																				"src": "5990:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5978:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:3"
																		},
																		"nativeSrc": "5978:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5978:14:3"
																	},
																	{
																		"hexValue": "596f7572207374616b696e672074696d65206973206e6f7420636f6d706c6574",
																		"kind": "string",
																		"nativeSrc": "5994:34:3",
																		"nodeType": "YulLiteral",
																		"src": "5994:34:3",
																		"type": "",
																		"value": "Your staking time is not complet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5971:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5971:6:3"
																},
																"nativeSrc": "5971:58:3",
																"nodeType": "YulFunctionCall",
																"src": "5971:58:3"
															},
															"nativeSrc": "5971:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "5971:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6050:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6050:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6058:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6058:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6046:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6046:3:3"
																		},
																		"nativeSrc": "6046:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6046:15:3"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "6063:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6063:4:3",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6039:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6039:6:3"
																},
																"nativeSrc": "6039:29:3",
																"nodeType": "YulFunctionCall",
																"src": "6039:29:3"
															},
															"nativeSrc": "6039:29:3",
															"nodeType": "YulExpressionStatement",
															"src": "6039:29:3"
														}
													]
												},
												"name": "store_literal_in_memory_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292",
												"nativeSrc": "5854:221:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5952:6:3",
														"nodeType": "YulTypedName",
														"src": "5952:6:3",
														"type": ""
													}
												],
												"src": "5854:221:3"
											},
											{
												"body": {
													"nativeSrc": "6227:220:3",
													"nodeType": "YulBlock",
													"src": "6227:220:3",
													"statements": [
														{
															"nativeSrc": "6237:74:3",
															"nodeType": "YulAssignment",
															"src": "6237:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6303:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6303:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6308:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6308:2:3",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6244:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "6244:58:3"
																},
																"nativeSrc": "6244:67:3",
																"nodeType": "YulFunctionCall",
																"src": "6244:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6237:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6409:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6409:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292",
																	"nativeSrc": "6320:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "6320:88:3"
																},
																"nativeSrc": "6320:93:3",
																"nodeType": "YulFunctionCall",
																"src": "6320:93:3"
															},
															"nativeSrc": "6320:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "6320:93:3"
														},
														{
															"nativeSrc": "6422:19:3",
															"nodeType": "YulAssignment",
															"src": "6422:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6433:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "6433:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6438:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6438:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6429:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:3"
																},
																"nativeSrc": "6429:12:3",
																"nodeType": "YulFunctionCall",
																"src": "6429:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6422:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6422:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6081:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6215:3:3",
														"nodeType": "YulTypedName",
														"src": "6215:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6223:3:3",
														"nodeType": "YulTypedName",
														"src": "6223:3:3",
														"type": ""
													}
												],
												"src": "6081:366:3"
											},
											{
												"body": {
													"nativeSrc": "6624:248:3",
													"nodeType": "YulBlock",
													"src": "6624:248:3",
													"statements": [
														{
															"nativeSrc": "6634:26:3",
															"nodeType": "YulAssignment",
															"src": "6634:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6646:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6646:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6657:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6657:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6642:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6642:3:3"
																},
																"nativeSrc": "6642:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6642:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6634:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6634:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6681:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6681:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6692:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6692:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6677:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6677:3:3"
																		},
																		"nativeSrc": "6677:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6677:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6700:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6700:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6706:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6706:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6696:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6696:3:3"
																		},
																		"nativeSrc": "6696:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6696:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6670:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:3"
																},
																"nativeSrc": "6670:47:3",
																"nodeType": "YulFunctionCall",
																"src": "6670:47:3"
															},
															"nativeSrc": "6670:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "6670:47:3"
														},
														{
															"nativeSrc": "6726:139:3",
															"nodeType": "YulAssignment",
															"src": "6726:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6860:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6734:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "6734:124:3"
																},
																"nativeSrc": "6734:131:3",
																"nodeType": "YulFunctionCall",
																"src": "6734:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6726:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6726:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6453:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6604:9:3",
														"nodeType": "YulTypedName",
														"src": "6604:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6619:4:3",
														"nodeType": "YulTypedName",
														"src": "6619:4:3",
														"type": ""
													}
												],
												"src": "6453:419:3"
											},
											{
												"body": {
													"nativeSrc": "6906:152:3",
													"nodeType": "YulBlock",
													"src": "6906:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:77:3",
																		"nodeType": "YulLiteral",
																		"src": "6926:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:3"
																},
																"nativeSrc": "6916:88:3",
																"nodeType": "YulFunctionCall",
																"src": "6916:88:3"
															},
															"nativeSrc": "6916:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "6916:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7020:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7020:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7023:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7023:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7013:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:3"
																},
																"nativeSrc": "7013:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7013:15:3"
															},
															"nativeSrc": "7013:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7013:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7044:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7044:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7047:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7047:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7037:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7037:6:3"
																},
																"nativeSrc": "7037:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7037:15:3"
															},
															"nativeSrc": "7037:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7037:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6878:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "6878:180:3"
											},
											{
												"body": {
													"nativeSrc": "7109:149:3",
													"nodeType": "YulBlock",
													"src": "7109:149:3",
													"statements": [
														{
															"nativeSrc": "7119:25:3",
															"nodeType": "YulAssignment",
															"src": "7119:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7142:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7142:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7124:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7124:17:3"
																},
																"nativeSrc": "7124:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7124:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7119:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7119:1:3"
																}
															]
														},
														{
															"nativeSrc": "7153:25:3",
															"nodeType": "YulAssignment",
															"src": "7153:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7176:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7176:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7158:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7158:17:3"
																},
																"nativeSrc": "7158:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7158:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7153:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7153:1:3"
																}
															]
														},
														{
															"nativeSrc": "7187:17:3",
															"nodeType": "YulAssignment",
															"src": "7187:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7199:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7199:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7202:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7202:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7195:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:3"
																},
																"nativeSrc": "7195:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7195:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7187:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7187:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7229:22:3",
																"nodeType": "YulBlock",
																"src": "7229:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7231:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "7231:16:3"
																			},
																			"nativeSrc": "7231:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7231:18:3"
																		},
																		"nativeSrc": "7231:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "7231:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7220:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "7220:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7226:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7226:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7217:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "7217:2:3"
																},
																"nativeSrc": "7217:11:3",
																"nodeType": "YulFunctionCall",
																"src": "7217:11:3"
															},
															"nativeSrc": "7214:37:3",
															"nodeType": "YulIf",
															"src": "7214:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7064:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7095:1:3",
														"nodeType": "YulTypedName",
														"src": "7095:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7098:1:3",
														"nodeType": "YulTypedName",
														"src": "7098:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7104:4:3",
														"nodeType": "YulTypedName",
														"src": "7104:4:3",
														"type": ""
													}
												],
												"src": "7064:194:3"
											},
											{
												"body": {
													"nativeSrc": "7312:362:3",
													"nodeType": "YulBlock",
													"src": "7312:362:3",
													"statements": [
														{
															"nativeSrc": "7322:25:3",
															"nodeType": "YulAssignment",
															"src": "7322:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7345:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7345:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7327:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7327:17:3"
																},
																"nativeSrc": "7327:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7327:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7322:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7322:1:3"
																}
															]
														},
														{
															"nativeSrc": "7356:25:3",
															"nodeType": "YulAssignment",
															"src": "7356:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7379:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7379:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7361:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7361:17:3"
																},
																"nativeSrc": "7361:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7361:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7356:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7356:1:3"
																}
															]
														},
														{
															"nativeSrc": "7390:28:3",
															"nodeType": "YulVariableDeclaration",
															"src": "7390:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7413:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7413:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7416:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7416:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7409:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7409:3:3"
																},
																"nativeSrc": "7409:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7409:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7394:11:3",
																	"nodeType": "YulTypedName",
																	"src": "7394:11:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7427:41:3",
															"nodeType": "YulAssignment",
															"src": "7427:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7456:11:3",
																		"nodeType": "YulIdentifier",
																		"src": "7456:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7438:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7438:17:3"
																},
																"nativeSrc": "7438:30:3",
																"nodeType": "YulFunctionCall",
																"src": "7438:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7427:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "7427:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7645:22:3",
																"nodeType": "YulBlock",
																"src": "7645:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7647:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "7647:16:3"
																			},
																			"nativeSrc": "7647:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "7647:18:3"
																		},
																		"nativeSrc": "7647:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "7647:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7578:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "7578:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7571:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "7571:6:3"
																				},
																				"nativeSrc": "7571:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7571:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7601:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "7601:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7608:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "7608:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7617:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "7617:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7604:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "7604:3:3"
																						},
																						"nativeSrc": "7604:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "7604:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7598:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "7598:2:3"
																				},
																				"nativeSrc": "7598:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7598:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7551:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "7551:2:3"
																		},
																		"nativeSrc": "7551:83:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7551:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7531:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:3"
																},
																"nativeSrc": "7531:113:3",
																"nodeType": "YulFunctionCall",
																"src": "7531:113:3"
															},
															"nativeSrc": "7528:139:3",
															"nodeType": "YulIf",
															"src": "7528:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7264:410:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7295:1:3",
														"nodeType": "YulTypedName",
														"src": "7295:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7298:1:3",
														"nodeType": "YulTypedName",
														"src": "7298:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7304:7:3",
														"nodeType": "YulTypedName",
														"src": "7304:7:3",
														"type": ""
													}
												],
												"src": "7264:410:3"
											},
											{
												"body": {
													"nativeSrc": "7708:152:3",
													"nodeType": "YulBlock",
													"src": "7708:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7725:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7725:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7728:77:3",
																		"nodeType": "YulLiteral",
																		"src": "7728:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7718:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7718:6:3"
																},
																"nativeSrc": "7718:88:3",
																"nodeType": "YulFunctionCall",
																"src": "7718:88:3"
															},
															"nativeSrc": "7718:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "7718:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7822:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7822:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7825:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7825:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7815:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:3"
																},
																"nativeSrc": "7815:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7815:15:3"
															},
															"nativeSrc": "7815:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7815:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7846:1:3",
																		"nodeType": "YulLiteral",
																		"src": "7846:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7849:4:3",
																		"nodeType": "YulLiteral",
																		"src": "7849:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7839:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7839:6:3"
																},
																"nativeSrc": "7839:15:3",
																"nodeType": "YulFunctionCall",
																"src": "7839:15:3"
															},
															"nativeSrc": "7839:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "7839:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7680:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "7680:180:3"
											},
											{
												"body": {
													"nativeSrc": "7908:143:3",
													"nodeType": "YulBlock",
													"src": "7908:143:3",
													"statements": [
														{
															"nativeSrc": "7918:25:3",
															"nodeType": "YulAssignment",
															"src": "7918:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7941:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7941:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7923:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7923:17:3"
																},
																"nativeSrc": "7923:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7923:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7918:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7918:1:3"
																}
															]
														},
														{
															"nativeSrc": "7952:25:3",
															"nodeType": "YulAssignment",
															"src": "7952:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7975:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7975:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7957:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "7957:17:3"
																},
																"nativeSrc": "7957:20:3",
																"nodeType": "YulFunctionCall",
																"src": "7957:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7952:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "7952:1:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7999:22:3",
																"nodeType": "YulBlock",
																"src": "7999:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8001:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8001:16:3"
																			},
																			"nativeSrc": "8001:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8001:18:3"
																		},
																		"nativeSrc": "8001:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8001:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7996:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "7996:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7989:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:3"
																},
																"nativeSrc": "7989:9:3",
																"nodeType": "YulFunctionCall",
																"src": "7989:9:3"
															},
															"nativeSrc": "7986:35:3",
															"nodeType": "YulIf",
															"src": "7986:35:3"
														},
														{
															"nativeSrc": "8031:14:3",
															"nodeType": "YulAssignment",
															"src": "8031:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8040:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8040:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8043:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8043:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8036:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8036:3:3"
																},
																"nativeSrc": "8036:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8036:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8031:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8031:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7866:185:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7897:1:3",
														"nodeType": "YulTypedName",
														"src": "7897:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7900:1:3",
														"nodeType": "YulTypedName",
														"src": "7900:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7906:1:3",
														"nodeType": "YulTypedName",
														"src": "7906:1:3",
														"type": ""
													}
												],
												"src": "7866:185:3"
											},
											{
												"body": {
													"nativeSrc": "8101:147:3",
													"nodeType": "YulBlock",
													"src": "8101:147:3",
													"statements": [
														{
															"nativeSrc": "8111:25:3",
															"nodeType": "YulAssignment",
															"src": "8111:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8134:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8134:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8116:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8116:17:3"
																},
																"nativeSrc": "8116:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8116:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8111:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8111:1:3"
																}
															]
														},
														{
															"nativeSrc": "8145:25:3",
															"nodeType": "YulAssignment",
															"src": "8145:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8168:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8168:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8150:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "8150:17:3"
																},
																"nativeSrc": "8150:20:3",
																"nodeType": "YulFunctionCall",
																"src": "8150:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8145:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "8145:1:3"
																}
															]
														},
														{
															"nativeSrc": "8179:16:3",
															"nodeType": "YulAssignment",
															"src": "8179:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8190:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8190:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8193:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8193:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8186:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8186:3:3"
																},
																"nativeSrc": "8186:9:3",
																"nodeType": "YulFunctionCall",
																"src": "8186:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8179:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8179:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8219:22:3",
																"nodeType": "YulBlock",
																"src": "8219:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8221:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "8221:16:3"
																			},
																			"nativeSrc": "8221:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8221:18:3"
																		},
																		"nativeSrc": "8221:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8221:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8211:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "8211:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8214:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8214:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8208:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "8208:2:3"
																},
																"nativeSrc": "8208:10:3",
																"nodeType": "YulFunctionCall",
																"src": "8208:10:3"
															},
															"nativeSrc": "8205:36:3",
															"nodeType": "YulIf",
															"src": "8205:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8057:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8088:1:3",
														"nodeType": "YulTypedName",
														"src": "8088:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8091:1:3",
														"nodeType": "YulTypedName",
														"src": "8091:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8097:3:3",
														"nodeType": "YulTypedName",
														"src": "8097:3:3",
														"type": ""
													}
												],
												"src": "8057:191:3"
											},
											{
												"body": {
													"nativeSrc": "8319:53:3",
													"nodeType": "YulBlock",
													"src": "8319:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8336:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "8336:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8359:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "8359:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8341:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "8341:17:3"
																		},
																		"nativeSrc": "8341:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8341:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8329:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8329:6:3"
																},
																"nativeSrc": "8329:37:3",
																"nodeType": "YulFunctionCall",
																"src": "8329:37:3"
															},
															"nativeSrc": "8329:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "8329:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8254:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8307:5:3",
														"nodeType": "YulTypedName",
														"src": "8307:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8314:3:3",
														"nodeType": "YulTypedName",
														"src": "8314:3:3",
														"type": ""
													}
												],
												"src": "8254:118:3"
											},
											{
												"body": {
													"nativeSrc": "8504:206:3",
													"nodeType": "YulBlock",
													"src": "8504:206:3",
													"statements": [
														{
															"nativeSrc": "8514:26:3",
															"nodeType": "YulAssignment",
															"src": "8514:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8526:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8526:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8537:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8537:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8522:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8522:3:3"
																},
																"nativeSrc": "8522:18:3",
																"nodeType": "YulFunctionCall",
																"src": "8522:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8514:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8514:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8594:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8594:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8607:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8607:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8618:1:3",
																				"nodeType": "YulLiteral",
																				"src": "8618:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8603:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8603:3:3"
																		},
																		"nativeSrc": "8603:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8603:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8550:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "8550:43:3"
																},
																"nativeSrc": "8550:71:3",
																"nodeType": "YulFunctionCall",
																"src": "8550:71:3"
															},
															"nativeSrc": "8550:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "8550:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8675:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "8675:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8688:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8688:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8699:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8699:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8684:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8684:3:3"
																		},
																		"nativeSrc": "8684:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8684:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8631:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "8631:43:3"
																},
																"nativeSrc": "8631:72:3",
																"nodeType": "YulFunctionCall",
																"src": "8631:72:3"
															},
															"nativeSrc": "8631:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "8631:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8378:332:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8468:9:3",
														"nodeType": "YulTypedName",
														"src": "8468:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8480:6:3",
														"nodeType": "YulTypedName",
														"src": "8480:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8488:6:3",
														"nodeType": "YulTypedName",
														"src": "8488:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8499:4:3",
														"nodeType": "YulTypedName",
														"src": "8499:4:3",
														"type": ""
													}
												],
												"src": "8378:332:3"
											},
											{
												"body": {
													"nativeSrc": "8758:48:3",
													"nodeType": "YulBlock",
													"src": "8758:48:3",
													"statements": [
														{
															"nativeSrc": "8768:32:3",
															"nodeType": "YulAssignment",
															"src": "8768:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8793:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "8793:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8786:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "8786:6:3"
																		},
																		"nativeSrc": "8786:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8786:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8779:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:3"
																},
																"nativeSrc": "8779:21:3",
																"nodeType": "YulFunctionCall",
																"src": "8779:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8768:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "8768:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8716:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8740:5:3",
														"nodeType": "YulTypedName",
														"src": "8740:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8750:7:3",
														"nodeType": "YulTypedName",
														"src": "8750:7:3",
														"type": ""
													}
												],
												"src": "8716:90:3"
											},
											{
												"body": {
													"nativeSrc": "8852:76:3",
													"nodeType": "YulBlock",
													"src": "8852:76:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "8906:16:3",
																"nodeType": "YulBlock",
																"src": "8906:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8915:1:3",
																					"nodeType": "YulLiteral",
																					"src": "8915:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8918:1:3",
																					"nodeType": "YulLiteral",
																					"src": "8918:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8908:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "8908:6:3"
																			},
																			"nativeSrc": "8908:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "8908:12:3"
																		},
																		"nativeSrc": "8908:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "8908:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8875:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "8875:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8897:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "8897:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8882:14:3",
																					"nodeType": "YulIdentifier",
																					"src": "8882:14:3"
																				},
																				"nativeSrc": "8882:21:3",
																				"nodeType": "YulFunctionCall",
																				"src": "8882:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8872:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "8872:2:3"
																		},
																		"nativeSrc": "8872:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8872:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8865:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8865:6:3"
																},
																"nativeSrc": "8865:40:3",
																"nodeType": "YulFunctionCall",
																"src": "8865:40:3"
															},
															"nativeSrc": "8862:60:3",
															"nodeType": "YulIf",
															"src": "8862:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8812:116:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8845:5:3",
														"nodeType": "YulTypedName",
														"src": "8845:5:3",
														"type": ""
													}
												],
												"src": "8812:116:3"
											},
											{
												"body": {
													"nativeSrc": "8994:77:3",
													"nodeType": "YulBlock",
													"src": "8994:77:3",
													"statements": [
														{
															"nativeSrc": "9004:22:3",
															"nodeType": "YulAssignment",
															"src": "9004:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9019:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "9019:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9013:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "9013:5:3"
																},
																"nativeSrc": "9013:13:3",
																"nodeType": "YulFunctionCall",
																"src": "9013:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9004:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "9004:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9059:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "9059:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9035:23:3",
																	"nodeType": "YulIdentifier",
																	"src": "9035:23:3"
																},
																"nativeSrc": "9035:30:3",
																"nodeType": "YulFunctionCall",
																"src": "9035:30:3"
															},
															"nativeSrc": "9035:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "9035:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8934:137:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8972:6:3",
														"nodeType": "YulTypedName",
														"src": "8972:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8980:3:3",
														"nodeType": "YulTypedName",
														"src": "8980:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8988:5:3",
														"nodeType": "YulTypedName",
														"src": "8988:5:3",
														"type": ""
													}
												],
												"src": "8934:137:3"
											},
											{
												"body": {
													"nativeSrc": "9151:271:3",
													"nodeType": "YulBlock",
													"src": "9151:271:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "9197:83:3",
																"nodeType": "YulBlock",
																"src": "9197:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9199:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "9199:77:3"
																			},
																			"nativeSrc": "9199:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9199:79:3"
																		},
																		"nativeSrc": "9199:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9199:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9172:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "9172:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9181:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9181:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9168:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9168:3:3"
																		},
																		"nativeSrc": "9168:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9168:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9193:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9193:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9164:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9164:3:3"
																},
																"nativeSrc": "9164:32:3",
																"nodeType": "YulFunctionCall",
																"src": "9164:32:3"
															},
															"nativeSrc": "9161:119:3",
															"nodeType": "YulIf",
															"src": "9161:119:3"
														},
														{
															"nativeSrc": "9290:125:3",
															"nodeType": "YulBlock",
															"src": "9290:125:3",
															"statements": [
																{
																	"nativeSrc": "9305:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9305:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9319:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9319:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9309:6:3",
																			"nodeType": "YulTypedName",
																			"src": "9309:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9334:71:3",
																	"nodeType": "YulAssignment",
																	"src": "9334:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9377:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "9377:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9388:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "9388:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9373:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "9373:3:3"
																				},
																				"nativeSrc": "9373:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "9373:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9397:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "9397:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9344:28:3",
																			"nodeType": "YulIdentifier",
																			"src": "9344:28:3"
																		},
																		"nativeSrc": "9344:61:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9344:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9334:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "9334:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9077:345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9121:9:3",
														"nodeType": "YulTypedName",
														"src": "9121:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9132:7:3",
														"nodeType": "YulTypedName",
														"src": "9132:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9144:6:3",
														"nodeType": "YulTypedName",
														"src": "9144:6:3",
														"type": ""
													}
												],
												"src": "9077:345:3"
											},
											{
												"body": {
													"nativeSrc": "9534:116:3",
													"nodeType": "YulBlock",
													"src": "9534:116:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9556:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9556:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9564:1:3",
																				"nodeType": "YulLiteral",
																				"src": "9564:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9552:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9552:3:3"
																		},
																		"nativeSrc": "9552:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9552:14:3"
																	},
																	{
																		"hexValue": "596f75206d7573742070726f766964652061746c656173742033303020746f6b",
																		"kind": "string",
																		"nativeSrc": "9568:34:3",
																		"nodeType": "YulLiteral",
																		"src": "9568:34:3",
																		"type": "",
																		"value": "You must provide atleast 300 tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9545:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9545:6:3"
																},
																"nativeSrc": "9545:58:3",
																"nodeType": "YulFunctionCall",
																"src": "9545:58:3"
															},
															"nativeSrc": "9545:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "9545:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9624:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9624:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9632:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9632:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9620:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:3"
																		},
																		"nativeSrc": "9620:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9620:15:3"
																	},
																	{
																		"hexValue": "656e73",
																		"kind": "string",
																		"nativeSrc": "9637:5:3",
																		"nodeType": "YulLiteral",
																		"src": "9637:5:3",
																		"type": "",
																		"value": "ens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9613:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9613:6:3"
																},
																"nativeSrc": "9613:30:3",
																"nodeType": "YulFunctionCall",
																"src": "9613:30:3"
															},
															"nativeSrc": "9613:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "9613:30:3"
														}
													]
												},
												"name": "store_literal_in_memory_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7",
												"nativeSrc": "9428:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9526:6:3",
														"nodeType": "YulTypedName",
														"src": "9526:6:3",
														"type": ""
													}
												],
												"src": "9428:222:3"
											},
											{
												"body": {
													"nativeSrc": "9802:220:3",
													"nodeType": "YulBlock",
													"src": "9802:220:3",
													"statements": [
														{
															"nativeSrc": "9812:74:3",
															"nodeType": "YulAssignment",
															"src": "9812:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9878:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "9878:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9883:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9883:2:3",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9819:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "9819:58:3"
																},
																"nativeSrc": "9819:67:3",
																"nodeType": "YulFunctionCall",
																"src": "9819:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9812:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9812:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9984:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "9984:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7",
																	"nativeSrc": "9895:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "9895:88:3"
																},
																"nativeSrc": "9895:93:3",
																"nodeType": "YulFunctionCall",
																"src": "9895:93:3"
															},
															"nativeSrc": "9895:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "9895:93:3"
														},
														{
															"nativeSrc": "9997:19:3",
															"nodeType": "YulAssignment",
															"src": "9997:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10008:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10008:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10013:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10013:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10004:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10004:3:3"
																},
																"nativeSrc": "10004:12:3",
																"nodeType": "YulFunctionCall",
																"src": "10004:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9997:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9997:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9656:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9790:3:3",
														"nodeType": "YulTypedName",
														"src": "9790:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9798:3:3",
														"nodeType": "YulTypedName",
														"src": "9798:3:3",
														"type": ""
													}
												],
												"src": "9656:366:3"
											},
											{
												"body": {
													"nativeSrc": "10199:248:3",
													"nodeType": "YulBlock",
													"src": "10199:248:3",
													"statements": [
														{
															"nativeSrc": "10209:26:3",
															"nodeType": "YulAssignment",
															"src": "10209:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10221:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "10221:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10232:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10232:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10217:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10217:3:3"
																},
																"nativeSrc": "10217:18:3",
																"nodeType": "YulFunctionCall",
																"src": "10217:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10209:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10209:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10256:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10256:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10267:1:3",
																				"nodeType": "YulLiteral",
																				"src": "10267:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10252:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10252:3:3"
																		},
																		"nativeSrc": "10252:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10252:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10275:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "10275:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10281:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10281:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10271:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10271:3:3"
																		},
																		"nativeSrc": "10271:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10271:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10245:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10245:6:3"
																},
																"nativeSrc": "10245:47:3",
																"nodeType": "YulFunctionCall",
																"src": "10245:47:3"
															},
															"nativeSrc": "10245:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "10245:47:3"
														},
														{
															"nativeSrc": "10301:139:3",
															"nodeType": "YulAssignment",
															"src": "10301:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10435:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "10435:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10309:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "10309:124:3"
																},
																"nativeSrc": "10309:131:3",
																"nodeType": "YulFunctionCall",
																"src": "10309:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10301:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10301:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10028:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10179:9:3",
														"nodeType": "YulTypedName",
														"src": "10179:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10194:4:3",
														"nodeType": "YulTypedName",
														"src": "10194:4:3",
														"type": ""
													}
												],
												"src": "10028:419:3"
											},
											{
												"body": {
													"nativeSrc": "10559:134:3",
													"nodeType": "YulBlock",
													"src": "10559:134:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10581:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "10581:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10589:1:3",
																				"nodeType": "YulLiteral",
																				"src": "10589:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10577:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10577:3:3"
																		},
																		"nativeSrc": "10577:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10577:14:3"
																	},
																	{
																		"hexValue": "5468652070726f76696465642074696d65206973206e6f742076616c69642e20",
																		"kind": "string",
																		"nativeSrc": "10593:34:3",
																		"nodeType": "YulLiteral",
																		"src": "10593:34:3",
																		"type": "",
																		"value": "The provided time is not valid. "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10570:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10570:6:3"
																},
																"nativeSrc": "10570:58:3",
																"nodeType": "YulFunctionCall",
																"src": "10570:58:3"
															},
															"nativeSrc": "10570:58:3",
															"nodeType": "YulExpressionStatement",
															"src": "10570:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10649:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "10649:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10657:2:3",
																				"nodeType": "YulLiteral",
																				"src": "10657:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10645:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10645:3:3"
																		},
																		"nativeSrc": "10645:15:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10645:15:3"
																	},
																	{
																		"hexValue": "6974206d75737420626520332c2036206f72203132",
																		"kind": "string",
																		"nativeSrc": "10662:23:3",
																		"nodeType": "YulLiteral",
																		"src": "10662:23:3",
																		"type": "",
																		"value": "it must be 3, 6 or 12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10638:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "10638:6:3"
																},
																"nativeSrc": "10638:48:3",
																"nodeType": "YulFunctionCall",
																"src": "10638:48:3"
															},
															"nativeSrc": "10638:48:3",
															"nodeType": "YulExpressionStatement",
															"src": "10638:48:3"
														}
													]
												},
												"name": "store_literal_in_memory_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188",
												"nativeSrc": "10453:240:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10551:6:3",
														"nodeType": "YulTypedName",
														"src": "10551:6:3",
														"type": ""
													}
												],
												"src": "10453:240:3"
											},
											{
												"body": {
													"nativeSrc": "10845:220:3",
													"nodeType": "YulBlock",
													"src": "10845:220:3",
													"statements": [
														{
															"nativeSrc": "10855:74:3",
															"nodeType": "YulAssignment",
															"src": "10855:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10921:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10921:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10926:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10926:2:3",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10862:58:3",
																	"nodeType": "YulIdentifier",
																	"src": "10862:58:3"
																},
																"nativeSrc": "10862:67:3",
																"nodeType": "YulFunctionCall",
																"src": "10862:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10855:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "10855:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11027:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "11027:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188",
																	"nativeSrc": "10938:88:3",
																	"nodeType": "YulIdentifier",
																	"src": "10938:88:3"
																},
																"nativeSrc": "10938:93:3",
																"nodeType": "YulFunctionCall",
																"src": "10938:93:3"
															},
															"nativeSrc": "10938:93:3",
															"nodeType": "YulExpressionStatement",
															"src": "10938:93:3"
														},
														{
															"nativeSrc": "11040:19:3",
															"nodeType": "YulAssignment",
															"src": "11040:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11051:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "11051:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11056:2:3",
																		"nodeType": "YulLiteral",
																		"src": "11056:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11047:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11047:3:3"
																},
																"nativeSrc": "11047:12:3",
																"nodeType": "YulFunctionCall",
																"src": "11047:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11040:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11040:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10699:366:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10833:3:3",
														"nodeType": "YulTypedName",
														"src": "10833:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10841:3:3",
														"nodeType": "YulTypedName",
														"src": "10841:3:3",
														"type": ""
													}
												],
												"src": "10699:366:3"
											},
											{
												"body": {
													"nativeSrc": "11242:248:3",
													"nodeType": "YulBlock",
													"src": "11242:248:3",
													"statements": [
														{
															"nativeSrc": "11252:26:3",
															"nodeType": "YulAssignment",
															"src": "11252:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11264:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "11264:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11275:2:3",
																		"nodeType": "YulLiteral",
																		"src": "11275:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11260:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11260:3:3"
																},
																"nativeSrc": "11260:18:3",
																"nodeType": "YulFunctionCall",
																"src": "11260:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11252:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "11252:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11299:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "11299:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11310:1:3",
																				"nodeType": "YulLiteral",
																				"src": "11310:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11295:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11295:3:3"
																		},
																		"nativeSrc": "11295:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11295:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11318:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "11318:4:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11324:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11314:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11314:3:3"
																		},
																		"nativeSrc": "11314:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11288:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "11288:6:3"
																},
																"nativeSrc": "11288:47:3",
																"nodeType": "YulFunctionCall",
																"src": "11288:47:3"
															},
															"nativeSrc": "11288:47:3",
															"nodeType": "YulExpressionStatement",
															"src": "11288:47:3"
														},
														{
															"nativeSrc": "11344:139:3",
															"nodeType": "YulAssignment",
															"src": "11344:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11478:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "11478:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11352:124:3",
																	"nodeType": "YulIdentifier",
																	"src": "11352:124:3"
																},
																"nativeSrc": "11352:131:3",
																"nodeType": "YulFunctionCall",
																"src": "11352:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11344:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "11344:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11071:419:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11222:9:3",
														"nodeType": "YulTypedName",
														"src": "11222:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11237:4:3",
														"nodeType": "YulTypedName",
														"src": "11237:4:3",
														"type": ""
													}
												],
												"src": "11071:419:3"
											},
											{
												"body": {
													"nativeSrc": "11650:288:3",
													"nodeType": "YulBlock",
													"src": "11650:288:3",
													"statements": [
														{
															"nativeSrc": "11660:26:3",
															"nodeType": "YulAssignment",
															"src": "11660:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11672:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "11672:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11683:2:3",
																		"nodeType": "YulLiteral",
																		"src": "11683:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11668:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "11668:3:3"
																},
																"nativeSrc": "11668:18:3",
																"nodeType": "YulFunctionCall",
																"src": "11668:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11660:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "11660:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11740:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "11740:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11753:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "11753:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11764:1:3",
																				"nodeType": "YulLiteral",
																				"src": "11764:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11749:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11749:3:3"
																		},
																		"nativeSrc": "11749:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11749:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11696:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "11696:43:3"
																},
																"nativeSrc": "11696:71:3",
																"nodeType": "YulFunctionCall",
																"src": "11696:71:3"
															},
															"nativeSrc": "11696:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "11696:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11821:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "11821:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11834:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "11834:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11845:2:3",
																				"nodeType": "YulLiteral",
																				"src": "11845:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11830:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11830:3:3"
																		},
																		"nativeSrc": "11830:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11830:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11777:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "11777:43:3"
																},
																"nativeSrc": "11777:72:3",
																"nodeType": "YulFunctionCall",
																"src": "11777:72:3"
															},
															"nativeSrc": "11777:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "11777:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11903:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "11903:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11916:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "11916:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11927:2:3",
																				"nodeType": "YulLiteral",
																				"src": "11927:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11912:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "11912:3:3"
																		},
																		"nativeSrc": "11912:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11912:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11859:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "11859:43:3"
																},
																"nativeSrc": "11859:72:3",
																"nodeType": "YulFunctionCall",
																"src": "11859:72:3"
															},
															"nativeSrc": "11859:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "11859:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11496:442:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11606:9:3",
														"nodeType": "YulTypedName",
														"src": "11606:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11618:6:3",
														"nodeType": "YulTypedName",
														"src": "11618:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11626:6:3",
														"nodeType": "YulTypedName",
														"src": "11626:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11634:6:3",
														"nodeType": "YulTypedName",
														"src": "11634:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11645:4:3",
														"nodeType": "YulTypedName",
														"src": "11645:4:3",
														"type": ""
													}
												],
												"src": "11496:442:3"
											},
											{
												"body": {
													"nativeSrc": "12042:124:3",
													"nodeType": "YulBlock",
													"src": "12042:124:3",
													"statements": [
														{
															"nativeSrc": "12052:26:3",
															"nodeType": "YulAssignment",
															"src": "12052:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12064:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "12064:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12075:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12075:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12060:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12060:3:3"
																},
																"nativeSrc": "12060:18:3",
																"nodeType": "YulFunctionCall",
																"src": "12060:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12052:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "12052:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12132:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "12132:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12145:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12145:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12156:1:3",
																				"nodeType": "YulLiteral",
																				"src": "12156:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12141:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12141:3:3"
																		},
																		"nativeSrc": "12141:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12141:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12088:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "12088:43:3"
																},
																"nativeSrc": "12088:71:3",
																"nodeType": "YulFunctionCall",
																"src": "12088:71:3"
															},
															"nativeSrc": "12088:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "12088:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11944:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12014:9:3",
														"nodeType": "YulTypedName",
														"src": "12014:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12026:6:3",
														"nodeType": "YulTypedName",
														"src": "12026:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12037:4:3",
														"nodeType": "YulTypedName",
														"src": "12037:4:3",
														"type": ""
													}
												],
												"src": "11944:222:3"
											},
											{
												"body": {
													"nativeSrc": "12235:80:3",
													"nodeType": "YulBlock",
													"src": "12235:80:3",
													"statements": [
														{
															"nativeSrc": "12245:22:3",
															"nodeType": "YulAssignment",
															"src": "12245:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12260:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "12260:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12254:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "12254:5:3"
																},
																"nativeSrc": "12254:13:3",
																"nodeType": "YulFunctionCall",
																"src": "12254:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12245:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "12245:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12303:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "12303:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12276:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "12276:26:3"
																},
																"nativeSrc": "12276:33:3",
																"nodeType": "YulFunctionCall",
																"src": "12276:33:3"
															},
															"nativeSrc": "12276:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "12276:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12172:143:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12213:6:3",
														"nodeType": "YulTypedName",
														"src": "12213:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12221:3:3",
														"nodeType": "YulTypedName",
														"src": "12221:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12229:5:3",
														"nodeType": "YulTypedName",
														"src": "12229:5:3",
														"type": ""
													}
												],
												"src": "12172:143:3"
											},
											{
												"body": {
													"nativeSrc": "12398:274:3",
													"nodeType": "YulBlock",
													"src": "12398:274:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "12444:83:3",
																"nodeType": "YulBlock",
																"src": "12444:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12446:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "12446:77:3"
																			},
																			"nativeSrc": "12446:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "12446:79:3"
																		},
																		"nativeSrc": "12446:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "12446:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12419:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "12419:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12428:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12428:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12415:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12415:3:3"
																		},
																		"nativeSrc": "12415:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12415:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12440:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12440:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12411:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12411:3:3"
																},
																"nativeSrc": "12411:32:3",
																"nodeType": "YulFunctionCall",
																"src": "12411:32:3"
															},
															"nativeSrc": "12408:119:3",
															"nodeType": "YulIf",
															"src": "12408:119:3"
														},
														{
															"nativeSrc": "12537:128:3",
															"nodeType": "YulBlock",
															"src": "12537:128:3",
															"statements": [
																{
																	"nativeSrc": "12552:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12552:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12566:1:3",
																		"nodeType": "YulLiteral",
																		"src": "12566:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12556:6:3",
																			"nodeType": "YulTypedName",
																			"src": "12556:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12581:74:3",
																	"nodeType": "YulAssignment",
																	"src": "12581:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12627:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "12627:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12638:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "12638:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12623:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "12623:3:3"
																				},
																				"nativeSrc": "12623:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "12623:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12647:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "12647:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12591:31:3",
																			"nodeType": "YulIdentifier",
																			"src": "12591:31:3"
																		},
																		"nativeSrc": "12591:64:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12591:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12581:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "12581:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12321:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12368:9:3",
														"nodeType": "YulTypedName",
														"src": "12368:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12379:7:3",
														"nodeType": "YulTypedName",
														"src": "12379:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12391:6:3",
														"nodeType": "YulTypedName",
														"src": "12391:6:3",
														"type": ""
													}
												],
												"src": "12321:351:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint16(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have not enough balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your staking time is not complet\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must provide atleast 300 tok\")\n\n        mstore(add(memPtr, 32), \"ens\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188(memPtr) {\n\n        mstore(add(memPtr, 0), \"The provided time is not valid. \")\n\n        mstore(add(memPtr, 32), \"it must be 3, 6 or 12\")\n\n    }\n\n    function abi_encode_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007a575f3560e01c806358fe020c1161004d57806358fe020c146101505780635f5152261461018c578063ab32eb69146101c8578063adca9b72146102045761007a565b8063399080ec1461007e5780633ccfd60b146100ba57806342ea02c1146100d8578063483174b614610114575b5f80fd5b348015610089575f80fd5b506100a4600480360381019061009f9190610c96565b61022e565b6040516100b19190610cd9565b60405180910390f35b6100c2610274565b6040516100cf9190610d62565b60405180910390f35b3480156100e3575f80fd5b506100fe60048036038101906100f99190610de3565b6107a1565b60405161010b9190610d62565b60405180910390f35b34801561011f575f80fd5b5061013a60048036038101906101359190610c96565b610b33565b6040516101479190610cd9565b60405180910390f35b34801561015b575f80fd5b5061017660048036038101906101719190610c96565b610b48565b6040516101839190610cd9565b60405180910390f35b348015610197575f80fd5b506101b260048036038101906101ad9190610c96565b610b5d565b6040516101bf9190610cd9565b60405180910390f35b3480156101d3575f80fd5b506101ee60048036038101906101e99190610c96565b610bfe565b6040516101fb9190610cd9565b60405180910390f35b34801561020f575f80fd5b50610218610c13565b6040516102259190610e7c565b60405180910390f35b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60605f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905061012c8110156102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610edf565b60405180910390fd5b4260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054111561037c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037390610f6d565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426103c69190610fb8565b9050600360045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610438576064601e8361041c9190610feb565b6104269190611059565b826104319190611089565b91506104ff565b600660045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036104a8576064603c8361048c9190610feb565b6104969190611059565b826104a19190611089565b91506104fe565b600c60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036104fd576002826104fa9190610feb565b91505b5b5b426276a7004261050f9190611089565b6105199190610fb8565b811061054a576064601e8361052e9190610feb565b6105389190611059565b826105439190611089565b91506105c7565b426276a7004261055a9190611089565b6105649190610fb8565b8110610595576064603c836105799190610feb565b6105839190611059565b8261058e9190611089565b91506105c6565b426276a700426105a59190611089565b6105af9190610fb8565b81106105c5576002826105c29190610feb565b91505b5b5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016106249291906110cb565b6020604051808303815f875af1158015610640573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106649190611127565b90508061069d576040517f8ecca7d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040518060400160405280600781526020017f5375636365737300000000000000000000000000000000000000000000000000815250935050505090565b6060825f81036107dd576040517f9b677fa000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c841015610822576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610819906111c2565b60405180910390fd5b60038361ffff161480610839575060068361ffff16145b806108485750600c8361ffff16145b610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087e90611250565b60405180910390fd5b5f4290505f60038561ffff16036108b1576276a700905080826108aa9190611089565b915061093d565b60068561ffff16036108d65762ed4e00905080826108cf9190611089565b915061093c565b600c8561ffff16036108fc576301da9c00905080826108f59190611089565b915061093b565b6040518060400160405280601f81526020017f5468652070726f76696465642074696d65206973206e6f742076616c69642e0081525093505050610b2c565b5b5b8560025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109899190611089565b925050819055505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b81526004016109ef9392919061126e565b6020604051808303815f875af1158015610a0b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2f9190611127565b905080610a68576040517feb4c684700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508561ffff1660045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040518060400160405280600b81526020017f7375636365737366756c6c00000000000000000000000000000000000000000081525094505050505b5092915050565b6003602052805f5260405f205f915090505481565b6004602052805f5260405f205f915090505481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610bb891906112a3565b602060405180830381865afa158015610bd3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf791906112d0565b9050919050565b6002602052805f5260405f205f915090505481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c6582610c3c565b9050919050565b610c7581610c5b565b8114610c7f575f80fd5b50565b5f81359050610c9081610c6c565b92915050565b5f60208284031215610cab57610caa610c38565b5b5f610cb884828501610c82565b91505092915050565b5f819050919050565b610cd381610cc1565b82525050565b5f602082019050610cec5f830184610cca565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d3482610cf2565b610d3e8185610cfc565b9350610d4e818560208601610d0c565b610d5781610d1a565b840191505092915050565b5f6020820190508181035f830152610d7a8184610d2a565b905092915050565b610d8b81610cc1565b8114610d95575f80fd5b50565b5f81359050610da681610d82565b92915050565b5f61ffff82169050919050565b610dc281610dac565b8114610dcc575f80fd5b50565b5f81359050610ddd81610db9565b92915050565b5f8060408385031215610df957610df8610c38565b5b5f610e0685828601610d98565b9250506020610e1785828601610dcf565b9150509250929050565b5f819050919050565b5f610e44610e3f610e3a84610c3c565b610e21565b610c3c565b9050919050565b5f610e5582610e2a565b9050919050565b5f610e6682610e4b565b9050919050565b610e7681610e5c565b82525050565b5f602082019050610e8f5f830184610e6d565b92915050565b7f596f752068617665206e6f7420656e6f7567682062616c616e636500000000005f82015250565b5f610ec9601b83610cfc565b9150610ed482610e95565b602082019050919050565b5f6020820190508181035f830152610ef681610ebd565b9050919050565b7f596f7572207374616b696e672074696d65206973206e6f7420636f6d706c65745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f610f57602283610cfc565b9150610f6282610efd565b604082019050919050565b5f6020820190508181035f830152610f8481610f4b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610fc282610cc1565b9150610fcd83610cc1565b9250828203905081811115610fe557610fe4610f8b565b5b92915050565b5f610ff582610cc1565b915061100083610cc1565b925082820261100e81610cc1565b9150828204841483151761102557611024610f8b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61106382610cc1565b915061106e83610cc1565b92508261107e5761107d61102c565b5b828204905092915050565b5f61109382610cc1565b915061109e83610cc1565b92508282019050808211156110b6576110b5610f8b565b5b92915050565b6110c581610c5b565b82525050565b5f6040820190506110de5f8301856110bc565b6110eb6020830184610cca565b9392505050565b5f8115159050919050565b611106816110f2565b8114611110575f80fd5b50565b5f81519050611121816110fd565b92915050565b5f6020828403121561113c5761113b610c38565b5b5f61114984828501611113565b91505092915050565b7f596f75206d7573742070726f766964652061746c656173742033303020746f6b5f8201527f656e730000000000000000000000000000000000000000000000000000000000602082015250565b5f6111ac602383610cfc565b91506111b782611152565b604082019050919050565b5f6020820190508181035f8301526111d9816111a0565b9050919050565b7f5468652070726f76696465642074696d65206973206e6f742076616c69642e205f8201527f6974206d75737420626520332c2036206f722031320000000000000000000000602082015250565b5f61123a603583610cfc565b9150611245826111e0565b604082019050919050565b5f6020820190508181035f8301526112678161122e565b9050919050565b5f6060820190506112815f8301866110bc565b61128e60208301856110bc565b61129b6040830184610cca565b949350505050565b5f6020820190506112b65f8301846110bc565b92915050565b5f815190506112ca81610d82565b92915050565b5f602082840312156112e5576112e4610c38565b5b5f6112f2848285016112bc565b9150509291505056fea26469706673582212200b8a3d54874c33c51bb30fb86221e1d1d8df02ac9a03a0b94ac6a1548921b05364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58FE020C GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x58FE020C EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x5F515226 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xAB32EB69 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x204 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x399080EC EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x42EA02C1 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x483174B6 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x12C DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x373 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x438 JUMPI PUSH1 0x64 PUSH1 0x1E DUP4 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x6 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x4A8 JUMPI PUSH1 0x64 PUSH1 0x3C DUP4 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x4FE JUMP JUMPDEST PUSH1 0xC PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x4FD JUMPI PUSH1 0x2 DUP3 PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST JUMPDEST TIMESTAMP PUSH3 0x76A700 TIMESTAMP PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x519 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST DUP2 LT PUSH2 0x54A JUMPI PUSH1 0x64 PUSH1 0x1E DUP4 PUSH2 0x52E SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C7 JUMP JUMPDEST TIMESTAMP PUSH3 0x76A700 TIMESTAMP PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x564 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST DUP2 LT PUSH2 0x595 JUMPI PUSH1 0x64 PUSH1 0x3C DUP4 PUSH2 0x579 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP3 PUSH2 0x58E SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x5C6 JUMP JUMPDEST TIMESTAMP PUSH3 0x76A700 TIMESTAMP PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST DUP2 LT PUSH2 0x5C5 JUMPI PUSH1 0x2 DUP3 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x624 SWAP3 SWAP2 SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x640 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x664 SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8ECCA7D100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5375636365737300000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH0 DUP2 SUB PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B677FA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP5 LT ISZERO PUSH2 0x822 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP1 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP4 PUSH2 0xFFFF AND EQ DUP1 PUSH2 0x839 JUMPI POP PUSH1 0x6 DUP4 PUSH2 0xFFFF AND EQ JUMPDEST DUP1 PUSH2 0x848 JUMPI POP PUSH1 0xC DUP4 PUSH2 0xFFFF AND EQ JUMPDEST PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87E SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 DUP6 PUSH2 0xFFFF AND SUB PUSH2 0x8B1 JUMPI PUSH3 0x76A700 SWAP1 POP DUP1 DUP3 PUSH2 0x8AA SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x93D JUMP JUMPDEST PUSH1 0x6 DUP6 PUSH2 0xFFFF AND SUB PUSH2 0x8D6 JUMPI PUSH3 0xED4E00 SWAP1 POP DUP1 DUP3 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x93C JUMP JUMPDEST PUSH1 0xC DUP6 PUSH2 0xFFFF AND SUB PUSH2 0x8FC JUMPI PUSH4 0x1DA9C00 SWAP1 POP DUP1 DUP3 PUSH2 0x8F5 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5468652070726F76696465642074696D65206973206E6F742076616C69642E00 DUP2 MSTORE POP SWAP4 POP POP POP PUSH2 0xB2C JUMP JUMPDEST JUMPDEST JUMPDEST DUP6 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x126E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2F SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEB4C684700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH2 0xFFFF AND PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7375636365737366756C6C000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP5 POP POP POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x12A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF7 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC65 DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC75 DUP2 PUSH2 0xC5B JUMP JUMPDEST DUP2 EQ PUSH2 0xC7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC90 DUP2 PUSH2 0xC6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAB JUMPI PUSH2 0xCAA PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCB8 DUP5 DUP3 DUP6 ADD PUSH2 0xC82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD3 DUP2 PUSH2 0xCC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEC PUSH0 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD34 DUP3 PUSH2 0xCF2 JUMP JUMPDEST PUSH2 0xD3E DUP2 DUP6 PUSH2 0xCFC JUMP JUMPDEST SWAP4 POP PUSH2 0xD4E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xD57 DUP2 PUSH2 0xD1A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD7A DUP2 DUP5 PUSH2 0xD2A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD8B DUP2 PUSH2 0xCC1 JUMP JUMPDEST DUP2 EQ PUSH2 0xD95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDA6 DUP2 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC2 DUP2 PUSH2 0xDAC JUMP JUMPDEST DUP2 EQ PUSH2 0xDCC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDDD DUP2 PUSH2 0xDB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF9 JUMPI PUSH2 0xDF8 PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE06 DUP6 DUP3 DUP7 ADD PUSH2 0xD98 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE17 DUP6 DUP3 DUP7 ADD PUSH2 0xDCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE44 PUSH2 0xE3F PUSH2 0xE3A DUP5 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xE21 JUMP JUMPDEST PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE55 DUP3 PUSH2 0xE2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE66 DUP3 PUSH2 0xE4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE8F PUSH0 DUP4 ADD DUP5 PUSH2 0xE6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F7420656E6F7567682062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEC9 PUSH1 0x1B DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xED4 DUP3 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF6 DUP2 PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7572207374616B696E672074696D65206973206E6F7420636F6D706C6574 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF57 PUSH1 0x22 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xF62 DUP3 PUSH2 0xEFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF84 DUP2 PUSH2 0xF4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFC2 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0xFCD DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFE5 JUMPI PUSH2 0xFE4 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFF5 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1000 DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x100E DUP2 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1025 JUMPI PUSH2 0x1024 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1063 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x106E DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x107E JUMPI PUSH2 0x107D PUSH2 0x102C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1093 DUP3 PUSH2 0xCC1 JUMP JUMPDEST SWAP2 POP PUSH2 0x109E DUP4 PUSH2 0xCC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10B6 JUMPI PUSH2 0x10B5 PUSH2 0xF8B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C5 DUP2 PUSH2 0xC5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10DE PUSH0 DUP4 ADD DUP6 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x10EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1106 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1110 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1121 DUP2 PUSH2 0x10FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113C JUMPI PUSH2 0x113B PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1149 DUP5 DUP3 DUP6 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742070726F766964652061746C656173742033303020746F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11AC PUSH1 0x23 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0x11B7 DUP3 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11D9 DUP2 PUSH2 0x11A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468652070726F76696465642074696D65206973206E6F742076616C69642E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6974206D75737420626520332C2036206F722031320000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x123A PUSH1 0x35 DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0x1245 DUP3 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1267 DUP2 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1281 PUSH0 DUP4 ADD DUP7 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x128E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x129B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCCA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x10BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12CA DUP2 PUSH2 0xD82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0xC38 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12F2 DUP5 DUP3 DUP6 ADD PUSH2 0x12BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND DUP11 RETURNDATASIZE SLOAD DUP8 0x4C CALLER 0xC5 SHL 0xB3 0xF 0xB8 PUSH3 0x21E1D1 0xD8 0xDF MUL 0xAC SWAP11 SUB LOG0 0xB9 BLOBBASEFEE 0xC6 LOG1 SLOAD DUP10 0x21 0xB0 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "283:3481:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3520:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:1520;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;766:1222;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;413:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;468:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3635:127;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;361:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3520:109;3577:7;3603:10;:19;3614:7;3603:19;;;;;;;;;;;;;;;;3596:26;;3520:109;;;:::o;1994:1520::-;2040:13;2066:15;2084:10;:22;2095:10;2084:22;;;;;;;;;;;;;;;;2066:40;;2136:3;2125:7;:14;;2117:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2218:15;2189:13;:25;2203:10;2189:25;;;;;;;;;;;;;;;;:44;;2181:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;2283:17;2321:13;:25;2335:10;2321:25;;;;;;;;;;;;;;;;2303:15;:43;;;;:::i;:::-;2283:63;;2432:1;2402:14;:26;2417:10;2402:26;;;;;;;;;;;;;;;;:31;2399:318;;2487:3;2481:2;2471:7;:12;;;;:::i;:::-;2470:20;;;;:::i;:::-;2458:7;:34;;;;:::i;:::-;2448:44;;2399:318;;;2550:1;2520:14;:26;2535:10;2520:26;;;;;;;;;;;;;;;;:31;2517:200;;2605:3;2599:2;2589:7;:12;;;;:::i;:::-;2588:20;;;;:::i;:::-;2576:7;:34;;;;:::i;:::-;2566:44;;2517:200;;;2668:2;2638:14;:26;2653:10;2638:26;;;;;;;;;;;;;;;;:32;2635:82;;2705:1;2695:7;:11;;;;:::i;:::-;2685:21;;2635:82;2517:200;2399:318;2812:15;2797:10;2778:15;:30;;;;:::i;:::-;2777:50;;;;:::i;:::-;2764:9;:63;2761:413;;2881:3;2875:2;2865:7;:12;;;;:::i;:::-;2864:20;;;;:::i;:::-;2852:7;:34;;;;:::i;:::-;2842:44;;2761:413;;;2962:15;2947:10;2928:15;:30;;;;:::i;:::-;2927:50;;;;:::i;:::-;2914:9;:63;2911:263;;3031:3;3025:2;3015:7;:12;;;;:::i;:::-;3014:20;;;;:::i;:::-;3002:7;:34;;;;:::i;:::-;2992:44;;2911:263;;;3112:15;3097:10;3078:15;:30;;;;:::i;:::-;3077:50;;;;:::i;:::-;3064:9;:63;3061:113;;3162:1;3152:7;:11;;;;:::i;:::-;3142:21;;3061:113;2911:263;2761:413;3215:12;3230:14;;;;;;;;;;;:23;;;3254:10;3266:7;3230:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3215:59;;3289:7;3284:72;;3319:26;;;;;;;;;;;;;;3284:72;3399:1;3374:10;:22;3385:10;3374:22;;;;;;;;;;;;;;;:26;;;;3438:1;3410:13;:25;3424:10;3410:25;;;;;;;;;;;;;;;:29;;;;3478:1;3449:14;:26;3464:10;3449:26;;;;;;;;;;;;;;;:30;;;;3491:16;;;;;;;;;;;;;;;;;;;;;;1994:1520;:::o;766:1222::-;854:13;837:6;586:1;576:6;:11;572:77;;610:28;;;;;;;;;;;;;;572:77;898:3:::1;888:6;:13;;880:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;972:1;959:9;:14;;;:32;;;;990:1;977:9;:14;;;959:32;:51;;;;1008:2;995:9;:15;;;959:51;951:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;1079:19;1101:15;1079:37;;1126:17;1178:1;1165:9;:14;;::::0;1162:462:::1;;1207:11;1194:24;;1260:9;1246:11;:23;;;;:::i;:::-;1232:37;;1162:462;;;1310:1;1297:9;:14;;::::0;1294:330:::1;;1339:11;1326:24;;1392:9;1378:11;:23;;;;:::i;:::-;1364:37;;1294:330;;;1442:2;1429:9;:15;;::::0;1426:198:::1;;1472:12;1459:25;;1526:9;1512:11;:23;;;;:::i;:::-;1498:37;;1426:198;;;1573:40;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1426:198;1294:330;1162:462;1660:6;1634:10;:22;1645:10;1634:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;1676:12;1691:14;;;;;;;;;;;:27;;;1719:10;1739:4;1746:6;1691:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1676:77;;1768:7;1763:71;;1798:25;;;;;;;;;;;;;;1763:71;1881:11;1852:13;:26;1867:10;1852:26;;;;;;;;;;;;;;;:40;;;;1933:9;1903:39;;:14;:27;1919:10;1903:27;;;;;;;;;;;;;;;:39;;;;1952:20;;;;;;;;;;;;;;;;::::0;::::1;;;;;658:1;766:1222:::0;;;;;:::o;413:48::-;;;;;;;;;;;;;;;;;:::o;468:49::-;;;;;;;;;;;;;;;;;:::o;3635:127::-;3696:7;3722:14;;;;;;;;;;;:24;;;3747:7;3722:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3715:40;;3635:127;;;:::o;361:45::-;;;;;;;;;;;;;;;;;:::o;325:28::-;;;;;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:99::-;1663:6;1697:5;1691:12;1681:22;;1611:99;;;:::o;1716:169::-;1800:11;1834:6;1829:3;1822:19;1874:4;1869:3;1865:14;1850:29;;1716:169;;;;:::o;1891:139::-;1980:6;1975:3;1970;1964:23;2021:1;2012:6;2007:3;2003:16;1996:27;1891:139;;;:::o;2036:102::-;2077:6;2128:2;2124:7;2119:2;2112:5;2108:14;2104:28;2094:38;;2036:102;;;:::o;2144:377::-;2232:3;2260:39;2293:5;2260:39;:::i;:::-;2315:71;2379:6;2374:3;2315:71;:::i;:::-;2308:78;;2395:65;2453:6;2448:3;2441:4;2434:5;2430:16;2395:65;:::i;:::-;2485:29;2507:6;2485:29;:::i;:::-;2480:3;2476:39;2469:46;;2236:285;2144:377;;;;:::o;2527:313::-;2640:4;2678:2;2667:9;2663:18;2655:26;;2727:9;2721:4;2717:20;2713:1;2702:9;2698:17;2691:47;2755:78;2828:4;2819:6;2755:78;:::i;:::-;2747:86;;2527:313;;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:89::-;3155:7;3195:6;3188:5;3184:18;3173:29;;3119:89;;;:::o;3214:120::-;3286:23;3303:5;3286:23;:::i;:::-;3279:5;3276:34;3266:62;;3324:1;3321;3314:12;3266:62;3214:120;:::o;3340:137::-;3385:5;3423:6;3410:20;3401:29;;3439:32;3465:5;3439:32;:::i;:::-;3340:137;;;;:::o;3483:472::-;3550:6;3558;3607:2;3595:9;3586:7;3582:23;3578:32;3575:119;;;3613:79;;:::i;:::-;3575:119;3733:1;3758:53;3803:7;3794:6;3783:9;3779:22;3758:53;:::i;:::-;3748:63;;3704:117;3860:2;3886:52;3930:7;3921:6;3910:9;3906:22;3886:52;:::i;:::-;3876:62;;3831:117;3483:472;;;;;:::o;3961:60::-;3989:3;4010:5;4003:12;;3961:60;;;:::o;4027:142::-;4077:9;4110:53;4128:34;4137:24;4155:5;4137:24;:::i;:::-;4128:34;:::i;:::-;4110:53;:::i;:::-;4097:66;;4027:142;;;:::o;4175:126::-;4225:9;4258:37;4289:5;4258:37;:::i;:::-;4245:50;;4175:126;;;:::o;4307:140::-;4371:9;4404:37;4435:5;4404:37;:::i;:::-;4391:50;;4307:140;;;:::o;4453:159::-;4554:51;4599:5;4554:51;:::i;:::-;4549:3;4542:64;4453:159;;:::o;4618:250::-;4725:4;4763:2;4752:9;4748:18;4740:26;;4776:85;4858:1;4847:9;4843:17;4834:6;4776:85;:::i;:::-;4618:250;;;;:::o;4874:177::-;5014:29;5010:1;5002:6;4998:14;4991:53;4874:177;:::o;5057:366::-;5199:3;5220:67;5284:2;5279:3;5220:67;:::i;:::-;5213:74;;5296:93;5385:3;5296:93;:::i;:::-;5414:2;5409:3;5405:12;5398:19;;5057:366;;;:::o;5429:419::-;5595:4;5633:2;5622:9;5618:18;5610:26;;5682:9;5676:4;5672:20;5668:1;5657:9;5653:17;5646:47;5710:131;5836:4;5710:131;:::i;:::-;5702:139;;5429:419;;;:::o;5854:221::-;5994:34;5990:1;5982:6;5978:14;5971:58;6063:4;6058:2;6050:6;6046:15;6039:29;5854:221;:::o;6081:366::-;6223:3;6244:67;6308:2;6303:3;6244:67;:::i;:::-;6237:74;;6320:93;6409:3;6320:93;:::i;:::-;6438:2;6433:3;6429:12;6422:19;;6081:366;;;:::o;6453:419::-;6619:4;6657:2;6646:9;6642:18;6634:26;;6706:9;6700:4;6696:20;6692:1;6681:9;6677:17;6670:47;6734:131;6860:4;6734:131;:::i;:::-;6726:139;;6453:419;;;:::o;6878:180::-;6926:77;6923:1;6916:88;7023:4;7020:1;7013:15;7047:4;7044:1;7037:15;7064:194;7104:4;7124:20;7142:1;7124:20;:::i;:::-;7119:25;;7158:20;7176:1;7158:20;:::i;:::-;7153:25;;7202:1;7199;7195:9;7187:17;;7226:1;7220:4;7217:11;7214:37;;;7231:18;;:::i;:::-;7214:37;7064:194;;;;:::o;7264:410::-;7304:7;7327:20;7345:1;7327:20;:::i;:::-;7322:25;;7361:20;7379:1;7361:20;:::i;:::-;7356:25;;7416:1;7413;7409:9;7438:30;7456:11;7438:30;:::i;:::-;7427:41;;7617:1;7608:7;7604:15;7601:1;7598:22;7578:1;7571:9;7551:83;7528:139;;7647:18;;:::i;:::-;7528:139;7312:362;7264:410;;;;:::o;7680:180::-;7728:77;7725:1;7718:88;7825:4;7822:1;7815:15;7849:4;7846:1;7839:15;7866:185;7906:1;7923:20;7941:1;7923:20;:::i;:::-;7918:25;;7957:20;7975:1;7957:20;:::i;:::-;7952:25;;7996:1;7986:35;;8001:18;;:::i;:::-;7986:35;8043:1;8040;8036:9;8031:14;;7866:185;;;;:::o;8057:191::-;8097:3;8116:20;8134:1;8116:20;:::i;:::-;8111:25;;8150:20;8168:1;8150:20;:::i;:::-;8145:25;;8193:1;8190;8186:9;8179:16;;8214:3;8211:1;8208:10;8205:36;;;8221:18;;:::i;:::-;8205:36;8057:191;;;;:::o;8254:118::-;8341:24;8359:5;8341:24;:::i;:::-;8336:3;8329:37;8254:118;;:::o;8378:332::-;8499:4;8537:2;8526:9;8522:18;8514:26;;8550:71;8618:1;8607:9;8603:17;8594:6;8550:71;:::i;:::-;8631:72;8699:2;8688:9;8684:18;8675:6;8631:72;:::i;:::-;8378:332;;;;;:::o;8716:90::-;8750:7;8793:5;8786:13;8779:21;8768:32;;8716:90;;;:::o;8812:116::-;8882:21;8897:5;8882:21;:::i;:::-;8875:5;8872:32;8862:60;;8918:1;8915;8908:12;8862:60;8812:116;:::o;8934:137::-;8988:5;9019:6;9013:13;9004:22;;9035:30;9059:5;9035:30;:::i;:::-;8934:137;;;;:::o;9077:345::-;9144:6;9193:2;9181:9;9172:7;9168:23;9164:32;9161:119;;;9199:79;;:::i;:::-;9161:119;9319:1;9344:61;9397:7;9388:6;9377:9;9373:22;9344:61;:::i;:::-;9334:71;;9290:125;9077:345;;;;:::o;9428:222::-;9568:34;9564:1;9556:6;9552:14;9545:58;9637:5;9632:2;9624:6;9620:15;9613:30;9428:222;:::o;9656:366::-;9798:3;9819:67;9883:2;9878:3;9819:67;:::i;:::-;9812:74;;9895:93;9984:3;9895:93;:::i;:::-;10013:2;10008:3;10004:12;9997:19;;9656:366;;;:::o;10028:419::-;10194:4;10232:2;10221:9;10217:18;10209:26;;10281:9;10275:4;10271:20;10267:1;10256:9;10252:17;10245:47;10309:131;10435:4;10309:131;:::i;:::-;10301:139;;10028:419;;;:::o;10453:240::-;10593:34;10589:1;10581:6;10577:14;10570:58;10662:23;10657:2;10649:6;10645:15;10638:48;10453:240;:::o;10699:366::-;10841:3;10862:67;10926:2;10921:3;10862:67;:::i;:::-;10855:74;;10938:93;11027:3;10938:93;:::i;:::-;11056:2;11051:3;11047:12;11040:19;;10699:366;;;:::o;11071:419::-;11237:4;11275:2;11264:9;11260:18;11252:26;;11324:9;11318:4;11314:20;11310:1;11299:9;11295:17;11288:47;11352:131;11478:4;11352:131;:::i;:::-;11344:139;;11071:419;;;:::o;11496:442::-;11645:4;11683:2;11672:9;11668:18;11660:26;;11696:71;11764:1;11753:9;11749:17;11740:6;11696:71;:::i;:::-;11777:72;11845:2;11834:9;11830:18;11821:6;11777:72;:::i;:::-;11859;11927:2;11916:9;11912:18;11903:6;11859:72;:::i;:::-;11496:442;;;;;;:::o;11944:222::-;12037:4;12075:2;12064:9;12060:18;12052:26;;12088:71;12156:1;12145:9;12141:17;12132:6;12088:71;:::i;:::-;11944:222;;;;:::o;12172:143::-;12229:5;12260:6;12254:13;12245:22;;12276:33;12303:5;12276:33;:::i;:::-;12172:143;;;;:::o;12321:351::-;12391:6;12440:2;12428:9;12419:7;12415:23;12411:32;12408:119;;;12446:79;;:::i;:::-;12408:119;12566:1;12591:64;12647:7;12638:6;12627:9;12623:22;12591:64;:::i;:::-;12581:74;;12537:128;12321:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "982600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"checkBalance(address)": "infinite",
								"getStaked(address)": "2830",
								"s_balances(address)": "2846",
								"s_minStackTime(address)": "2802",
								"s_stakingToken()": "infinite",
								"s_unstackTime(address)": "2869",
								"stake(uint256,uint16)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 283,
									"end": 3764,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 672,
									"end": 760,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 672,
									"end": 760,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 760,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 672,
									"end": 760,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 672,
									"end": 760,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 672,
									"end": 760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 672,
									"end": 760,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 740,
									"end": 752,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 730,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 716,
									"end": 730,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 753,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 716,
									"end": 753,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 716,
									"end": 753,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 716,
									"end": 753,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 753,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 672,
									"end": 760,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 3764,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b8a3d54874c33c51bb30fb86221e1d1d8df02ac9a03a0b94ac6a1548921b05364736f6c634300081a0033",
									".code": [
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "58FE020C"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "58FE020C"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "5F515226"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "AB32EB69"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "ADCA9B72"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "399080EC"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "3CCFD60B"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "42EA02C1"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "483174B6"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 283,
											"end": 3764,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3520,
											"end": 3629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3520,
											"end": 3629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3520,
											"end": 3629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1994,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1994,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 766,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 766,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 766,
											"end": 1988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 413,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 413,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 468,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 468,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 468,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3635,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3635,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3635,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 361,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 361,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 361,
											"end": 406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 325,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 325,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3613,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3621,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3622,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3520,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2053,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2106,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 2125,
											"end": 2132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2139,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2139,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2117,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2117,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2202,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2213,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2214,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2233,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2233,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2181,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2181,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2345,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2346,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2303,
											"end": 2346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2303,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2346,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2303,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2346,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2402,
											"end": 2416,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2428,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2433,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2490,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 2471,
											"end": 2478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2471,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2471,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2470,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2470,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2465,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2458,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2458,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2545,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2546,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2551,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2608,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2599,
											"end": 2601,
											"name": "PUSH",
											"source": 2,
											"value": "3C"
										},
										{
											"begin": 2589,
											"end": 2596,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2589,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2589,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2588,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2588,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2576,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2576,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2663,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2670,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2635,
											"end": 2717,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2695,
											"end": 2702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2695,
											"end": 2706,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2695,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2695,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2695,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2717,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2635,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2517,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2399,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2812,
											"end": 2827,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2807,
											"name": "PUSH",
											"source": 2,
											"value": "76A700"
										},
										{
											"begin": 2778,
											"end": 2793,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2778,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2778,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2777,
											"end": 2827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2777,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2827,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2777,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2764,
											"end": 2827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2875,
											"end": 2877,
											"name": "PUSH",
											"source": 2,
											"value": "1E"
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2865,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2865,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2864,
											"end": 2884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2864,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2884,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2864,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2852,
											"end": 2886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2886,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2852,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2886,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2852,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2886,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 2977,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2957,
											"name": "PUSH",
											"source": 2,
											"value": "76A700"
										},
										{
											"begin": 2928,
											"end": 2943,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2928,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2928,
											"end": 2958,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2928,
											"end": 2958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2928,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2928,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2928,
											"end": 2958,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2928,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2927,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2977,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3031,
											"end": 3034,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 2,
											"value": "3C"
										},
										{
											"begin": 3015,
											"end": 3022,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3015,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3014,
											"end": 3034,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3014,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3034,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3014,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3002,
											"end": 3036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3002,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3036,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3002,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2992,
											"end": 3036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3127,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3097,
											"end": 3107,
											"name": "PUSH",
											"source": 2,
											"value": "76A700"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3078,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3077,
											"end": 3127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3077,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3127,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3077,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3064,
											"end": 3127,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3061,
											"end": 3174,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3162,
											"end": 3163,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3152,
											"end": 3159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3152,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3142,
											"end": 3163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3142,
											"end": 3163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3061,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2911,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2761,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3227,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3230,
											"end": 3253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3253,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 3254,
											"end": 3264,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3230,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3230,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3230,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "PUSH",
											"source": 2,
											"value": "8ECCA7D100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3384,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3400,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3400,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3374,
											"end": 3400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3434,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3435,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3463,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3474,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3475,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3479,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3449,
											"end": 3479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "5375636365737300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3491,
											"end": 3507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1994,
											"end": 3514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 854,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 837,
											"end": 843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 586,
											"end": 587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 576,
											"end": 587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 572,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 572,
											"end": 649,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "PUSH",
											"source": 2,
											"value": "9B677FA000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 610,
											"end": 638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 610,
											"end": 638,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 572,
											"end": 649,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 572,
											"end": 649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 888,
											"end": 894,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 888,
											"end": 901,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 888,
											"end": 901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 880,
											"end": 941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 880,
											"end": 941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 972,
											"end": 973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 959,
											"end": 968,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 959,
											"end": 973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 959,
											"end": 973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 959,
											"end": 973,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 959,
											"end": 991,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 959,
											"end": 991,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 959,
											"end": 991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 990,
											"end": 991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 977,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 977,
											"end": 991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 977,
											"end": 991,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 977,
											"end": 991,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 959,
											"end": 991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 959,
											"end": 991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1010,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 959,
											"end": 1010,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1010,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 995,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 995,
											"end": 1010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1010,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1010,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 959,
											"end": 1010,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 951,
											"end": 1068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 951,
											"end": 1068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1116,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1079,
											"end": 1116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1126,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1165,
											"end": 1174,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 1165,
											"end": 1179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1179,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "76A700"
										},
										{
											"begin": 1194,
											"end": 1218,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1218,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1269,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1257,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1246,
											"end": 1269,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1269,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1246,
											"end": 1269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1246,
											"end": 1269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1269,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1269,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1297,
											"end": 1306,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 1297,
											"end": 1311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "ED4E00"
										},
										{
											"begin": 1326,
											"end": 1350,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1401,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1389,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1378,
											"end": 1401,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1401,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1401,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1378,
											"end": 1401,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1401,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 1378,
											"end": 1401,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1401,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1401,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1429,
											"end": 1438,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 1429,
											"end": 1444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1429,
											"end": 1444,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1DA9C00"
										},
										{
											"begin": 1459,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1523,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1512,
											"end": 1535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1512,
											"end": 1535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1535,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5468652070726F76696465642074696D65206973206E6F742076616C69642E00"
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1573,
											"end": 1613,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1426,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1294,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1162,
											"end": 1624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1666,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1655,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1634,
											"end": 1666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1691,
											"end": 1705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1719,
											"end": 1729,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1743,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1752,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1691,
											"end": 1753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1691,
											"end": 1753,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1691,
											"end": 1753,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1676,
											"end": 1753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1763,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "EB4C684700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1823,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1763,
											"end": 1834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1877,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1878,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 1892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1942,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFF"
										},
										{
											"begin": 1903,
											"end": 1942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1929,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1930,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1942,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1903,
											"end": 1942,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7375636365737366756C6C000000000000000000000000000000000000000000"
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1972,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 658,
											"end": 659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 658,
											"end": 659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 766,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 413,
											"end": 461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 468,
											"end": 517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3696,
											"end": 3703,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3746,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3722,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3722,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3722,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3755,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3715,
											"end": 3755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3635,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 361,
											"end": 406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 325,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1702,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1822,
											"end": 1841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1872,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 1986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "MCOPY",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1996,
											"end": 2023,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1891,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2112,
											"end": 2117,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 2132,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2260,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2377,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2315,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2386,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2451,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2441,
											"end": 2445,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2439,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2395,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2485,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2483,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2236,
											"end": 2521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2737,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2698,
											"end": 2715,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2828,
											"end": 2832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2819,
											"end": 2825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2755,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2527,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2944,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3074,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2974,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3208,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3119,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 3188,
											"end": 3193,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3202,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3202,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3202,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3334,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3214,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3286,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3309,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3286,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3310,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3326,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3266,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3334,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3214,
											"end": 3334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3477,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3340,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3410,
											"end": 3430,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3465,
											"end": 3470,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3439,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3471,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3439,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3477,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3477,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3955,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3483,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3607,
											"end": 3609,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3582,
											"end": 3605,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3578,
											"end": 3610,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3694,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3575,
											"end": 3694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3613,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3613,
											"end": 3692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3613,
											"end": 3692,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3613,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3575,
											"end": 3694,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3575,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3779,
											"end": 3801,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3758,
											"end": 3811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3811,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3758,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3704,
											"end": 3821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3886,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3886,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3886,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 3938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 3938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3483,
											"end": 3955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4021,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3961,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 4021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4169,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4027,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4137,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4155,
											"end": 4160,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4137,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4137,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4137,
											"end": 4161,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4137,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4128,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4128,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4110,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 4110,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4097,
											"end": 4163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4169,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4169,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4169,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4301,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4175,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4289,
											"end": 4294,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4258,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4245,
											"end": 4295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4301,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4175,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4307,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4435,
											"end": 4440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 4404,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4441,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4404,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4391,
											"end": 4441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4307,
											"end": 4447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4612,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4453,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4599,
											"end": 4604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4554,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4605,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 4554,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4606,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4453,
											"end": 4612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4868,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4618,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4765,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4752,
											"end": 4761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4748,
											"end": 4766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4858,
											"end": 4859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4843,
											"end": 4860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4840,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4776,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4861,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 4776,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4868,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4868,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5014,
											"end": 5043,
											"name": "PUSH",
											"source": 3,
											"value": "596F752068617665206E6F7420656E6F7567682062616C616E63650000000000"
										},
										{
											"begin": 5010,
											"end": 5011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5008,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5012,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 5051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5423,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5057,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5284,
											"end": 5286,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 5279,
											"end": 5282,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5220,
											"end": 5287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5287,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 5220,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5287,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5287,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5296,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5385,
											"end": 5388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5296,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5296,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5296,
											"end": 5389,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 5296,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5409,
											"end": 5412,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5405,
											"end": 5417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5398,
											"end": 5417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5398,
											"end": 5417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5423,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5423,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5848,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5429,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5618,
											"end": 5636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5682,
											"end": 5691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5680,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5672,
											"end": 5692,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5653,
											"end": 5670,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5646,
											"end": 5693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5836,
											"end": 5840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5710,
											"end": 5841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5841,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5710,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5702,
											"end": 5841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 6075,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5854,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6028,
											"name": "PUSH",
											"source": 3,
											"value": "596F7572207374616B696E672074696D65206973206E6F7420636F6D706C6574"
										},
										{
											"begin": 5990,
											"end": 5991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5978,
											"end": 5992,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5971,
											"end": 6029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6063,
											"end": 6067,
											"name": "PUSH",
											"source": 3,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6058,
											"end": 6060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6046,
											"end": 6061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6039,
											"end": 6068,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 6075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 6075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6447,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6081,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6308,
											"end": 6310,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6303,
											"end": 6306,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 6244,
											"end": 6311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6244,
											"end": 6311,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6244,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6237,
											"end": 6311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6409,
											"end": 6412,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 6320,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6320,
											"end": 6413,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6320,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6438,
											"end": 6440,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6429,
											"end": 6441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6422,
											"end": 6441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6872,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6453,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6619,
											"end": 6623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6696,
											"end": 6716,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6670,
											"end": 6717,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6734,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6865,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6734,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6865,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6726,
											"end": 6865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6453,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6878,
											"end": 7058,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6878,
											"end": 7058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 7003,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 7004,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7027,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7013,
											"end": 7028,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7047,
											"end": 7051,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7044,
											"end": 7045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7052,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7258,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 7064,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7124,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 7124,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7144,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7119,
											"end": 7144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 7176,
											"end": 7177,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7158,
											"end": 7178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7178,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 7158,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7153,
											"end": 7178,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7153,
											"end": 7178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7199,
											"end": 7200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7195,
											"end": 7204,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7187,
											"end": 7204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7187,
											"end": 7204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7226,
											"end": 7227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 7224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7217,
											"end": 7228,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7231,
											"end": 7249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 7231,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 7214,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7258,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7258,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7674,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7264,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7327,
											"end": 7347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7347,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 7327,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7322,
											"end": 7347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7322,
											"end": 7347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 7379,
											"end": 7380,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7361,
											"end": 7381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7381,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 7361,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7381,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7356,
											"end": 7381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7416,
											"end": 7417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7409,
											"end": 7418,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 7456,
											"end": 7467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7438,
											"end": 7468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7617,
											"end": 7618,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7608,
											"end": 7615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7604,
											"end": 7619,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7598,
											"end": 7620,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7578,
											"end": 7579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7551,
											"end": 7634,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7528,
											"end": 7667,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7647,
											"end": 7665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 7647,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7667,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 7528,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7312,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7674,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7674,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7860,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 7680,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7728,
											"end": 7805,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7725,
											"end": 7726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7806,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7846,
											"end": 7847,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7854,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 8051,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 7866,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7906,
											"end": 7907,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7923,
											"end": 7943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7923,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7943,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 7975,
											"end": 7976,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 7957,
											"end": 7977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 7957,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7952,
											"end": 7977,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7952,
											"end": 7977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7996,
											"end": 7997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7986,
											"end": 8021,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8001,
											"end": 8019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 8001,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 8021,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7986,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8043,
											"end": 8044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8040,
											"end": 8041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8045,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 8051,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 8051,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 8051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 8051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7866,
											"end": 8051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8248,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 8057,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8116,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8134,
											"end": 8135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 8116,
											"end": 8136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8136,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 8116,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8111,
											"end": 8136,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8111,
											"end": 8136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8168,
											"end": 8169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 8150,
											"end": 8170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8145,
											"end": 8170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8145,
											"end": 8170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8190,
											"end": 8191,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8186,
											"end": 8195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8179,
											"end": 8195,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8179,
											"end": 8195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8211,
											"end": 8212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8205,
											"end": 8241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8205,
											"end": 8241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 8205,
											"end": 8241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8221,
											"end": 8239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8221,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8205,
											"end": 8241,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 8205,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8248,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8248,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8057,
											"end": 8248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8372,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8254,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8341,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8359,
											"end": 8364,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8341,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 8341,
											"end": 8365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8341,
											"end": 8365,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8341,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8336,
											"end": 8339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8329,
											"end": 8366,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8710,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 8378,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8499,
											"end": 8503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8537,
											"end": 8539,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8526,
											"end": 8535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8514,
											"end": 8540,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8514,
											"end": 8540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8550,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8618,
											"end": 8619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8616,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8603,
											"end": 8620,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8550,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8550,
											"end": 8621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8550,
											"end": 8621,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8550,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8631,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8699,
											"end": 8701,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8688,
											"end": 8697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8684,
											"end": 8702,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8681,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8631,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 8631,
											"end": 8703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8631,
											"end": 8703,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8631,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8710,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8710,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8378,
											"end": 8710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8806,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8716,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8750,
											"end": 8757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8786,
											"end": 8799,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8779,
											"end": 8800,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8768,
											"end": 8800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8768,
											"end": 8800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8806,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8806,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8716,
											"end": 8806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8928,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 8812,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8897,
											"end": 8902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8882,
											"end": 8903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 8882,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8875,
											"end": 8880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8872,
											"end": 8904,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8862,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8862,
											"end": 8922,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8918,
											"end": 8919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8908,
											"end": 8920,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8862,
											"end": 8922,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 8862,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8812,
											"end": 8928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8934,
											"end": 9071,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8934,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8988,
											"end": 8993,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9019,
											"end": 9025,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9026,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9004,
											"end": 9026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9059,
											"end": 9064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 9035,
											"end": 9065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8934,
											"end": 9071,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8934,
											"end": 9071,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8934,
											"end": 9071,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8934,
											"end": 9071,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8934,
											"end": 9071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9422,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 9077,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9144,
											"end": 9150,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9181,
											"end": 9190,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9172,
											"end": 9179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9168,
											"end": 9191,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9196,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9280,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 9161,
											"end": 9280,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9199,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9199,
											"end": 9278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 9199,
											"end": 9278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9199,
											"end": 9278,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9199,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9280,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 9161,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9344,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9397,
											"end": 9404,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9388,
											"end": 9394,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9377,
											"end": 9386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9373,
											"end": 9395,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9344,
											"end": 9405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 9344,
											"end": 9405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9344,
											"end": 9405,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9344,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9334,
											"end": 9405,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9334,
											"end": 9405,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9290,
											"end": 9415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9428,
											"end": 9650,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 9428,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9568,
											"end": 9602,
											"name": "PUSH",
											"source": 3,
											"value": "596F75206D7573742070726F766964652061746C656173742033303020746F6B"
										},
										{
											"begin": 9564,
											"end": 9565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9552,
											"end": 9566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9545,
											"end": 9603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9637,
											"end": 9642,
											"name": "PUSH",
											"source": 3,
											"value": "656E730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9632,
											"end": 9634,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9624,
											"end": 9630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9613,
											"end": 9643,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9428,
											"end": 9650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9428,
											"end": 9650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 10022,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 9656,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9798,
											"end": 9801,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9883,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 9878,
											"end": 9881,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9819,
											"end": 9886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 9819,
											"end": 9886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9819,
											"end": 9886,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 9819,
											"end": 9886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9812,
											"end": 9886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9984,
											"end": 9987,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 9895,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 9895,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10013,
											"end": 10015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10008,
											"end": 10011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 10022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 10022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 10022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10447,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 10028,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10194,
											"end": 10198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10232,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10221,
											"end": 10230,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10217,
											"end": 10235,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10209,
											"end": 10235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10209,
											"end": 10235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10281,
											"end": 10290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10279,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10271,
											"end": 10291,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10267,
											"end": 10268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10265,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10252,
											"end": 10269,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10245,
											"end": 10292,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10309,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10435,
											"end": 10439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10309,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10309,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10309,
											"end": 10440,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10309,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10301,
											"end": 10440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10301,
											"end": 10440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10453,
											"end": 10693,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10453,
											"end": 10693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10593,
											"end": 10627,
											"name": "PUSH",
											"source": 3,
											"value": "5468652070726F76696465642074696D65206973206E6F742076616C69642E20"
										},
										{
											"begin": 10589,
											"end": 10590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10581,
											"end": 10587,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10577,
											"end": 10591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10570,
											"end": 10628,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10662,
											"end": 10685,
											"name": "PUSH",
											"source": 3,
											"value": "6974206D75737420626520332C2036206F722031320000000000000000000000"
										},
										{
											"begin": 10657,
											"end": 10659,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10655,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10645,
											"end": 10660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10638,
											"end": 10686,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10453,
											"end": 10693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10453,
											"end": 10693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10841,
											"end": 10844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 10926,
											"end": 10928,
											"name": "PUSH",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 10921,
											"end": 10924,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 10862,
											"end": 10929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10929,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 11027,
											"end": 11030,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10938,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11056,
											"end": 11058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11051,
											"end": 11054,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11047,
											"end": 11059,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11040,
											"end": 11059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11040,
											"end": 11059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10699,
											"end": 11065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11277,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11264,
											"end": 11273,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11260,
											"end": 11278,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11252,
											"end": 11278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11252,
											"end": 11278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11324,
											"end": 11333,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11318,
											"end": 11322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11314,
											"end": 11334,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11310,
											"end": 11311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11308,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11295,
											"end": 11312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11288,
											"end": 11335,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 11478,
											"end": 11482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 11352,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11344,
											"end": 11483,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11344,
											"end": 11483,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11071,
											"end": 11490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11645,
											"end": 11649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11685,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 11672,
											"end": 11681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11668,
											"end": 11686,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11660,
											"end": 11686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11696,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 11764,
											"end": 11765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11753,
											"end": 11762,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11749,
											"end": 11766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11740,
											"end": 11746,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11696,
											"end": 11767,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 11696,
											"end": 11767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11696,
											"end": 11767,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 11696,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11777,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 11845,
											"end": 11847,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11830,
											"end": 11848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11821,
											"end": 11827,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11777,
											"end": 11849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 11777,
											"end": 11849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11777,
											"end": 11849,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 11777,
											"end": 11849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11859,
											"end": 11931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 11927,
											"end": 11929,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11916,
											"end": 11925,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11912,
											"end": 11930,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11903,
											"end": 11909,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11859,
											"end": 11931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 11859,
											"end": 11931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11859,
											"end": 11931,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 11859,
											"end": 11931,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11496,
											"end": 11938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 12166,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 11944,
											"end": 12166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12037,
											"end": 12041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12077,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12064,
											"end": 12073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12060,
											"end": 12078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12052,
											"end": 12078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12052,
											"end": 12078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12088,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 12156,
											"end": 12157,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12145,
											"end": 12154,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12141,
											"end": 12158,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12132,
											"end": 12138,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12088,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 12088,
											"end": 12159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12088,
											"end": 12159,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 12088,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 12166,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 12166,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 12166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 12166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11944,
											"end": 12166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12172,
											"end": 12315,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 12172,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12229,
											"end": 12234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12266,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12254,
											"end": 12267,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12245,
											"end": 12267,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12245,
											"end": 12267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12276,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 12303,
											"end": 12308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12276,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 12276,
											"end": 12309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12276,
											"end": 12309,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 12276,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12172,
											"end": 12315,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12172,
											"end": 12315,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12172,
											"end": 12315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12172,
											"end": 12315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12172,
											"end": 12315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12672,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 12321,
											"end": 12672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12419,
											"end": 12426,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12415,
											"end": 12438,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12411,
											"end": 12443,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 12408,
											"end": 12527,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12408,
											"end": 12527,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 12408,
											"end": 12527,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12446,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 12446,
											"end": 12525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 12446,
											"end": 12525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12446,
											"end": 12525,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 12446,
											"end": 12525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12408,
											"end": 12527,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 12408,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12566,
											"end": 12567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 12647,
											"end": 12654,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12638,
											"end": 12644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12627,
											"end": 12636,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12623,
											"end": 12645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12591,
											"end": 12655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 12591,
											"end": 12655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12591,
											"end": 12655,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 12591,
											"end": 12655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12581,
											"end": 12655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12581,
											"end": 12655,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12537,
											"end": 12665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12672,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12321,
											"end": 12672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"stacking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkBalance(address)": "5f515226",
							"getStaked(address)": "399080ec",
							"s_balances(address)": "ab32eb69",
							"s_minStackTime(address)": "58fe020c",
							"s_stakingToken()": "adca9b72",
							"s_unstackTime(address)": "483174b6",
							"stake(uint256,uint16)": "42ea02c1",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Staking__NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Staking__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Withdraw__TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_minStackTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_unstackTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"stakeTime\",\"type\":\"uint16\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stacking.sol\":\"Staking\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"stacking.sol\":{\"keccak256\":\"0x75fb022bd08c610b8dc97be42daf12428eabcc9fc333e739310a3707d35f762a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77169acf3e3728e587ade681ebc34e9b4854cdeba334fa23057de46950136a15\",\"dweb:/ipfs/QmcKTYhSj9dvzFryX27my6RK5i7YeC2crwaAnG3fYN91YX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "stacking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 157,
								"contract": "stacking.sol:Staking",
								"label": "s_stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 161,
								"contract": "stacking.sol:Staking",
								"label": "s_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "stacking.sol:Staking",
								"label": "s_unstackTime",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 169,
								"contract": "stacking.sol:Staking",
								"label": "s_minStackTime",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 142,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 142,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 142,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 142,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 142,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"stacking.sol": {
				"ast": {
					"absolutePath": "stacking.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						],
						"ReentrancyGuard": [
							64
						],
						"Staking": [
							570
						],
						"Staking__NeedsMoreThanZero": [
							152
						],
						"Staking__TransferFailed": [
							148
						],
						"Withdraw__TransferFailed": [
							150
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 143,
							"src": "58:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 65,
							"src": "115:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "eb4c6847",
							"id": 148,
							"name": "Staking__TransferFailed",
							"nameLocation": "185:23:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 147,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "208:2:2"
							},
							"src": "179:32:2"
						},
						{
							"errorSelector": "8ecca7d1",
							"id": 150,
							"name": "Withdraw__TransferFailed",
							"nameLocation": "218:24:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 149,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "242:2:2"
							},
							"src": "212:33:2"
						},
						{
							"errorSelector": "9b677fa0",
							"id": 152,
							"name": "Staking__NeedsMoreThanZero",
							"nameLocation": "252:26:2",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 151,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "278:2:2"
							},
							"src": "246:35:2"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"303:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "303:15:2"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "303:15:2"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570,
								64
							],
							"name": "Staking",
							"nameLocation": "292:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "adca9b72",
									"id": 157,
									"mutability": "mutable",
									"name": "s_stakingToken",
									"nameLocation": "339:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "325:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 156,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 155,
											"name": "IERC20",
											"nameLocations": [
												"325:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "325:6:2"
										},
										"referencedDeclaration": 142,
										"src": "325:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab32eb69",
									"id": 161,
									"mutability": "mutable",
									"name": "s_balances",
									"nameLocation": "396:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "361:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 160,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "369:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "361:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "380:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "483174b6",
									"id": 165,
									"mutability": "mutable",
									"name": "s_unstackTime",
									"nameLocation": "448:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "413:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "421:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "413:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "432:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58fe020c",
									"id": 169,
									"mutability": "mutable",
									"name": "s_minStackTime",
									"nameLocation": "503:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "468:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 168,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "476:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "468:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "487:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "562:104:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 173,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "576:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "586:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "576:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 180,
												"nodeType": "IfStatement",
												"src": "572:77:2",
												"trueBody": {
													"id": 179,
													"nodeType": "Block",
													"src": "589:60:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 176,
																	"name": "Staking__NeedsMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "610:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "610:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 178,
															"nodeType": "RevertStatement",
															"src": "603:35:2"
														}
													]
												}
											},
											{
												"id": 181,
												"nodeType": "PlaceholderStatement",
												"src": "658:1:2"
											}
										]
									},
									"id": 183,
									"name": "moreThanZero",
									"nameLocation": "533:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "554:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "546:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:16:2"
									},
									"src": "524:142:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "706:54:2",
										"statements": [
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 188,
														"name": "s_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "716:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 190,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "740:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 189,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "733:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "733:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "716:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "716:37:2"
											}
										]
									},
									"id": 195,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "692:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "684:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:22:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:0:2"
									},
									"scope": 570,
									"src": "672:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "869:1119:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 197,
																"src": "888:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "333030",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "898:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "888:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d7573742070726f766964652061746c656173742033303020746f6b656e73",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "903:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7",
																"typeString": "literal_string \"You must provide atleast 300 tokens\""
															},
															"value": "You must provide atleast 300 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba5d504ad2e8586c8144c706f183a3ee3b17adea3bc0c0344ea5cebfb1894af7",
																"typeString": "literal_string \"You must provide atleast 300 tokens\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "880:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "880:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "880:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 215,
																		"name": "stakeTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "959:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "972:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "959:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 218,
																		"name": "stakeTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "977:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "36",
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "990:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6_by_1",
																			"typeString": "int_const 6"
																		},
																		"value": "6"
																	},
																	"src": "977:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "959:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 222,
																	"name": "stakeTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "995:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3132",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_12_by_1",
																		"typeString": "int_const 12"
																	},
																	"value": "12"
																},
																"src": "995:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "959:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652070726f76696465642074696d65206973206e6f742076616c69642e206974206d75737420626520332c2036206f72203132",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1012:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188",
																"typeString": "literal_string \"The provided time is not valid. it must be 3, 6 or 12\""
															},
															"value": "The provided time is not valid. it must be 3, 6 or 12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_813952e9fab9923f2cd88aaeffe8c7421d1d5f324d890c1e14f3ad9119329188",
																"typeString": "literal_string \"The provided time is not valid. it must be 3, 6 or 12\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "951:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "951:117:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "951:117:2"
											},
											{
												"assignments": [
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 230,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "1087:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1079:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1079:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"expression": {
														"id": 231,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "1101:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1107:9:2",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "1101:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1079:37:2"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "extraTime",
														"nameLocation": "1134:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1126:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1126:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"nodeType": "VariableDeclarationStatement",
												"src": "1126:17:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "stakeTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1165:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1178:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1165:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 253,
															"name": "stakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1297:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "36",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1310:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "1297:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 269,
																"name": "stakeTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1429:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3132",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1442:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "1429:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 287,
															"nodeType": "Block",
															"src": "1559:65:2",
															"statements": [
																{
																	"expression": {
																		"hexValue": "5468652070726f76696465642074696d65206973206e6f742076616c69642e",
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1580:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0fa49f2e93d48264ab556d701996509bab601507eb1c5f6264dd480aa489d03b",
																			"typeString": "literal_string \"The provided time is not valid.\""
																		},
																		"value": "The provided time is not valid."
																	},
																	"functionReturnParameters": 206,
																	"id": 286,
																	"nodeType": "Return",
																	"src": "1573:40:2"
																}
															]
														},
														"id": 288,
														"nodeType": "IfStatement",
														"src": "1426:198:2",
														"trueBody": {
															"id": 284,
															"nodeType": "Block",
															"src": "1445:101:2",
															"statements": [
																{
																	"expression": {
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 272,
																			"name": "extraTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 235,
																			"src": "1459:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_31104000_by_1",
																				"typeString": "int_const 31104000"
																			},
																			"id": 275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3132",
																				"id": 273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1472:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_12_by_1",
																					"typeString": "int_const 12"
																				},
																				"value": "12"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3330",
																				"id": 274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1477:7:2",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2592000_by_1",
																					"typeString": "int_const 2592000"
																				},
																				"value": "30"
																			},
																			"src": "1472:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_31104000_by_1",
																				"typeString": "int_const 31104000"
																			}
																		},
																		"src": "1459:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 277,
																	"nodeType": "ExpressionStatement",
																	"src": "1459:25:2"
																},
																{
																	"expression": {
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 278,
																			"name": "currentTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 230,
																			"src": "1498:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 279,
																				"name": "currentTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 230,
																				"src": "1512:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 280,
																				"name": "extraTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 235,
																				"src": "1526:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1512:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1498:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 283,
																	"nodeType": "ExpressionStatement",
																	"src": "1498:37:2"
																}
															]
														}
													},
													"id": 289,
													"nodeType": "IfStatement",
													"src": "1294:330:2",
													"trueBody": {
														"id": 268,
														"nodeType": "Block",
														"src": "1312:100:2",
														"statements": [
															{
																"expression": {
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 256,
																		"name": "extraTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "1326:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_rational_15552000_by_1",
																			"typeString": "int_const 15552000"
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "36",
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1339:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3330",
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1343:7:2",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2592000_by_1",
																				"typeString": "int_const 2592000"
																			},
																			"value": "30"
																		},
																		"src": "1339:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15552000_by_1",
																			"typeString": "int_const 15552000"
																		}
																	},
																	"src": "1326:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 261,
																"nodeType": "ExpressionStatement",
																"src": "1326:24:2"
															},
															{
																"expression": {
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 262,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "1364:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 263,
																			"name": "currentTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 230,
																			"src": "1378:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 264,
																			"name": "extraTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 235,
																			"src": "1392:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1378:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1364:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 267,
																"nodeType": "ExpressionStatement",
																"src": "1364:37:2"
															}
														]
													}
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "1162:462:2",
												"trueBody": {
													"id": 252,
													"nodeType": "Block",
													"src": "1180:100:2",
													"statements": [
														{
															"expression": {
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 240,
																	"name": "extraTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "1194:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_rational_7776000_by_1",
																		"typeString": "int_const 7776000"
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "33",
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1207:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "3330",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1211:7:2",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2592000_by_1",
																			"typeString": "int_const 2592000"
																		},
																		"value": "30"
																	},
																	"src": "1207:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_7776000_by_1",
																		"typeString": "int_const 7776000"
																	}
																},
																"src": "1194:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 245,
															"nodeType": "ExpressionStatement",
															"src": "1194:24:2"
														},
														{
															"expression": {
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 246,
																	"name": "currentTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "1232:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 247,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "1246:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 248,
																		"name": "extraTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "1260:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1246:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1232:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 251,
															"nodeType": "ExpressionStatement",
															"src": "1232:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 291,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1634:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"expression": {
																"id": 292,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1645:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1649:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1645:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1634:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 295,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1660:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1634:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "1634:32:2"
											},
											{
												"assignments": [
													299
												],
												"declarations": [
													{
														"constant": false,
														"id": 299,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1681:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "1676:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 298,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1676:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1719:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1723:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1719:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 306,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1739:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$570",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$570",
																		"typeString": "contract Staking"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1731:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1731:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1731:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1746:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 300,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1691:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1706:12:2",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "1691:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1691:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:77:2"
											},
											{
												"condition": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1767:8:2",
													"subExpression": {
														"id": 311,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "1768:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "1763:71:2",
												"trueBody": {
													"id": 316,
													"nodeType": "Block",
													"src": "1777:57:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 313,
																	"name": "Staking__TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1798:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1798:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 315,
															"nodeType": "RevertStatement",
															"src": "1791:32:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 318,
															"name": "s_unstackTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1852:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"expression": {
																"id": 319,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1867:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1871:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1867:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1852:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 322,
														"name": "currentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "1881:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1852:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1852:40:2"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 325,
															"name": "s_minStackTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "1903:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 328,
														"indexExpression": {
															"expression": {
																"id": 326,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1919:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1923:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1919:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1903:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 329,
														"name": "stakeTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1933:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1903:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "1903:39:2"
											},
											{
												"expression": {
													"hexValue": "7375636365737366756c6c",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1959:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8e886bb3a92b8fcfccdeb76d7e1f57bda1cc81641290eb13dcb27300ea7a5f37",
														"typeString": "literal_string \"successfull\""
													},
													"value": "successfull"
												},
												"functionReturnParameters": 206,
												"id": 333,
												"nodeType": "Return",
												"src": "1952:20:2"
											}
										]
									},
									"functionSelector": "42ea02c1",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 202,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "837:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "moreThanZero",
												"nameLocations": [
													"824:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "824:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "824:20:2"
										}
									],
									"name": "stake",
									"nameLocation": "775:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "789:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "stakeTime",
												"nameLocation": "804:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "797:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 198,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "797:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:34:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "854:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "854:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:15:2"
									},
									"scope": 570,
									"src": "766:1222:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2055:1459:2",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2074:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "2066:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 340,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2066:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"baseExpression": {
														"id": 342,
														"name": "s_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 345,
													"indexExpression": {
														"expression": {
															"id": 343,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2095:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2099:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2095:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2084:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2066:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2125:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "333030",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2136:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "2125:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f7420656e6f7567682062616c616e6365",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2141:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54",
																"typeString": "literal_string \"You have not enough balance\""
															},
															"value": "You have not enough balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35b4acb4eb155fecdfcb2e59a18e02c3ac956f8ce30463952ddeef7176622a54",
																"typeString": "literal_string \"You have not enough balance\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2117:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2117:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2117:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 355,
																	"name": "s_unstackTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "2189:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"expression": {
																		"id": 356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2203:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2207:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2203:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2189:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 359,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2218:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2224:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2218:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2189:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572207374616b696e672074696d65206973206e6f7420636f6d706c65746564",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292",
																"typeString": "literal_string \"Your staking time is not completed\""
															},
															"value": "Your staking time is not completed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89dadc5ef4fa1783c0713c1e33d858817e7c5b50731c9f0adac7b39a92667292",
																"typeString": "literal_string \"Your staking time is not completed\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2181:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:91:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "2181:91:2"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "bonusTime",
														"nameLocation": "2291:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "2283:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 365,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2283:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 367,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2303:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2303:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 369,
															"name": "s_unstackTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2321:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 372,
														"indexExpression": {
															"expression": {
																"id": 370,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2335:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2339:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2335:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2321:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2303:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2283:63:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 375,
															"name": "s_minStackTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "2402:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"expression": {
																"id": 376,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2417:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2421:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2417:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2402:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2432:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "2402:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 394,
																"name": "s_minStackTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "2520:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 397,
															"indexExpression": {
																"expression": {
																	"id": 395,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2535:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2539:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2535:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2520:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "36",
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2550:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "2520:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 413,
																	"name": "s_minStackTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "2638:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 416,
																"indexExpression": {
																	"expression": {
																		"id": 414,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2653:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2657:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2653:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2638:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3132",
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2668:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"src": "2638:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 426,
														"nodeType": "IfStatement",
														"src": "2635:82:2",
														"trueBody": {
															"id": 425,
															"nodeType": "Block",
															"src": "2671:46:2",
															"statements": [
																{
																	"expression": {
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 419,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "2685:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 420,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 341,
																				"src": "2695:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2705:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "2695:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2685:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 424,
																	"nodeType": "ExpressionStatement",
																	"src": "2685:21:2"
																}
															]
														}
													},
													"id": 427,
													"nodeType": "IfStatement",
													"src": "2517:200:2",
													"trueBody": {
														"id": 412,
														"nodeType": "Block",
														"src": "2552:69:2",
														"statements": [
															{
																"expression": {
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 400,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2566:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 401,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "2576:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 404,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 402,
																									"name": "balance",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 341,
																									"src": "2589:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "3630",
																									"id": 403,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2599:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_60_by_1",
																										"typeString": "int_const 60"
																									},
																									"value": "60"
																								},
																								"src": "2589:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 405,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2588:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2605:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "2588:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 408,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2586:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2576:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2566:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 411,
																"nodeType": "ExpressionStatement",
																"src": "2566:44:2"
															}
														]
													}
												},
												"id": 428,
												"nodeType": "IfStatement",
												"src": "2399:318:2",
												"trueBody": {
													"id": 393,
													"nodeType": "Block",
													"src": "2434:69:2",
													"statements": [
														{
															"expression": {
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 381,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "2448:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 382,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2458:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 385,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 383,
																								"name": "balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 341,
																								"src": "2471:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "3330",
																								"id": 384,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2481:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_30_by_1",
																									"typeString": "int_const 30"
																								},
																								"value": "30"
																							},
																							"src": "2471:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 386,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2470:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2487:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "2470:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 389,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2468:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2458:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2448:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 392,
															"nodeType": "ExpressionStatement",
															"src": "2448:44:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 429,
														"name": "bonusTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2764:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 430,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2778:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2784:9:2",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2778:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_7776000_by_1",
																					"typeString": "int_const 7776000"
																				},
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "33",
																					"id": 432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2797:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3330",
																					"id": 433,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2800:7:2",
																					"subdenomination": "days",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2592000_by_1",
																						"typeString": "int_const 2592000"
																					},
																					"value": "30"
																				},
																				"src": "2797:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7776000_by_1",
																					"typeString": "int_const 7776000"
																				}
																			}
																		],
																		"id": 435,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2796:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7776000_by_1",
																			"typeString": "int_const 7776000"
																		}
																	},
																	"src": "2778:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 437,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2777:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 438,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2812:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2818:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2812:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2777:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2764:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 455,
															"name": "bonusTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2914:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 456,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2928:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2934:9:2",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2928:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_7776000_by_1",
																						"typeString": "int_const 7776000"
																					},
																					"id": 460,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "33",
																						"id": 458,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2947:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"hexValue": "3330",
																						"id": 459,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2950:7:2",
																						"subdenomination": "days",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2592000_by_1",
																							"typeString": "int_const 2592000"
																						},
																						"value": "30"
																					},
																					"src": "2947:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_7776000_by_1",
																						"typeString": "int_const 7776000"
																					}
																				}
																			],
																			"id": 461,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2946:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_7776000_by_1",
																				"typeString": "int_const 7776000"
																			}
																		},
																		"src": "2928:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 463,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2927:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 464,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2962:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2968:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2962:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2927:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2914:63:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "bonusTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "3064:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 482,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3078:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:9:2",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3078:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_7776000_by_1",
																							"typeString": "int_const 7776000"
																						},
																						"id": 486,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "33",
																							"id": 484,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3097:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_3_by_1",
																								"typeString": "int_const 3"
																							},
																							"value": "3"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "3330",
																							"id": 485,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3100:7:2",
																							"subdenomination": "days",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2592000_by_1",
																								"typeString": "int_const 2592000"
																							},
																							"value": "30"
																						},
																						"src": "3097:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_7776000_by_1",
																							"typeString": "int_const 7776000"
																						}
																					}
																				],
																				"id": 487,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3096:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7776000_by_1",
																					"typeString": "int_const 7776000"
																				}
																			},
																			"src": "3078:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 489,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3077:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 490,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3112:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3118:9:2",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3112:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3077:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3064:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 501,
														"nodeType": "IfStatement",
														"src": "3061:113:2",
														"trueBody": {
															"id": 500,
															"nodeType": "Block",
															"src": "3128:46:2",
															"statements": [
																{
																	"expression": {
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 494,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "3142:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 495,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 341,
																				"src": "3152:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3162:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3152:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3142:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 499,
																	"nodeType": "ExpressionStatement",
																	"src": "3142:21:2"
																}
															]
														}
													},
													"id": 502,
													"nodeType": "IfStatement",
													"src": "2911:263:2",
													"trueBody": {
														"id": 480,
														"nodeType": "Block",
														"src": "2978:69:2",
														"statements": [
															{
																"expression": {
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 468,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2992:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 469,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "3002:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 475,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 472,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 470,
																									"name": "balance",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 341,
																									"src": "3015:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "3630",
																									"id": 471,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3025:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_60_by_1",
																										"typeString": "int_const 60"
																									},
																									"value": "60"
																								},
																								"src": "3015:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 473,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3014:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"hexValue": "313030",
																						"id": 474,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3031:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"src": "3014:20:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 476,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3012:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3002:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2992:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 479,
																"nodeType": "ExpressionStatement",
																"src": "2992:44:2"
															}
														]
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "2761:413:2",
												"trueBody": {
													"id": 454,
													"nodeType": "Block",
													"src": "2828:69:2",
													"statements": [
														{
															"expression": {
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 442,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "2842:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 443,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2852:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 446,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 444,
																								"name": "balance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 341,
																								"src": "2865:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "3330",
																								"id": 445,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2875:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_30_by_1",
																									"typeString": "int_const 30"
																								},
																								"value": "30"
																							},
																							"src": "2865:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 447,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2864:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "313030",
																					"id": 448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2881:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				},
																				"src": "2864:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 450,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2862:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2852:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2842:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 453,
															"nodeType": "ExpressionStatement",
															"src": "2842:44:2"
														}
													]
												}
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "3215:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 504,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 512,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 508,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3254:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3258:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3254:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3266:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 506,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3230:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3245:8:2",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "3230:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3215:59:2"
											},
											{
												"condition": {
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3288:8:2",
													"subExpression": {
														"id": 513,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3289:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "3284:72:2",
												"trueBody": {
													"id": 518,
													"nodeType": "Block",
													"src": "3298:58:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 515,
																	"name": "Withdraw__TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "3319:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3319:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 517,
															"nodeType": "RevertStatement",
															"src": "3312:33:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 520,
															"name": "s_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3374:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 523,
														"indexExpression": {
															"expression": {
																"id": 521,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3385:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3389:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3385:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3374:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3399:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3374:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "3374:26:2"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 527,
															"name": "s_unstackTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3410:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 530,
														"indexExpression": {
															"expression": {
																"id": 528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3424:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3428:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3424:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3410:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3438:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3410:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "3410:29:2"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 534,
															"name": "s_minStackTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3449:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 537,
														"indexExpression": {
															"expression": {
																"id": 535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3464:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3468:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3464:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3449:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3478:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3449:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "3449:30:2"
											},
											{
												"expression": {
													"hexValue": "53756363657373",
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3498:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_355e5d1763a9caa371065bc3d0aa5d2e6c5d4b89afb85d93c3c3410eac6cf47c",
														"typeString": "literal_string \"Success\""
													},
													"value": "Success"
												},
												"functionReturnParameters": 339,
												"id": 542,
												"nodeType": "Return",
												"src": "3491:16:2"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2003:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2040:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2040:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:15:2"
									},
									"scope": 570,
									"src": "1994:1520:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "3586:43:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 551,
														"name": "s_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "3603:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 553,
													"indexExpression": {
														"id": 552,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "3614:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3603:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 550,
												"id": 554,
												"nodeType": "Return",
												"src": "3596:26:2"
											}
										]
									},
									"functionSelector": "399080ec",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStaked",
									"nameLocation": "3529:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3547:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3539:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:17:2"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3577:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:9:2"
									},
									"scope": 570,
									"src": "3520:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "3705:57:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "3747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 563,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "3722:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3737:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "3722:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3722:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 562,
												"id": 567,
												"nodeType": "Return",
												"src": "3715:40:2"
											}
										]
									},
									"functionSelector": "5f515226",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkBalance",
									"nameLocation": "3644:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3666:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3658:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:17:2"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3696:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:9:2"
									},
									"scope": 570,
									"src": "3635:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 571,
							"src": "283:3481:2",
							"usedErrors": [
								148,
								150,
								152
							],
							"usedEvents": []
						}
					],
					"src": "33:3731:2"
				},
				"id": 2
			}
		}
	}
}